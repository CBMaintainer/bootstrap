var vows=require("vows"),assert=require("assert"),path=require("path"),fs=require("fs"),exists=fs.existsSync||path.existsSync,base=path.join(__dirname,"./files"),cssmin=require("../cssmin").cssmin,files=fs.readdirSync(base),tests={"should be loaded":{topic:function(){return require("../cssmin").cssmin},"should be a function":function(e){assert.isFunction(e)}}};files.forEach(function(e){if(path.extname(e)===".css"){var t=path.join(base,e+".min");exists(t)&&(tests["should be loaded"][e]=function(e){var t=fs.readFileSync(path.join(base,e+".min"),"utf8").trim(),n=fs.readFileSync(path.join(base,e),"utf8").trim();return function(e){var r=e(n);assert.equal(t,r)}}(e))}});(function(){var e="linebreakpos.css";tests["should be loaded"]["and should handle linebreak"]=function(e){var t=fs.readFileSync(path.join(base,"special",e+".min"),"utf8").trim(),n=fs.readFileSync(path.join(base,"special",e),"utf8").trim();return function(e){var r=e(n,100);assert.equal(t,r)}}(e)})();vows.describe("cssmin tests").addBatch(tests).export(module);