//
// Check/radio
//

.form-check-input {
  float: var(--#{$prefix}form-check-float, left);
  width: var(--#{$prefix}form-check-input-width, $form-check-input-width);
  height: var(--#{$prefix}form-check-input-height, $form-check-input-height);
  margin: ($line-height-base - $form-check-input-width) * .5 var(--#{$prefix}form-check-input-margin-right, 0) 0 var(--#{$prefix}form-check-input-margin-left, 0); // line-height minus check height
  vertical-align: top;
  appearance: none;
  background-color: var(--#{$prefix}form-check-bg, $form-check-input-bg);
  background-image: var(--#{$prefix}form-check-bg-image);
  background-repeat: no-repeat;
  background-position: var(--#{$prefix}form-check-bg-position, center);
  background-size: contain;
  border: $form-check-input-border;
  print-color-adjust: exact; // Keep themed appearance for print
  @include transition(var(--#{$prefix}form-check-transition, $form-check-transition));
  border-radius: var(--#{$prefix}form-check-border-radius, $form-check-input-border-radius); // stylelint-disable-line property-disallowed-list

  &[type="radio"] {
    @if $enable-gradients {
      --#{$prefix}form-check-checked-bg-image: #{escape-svg($form-check-radio-checked-bg-image)}, var(--#{$prefix}gradient);
    } @else {
      --#{$prefix}form-check-checked-bg-image: #{escape-svg($form-check-radio-checked-bg-image)};
    }
    --#{$prefix}form-check-border-radius: #{$form-check-radio-border-radius};
  }

  &:active {
    filter: $form-check-input-active-filter;
  }

  &:focus {
    border-color: $form-check-input-focus-border;
    outline: 0;
    box-shadow: var(--#{$prefix}form-check-focus-box-shadow, $form-check-input-focus-box-shadow);
  }

  &:checked {
    background-color: var(--#{$prefix}form-check-checked-bg-color, $form-check-input-checked-bg-color);
    @if $enable-gradients {
      background-image: var(--#{$prefix}form-check-checked-bg-image, escape-svg($form-check-input-checked-bg-image), var(--#{$prefix}gradient));
    } @else {
      background-image: var(--#{$prefix}form-check-checked-bg-image, escape-svg($form-check-input-checked-bg-image));
    }
    background-position: var(--#{$prefix}form-check-checked-bg-position, center);
    border-color: $form-check-input-checked-border-color;
  }

  &[type="checkbox"]:indeterminate {
    background-color: $form-check-input-indeterminate-bg-color;
    border-color: $form-check-input-indeterminate-border-color;

    @if $enable-gradients {
      --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)}, var(--#{$prefix}gradient);
    } @else {
      --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)};
    }
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $form-check-input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      cursor: default;
      opacity: $form-check-label-disabled-opacity;
    }
  }
}

.form-check {
  --#{$prefix}form-check-input-margin-left: #{-$form-check-padding-start};

  display: block;
  min-height: $form-check-min-height;
  padding-left: $form-check-padding-start;
  margin-bottom: $form-check-margin-bottom;
}

.form-check-reverse {
  --#{$prefix}form-check-float: #{right};
  --#{$prefix}form-check-input-margin-left: #{0};
  --#{$prefix}form-check-input-margin-right: #{-$form-check-padding-start};

  padding-right: $form-check-padding-start;
  padding-left: 0;
  text-align: right;
}

.form-check-label {
  color: $form-check-label-color;
  cursor: $form-check-label-cursor;
}

//
// Switch
//

.form-switch {
  @if $enable-gradients {
    --#{$prefix}form-check-checked-bg-image: #{escape-svg($form-switch-checked-bg-image)}, var(--#{$prefix}gradient);
  } @else {
    --#{$prefix}form-check-checked-bg-image: #{escape-svg($form-switch-checked-bg-image)};
  }

  --#{$prefix}form-check-input-width: #{$form-switch-width};
  --#{$prefix}form-check-input-margin-left: #{-$form-switch-padding-start};
  --#{$prefix}form-check-bg-image: #{escape-svg($form-switch-bg-image)};
  --#{$prefix}form-check-bg-position: #{left center};
  --#{$prefix}form-check-checked-bg-position: #{$form-switch-checked-bg-position};
  --#{$prefix}form-check-transition: #{$form-switch-transition};
  --#{$prefix}form-check-border-radius: #{$form-switch-border-radius};

  padding-left: $form-switch-padding-start;

  &.form-check-reverse {
    --#{$prefix}form-check-input-margin-left: #{0};
    --#{$prefix}form-check-input-margin-right: #{-$form-switch-padding-start};

    padding-right: $form-switch-padding-start;
    padding-left: 0;
  }
}

.form-check-inline {
  display: inline-block;
  margin-right: $form-check-inline-margin-end;
}

.btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;

  &[disabled],
  &:disabled {
    + .btn {
      pointer-events: none;
      filter: none;
      opacity: $form-check-btn-check-disabled-opacity;
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-switch .form-check-input:not(:checked) {
      --#{$prefix}form-check-bg-image: #{escape-svg($form-switch-bg-image-dark)};
    }
  }
}
