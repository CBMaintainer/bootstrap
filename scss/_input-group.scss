
// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  .form-control,
  .custom-select,
  .custom-file,
  .btn,
  .btn-group,
  .btn-group > .btn,
  .input-group-text{
    border-radius: 0;

    // Bring the "active" form control to the top of surrounding elements
    &:focus {
      z-index: 3;
    }

    &.input-group-between{
      flex: 0 0 auto;
      width: auto;
    }

    + .form-control,
    + .custom-select,
    + .btn,
    + .input-group-text,
    + .custom-file{
      margin-left: -$input-border-width;
    }
  }

  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  .custom-file {
    display: flex;
    align-items: center;

    .custom-file-control,
    .custom-file-control::before,
    .custom-file-control::after,
    .custom-file-label,
    .custom-file-label::before,
    .custom-file-label::after{
      border-radius: 0;
    }
  }

  > .form-control,
  > .custom-select,
  > .custom-file,
  > .btn,
  > .btn-group,
  > .btn-group > .btn,
  > .input-group-text {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;
  }

  // Prepend and append rounded corners
  //
  // These rulesets must come after the sizing ones to properly override sm and lg
  // border-radius values when extending. They're more specific than we'd like
  // with the `.input-group >` part, but without it, we cannot override the sizing.

  @if $enable-rounded {
    > .input-group-prepend:first-child,
    > .input-group-append:first-child {
      > .form-control:first-child,
      > .input-group-text:first-child,
      > .btn:first-child,
      > .btn-group:first-child > .btn:first-child,
      > .custom-select:first-child,
      > .custom-file:first-child > .custom-file-control,
      > .custom-file:first-child > .custom-file-control::before,
      > .custom-file:first-child > .custom-file-label,
      > .custom-file:first-child > .custom-file-label::before {
        @include border-left-radius($input-border-radius);
      }
    }
    > .form-control:first-child,
    > .input-group-text:first-child,
    > .btn:first-child,
    > .btn-group:first-child > .btn:first-child,
    > .custom-select:first-child,
    > .custom-file:first-child > .custom-file-control,
    > .custom-file:first-child > .custom-file-control::before,
    > .custom-file:first-child > .custom-file-label,
    > .custom-file:first-child > .custom-file-label::before {
      @include border-left-radius($input-border-radius);
    }

    > .input-group-prepend:last-child,
    > .input-group-append:last-child {
      > .form-control:last-child,
      > .input-group-text:last-child,
      > .btn:last-child,
      > .btn-group:last-child > .btn:last-child,
      > .custom-select:last-child,
      > .custom-file:last-child > .custom-file-control,
      > .custom-file:last-child > .custom-file-control::before,
      > .custom-file:last-child > .custom-file-label,
      > .custom-file:last-child > .custom-file-label::before {
        @include border-right-radius($input-border-radius);
      }
    }
    > .form-control:last-child,
    > .input-group-text:last-child,
    > .btn:last-child,
    > .btn-group:last-child > .btn:last-child,
    > .custom-select:last-child,
    > .custom-file:last-child > .custom-file-control,
    > .custom-file:last-child > .custom-file-control::before,
    > .custom-file:last-child > .custom-file-label,
    > .custom-file:last-child > .custom-file-label::before {
      @include border-right-radius($input-border-radius);
    }
  }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
  display: flex;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;
  }
}

.input-group-prepend { margin-right: -$input-border-width; }
.input-group-append { margin-left: -$input-border-width; }


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base; // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-line-height;
  color: $input-group-addon-color;
  text-align: center;
  white-space: nowrap;
  background-color: $input-group-addon-bg;
  border: $input-border-width solid $input-group-addon-border-color;
  @include border-radius($input-border-radius);

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg{
  .form-control,
  .input-group-text,
  .btn,
  .custom-file,
  .custom-select{
    @extend .form-control-lg;
  }
}

.input-group-sm{
  .form-control,
  .input-group-text,
  .btn,
  .custom-file,
  .custom-select{
    @extend .form-control-sm;
  }
}
