// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix
// Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Document
//
*,
*::before,
*::after {
}
// Root
//
// Ability to the value of the root font sizes, affecting the value of `rem`.
// null by default, thus nothing is generated.
:root {
  @if $enable-smooth-scroll {
    }
  }
}
// Body
//
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Prevent adjustments of font size after orientation changes in iOS.
// 4. Change the default tap highlight to be completely transparent in iOS.
body {
  @include font-size($font-size-base);
}
// Future-proof rule: in browsers that support :focus-visible, suppress the focus outline
// on elements that programmatically receive focus but wouldn't normally show a visible
// focus outline. In general, this would mean that the outline is only applied if the
// interaction that led to the element receiving programmatic focus was a keyboard interaction,
// or the browser has somehow determined that the user is primarily a keyboard user and/or
// wants focus outlines to always be presented.
// See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
[tabindex="-1"]:focus:not(:focus-visible) {
}
// Content grouping
//
// 1. Reset Firefox's gray color
// 2. Set correct height and prevent the `size` attribute to make the `hr` look like an input field
hr {
}
hr:not([size]) {
}
// Typography
//
// 1. Remove top margins from headings
//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
//    margin for easier control within type scales as it avoids margin collapsing.
%heading {
}
h1 {
  @extend %heading;
  @include font-size($h1-font-size);
}
h2 {
  @extend %heading;
  @include font-size($h2-font-size);
}
h3 {
  @extend %heading;
  @include font-size($h3-font-size);
}
h4 {
  @extend %heading;
  @include font-size($h4-font-size);
}
h5 {
  @extend %heading;
  @include font-size($h5-font-size);
}
h6 {
  @extend %heading;
  @include font-size($h6-font-size);
}
// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
}
// Abbreviations
//
// 1. Duplicate behavior to the data-bs-* attribute for our tooltip plugin
// 2. Add the correct text decoration in Chrome, Edge, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Prevent the text-decoration to be skipped.
abbr[title],
abbr[data-bs-original-title] { // 1
}
// Address
address {
}
// Lists
ol,
ul {
  padding-right: 2rem;
}
ol,
ul,
dl {
}
ol ol,
ul ul,
ol ul,
ul ol {
}
dt {
}
// 1. Undo browser default
dd {
  margin-right: 0; // 1
}
// Blockquote
blockquote {
}
// Strong
//
// Add the correct font weight in Chrome, Edge, and Safari
b,
strong {
}
// Small
//
// Add the correct font size in all browsers
small {
  @include font-size($small-font-size);
}
// Mark
mark {
}
// Sub and Sup
//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.
sub,
sup {
  @include font-size($sub-sup-font-size);
}
// Links
a {
  &:hover {
  }
}
// And undo these styles for placeholder links/named anchors (without href).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.
a:not([href]):not([class]) {
  &,
  &:hover {
  }
}
// Code
pre,
code,
kbd,
samp {
  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.
  direction: ltr #{"/* rtl:ignore */"};
}
// 1. Remove browser default top margin
// 2. Reset browser default of `1em` to use `rem`s
// 3. Don't allow content to break outside
pre {
  @include font-size($code-font-size);
  // Account for some code outputs that place code tags in pre tags
  code {
    @include font-size(inherit);
  }
}
code {
  @include font-size($code-font-size);
  // Streamline the style when inside anchors to avoid broken underline and more
  a > & {
  }
}
kbd {
  @include font-size($kbd-font-size);
  @include border-radius($border-radius-sm);
  kbd {
    @include font-size(1em);
  }
}
// Figures
//
// Apply a consistent margin strategy (matches our type styles).
figure {
}
// Images and content
img,
svg {
}
// Tables
//
// Prevent double borders
table {
}
caption {
  text-align: right;
}
// 1. Removes font-weight bold by inheriting
// 2. Matches default `<td>` alignment by inheriting `text-align`.
// 3. Fix alignment for Safari
th {
}
thead,
tbody,
tfoot,
tr,
td,
th {
}
// Forms
//
// 1. Allow labels to use `margin` for spacing.
label {
}
// Remove the default `border-radius` that macOS Chrome adds.
button {
  // stylelint-disable-next-line property-disallowed-list
}
// Work around a Firefox bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
button:focus {
}
// 1. Remove the margin in Firefox and Safari
input,
button,
select,
optgroup,
textarea {
  @include font-size(inherit);
}
// Remove the inheritance of text transform in Firefox
button,
select {
}
// Set the cursor for non-`<button>` buttons
//
[role="button"] {
}
// Remove the inheritance of word-wrap in Safari.
select {
}
// Remove the dropdown arrow in Chrome from inputs built with datalists.
[list]::-webkit-calendar-picker-indicator {
}
// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
button,
[type="button"], // 1
[type="reset"],
[type="submit"] {
  @if $enable-button-pointers {
    &:not(:disabled) {
    }
  }
}
// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
::-moz-focus-inner {
}
// 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.
textarea {
}
//    So we reset that to ensure fieldsets behave more like a standard block element.
// 2. Reset the default outline behavior of fieldsets so they don't affect page layout.
fieldset {
}
// 1. By using `float: right`, the legend will behave like a block element.
//    This way the border of a fieldset wraps around the legend if present.
// 2. Fix wrapping bug.
legend {
  float: right; // 1
  @include font-size($legend-font-size);
  + * {
    clear: right; // 2
  }
}
// Fix height of inputs with a type of datetime-local, date, month, week, or time
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
}
::-webkit-inner-spin-button {
}
// 1. Correct the outline style in Safari.
// 2. This overrides the extra rounded corners on search inputs in iOS so that our
//    `.form-control` class can properly style them. Note that this cannot simply
//    be added to `.form-control` as it's not specific enough. For details, see
[type="search"] {
}
// 1. A few input types should stay LTR
// 2. RTL only output
/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
}
*/
// Remove the inner padding in Chrome and Safari on macOS.
::-webkit-search-decoration {
}
// Remove padding around color pickers in webkit browsers
::-webkit-color-swatch-wrapper {
}
// Inherit font family and line height for file input buttons
// stylelint-disable-next-line selector-pseudo-element-no-unknown
::file-selector-button {
}
// 1. Change font properties to `inherit`
// 2. Correct the inability to style clickable types in iOS and Safari.
::-webkit-file-upload-button {
}
// Correct element displays
output {
}
// Remove border from iframe
iframe {
}
// Summary
//
// 1. Add the correct display in all browsers
summary {
}
// Progress
//
// Add the correct vertical alignment in Chrome, Firefox, and Opera.
progress {
}
// Hidden attribute
//
// Always hide an element with the `hidden` HTML attribute.
[hidden] {
}
