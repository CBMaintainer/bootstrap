//
// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)
//    even when their scroll action started on a carousel, but for compatibility (with Firefox)
//    we're preventing all actions instead
// 2. The .carousel-item-start and .carousel-item-end is used to indicate where
//    the active slide is heading.
// 3. .active.carousel-item is the current slide.
// 4. .active.carousel-item-start and .active.carousel-item-end is the current
//    slide in its in-transition state. Only one of these occurs at a time.
// 5. .carousel-item-next.carousel-item-start and .carousel-item-prev.carousel-item-end
//    is the upcoming slide in transition.
.carousel {
}
.carousel.pointer-event {
}
.carousel-inner {
  @include clearfix();
}
.carousel-item {
  float: right;
  margin-left: -100%;
  @include transition($carousel-transition);
}
.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
}
/* rtl:begin:ignore */
.carousel-item-next:not(.carousel-item-start),
.active.carousel-item-end {
}
.carousel-item-prev:not(.carousel-item-end),
.active.carousel-item-start {
}
/* rtl:end:ignore */
//
// Alternate transitions
//
.carousel-fade {
  .carousel-item {
  }
  .carousel-item.active,
  .carousel-item-next.carousel-item-start,
  .carousel-item-prev.carousel-item-end {
  }
  .active.carousel-item-start,
  .active.carousel-item-end {
    @include transition(opacity 0s $carousel-transition-duration);
  }
}
//
// right/left controls for nav
//
.carousel-control-prev,
.carousel-control-next {
  // Use flex for alignment (1-3)
  @include transition($carousel-control-transition);
  // Hover/focus state
  &:hover,
  &:focus {
  }
}
.carousel-control-prev {
  right: 0;
}
.carousel-control-next {
  left: 0;
}
// Icons for within
.carousel-control-prev-icon,
.carousel-control-next-icon {
}
/* rtl:options: {
  } ]
} */
.carousel-control-prev-icon {
}
.carousel-control-next-icon {
}
// Optional indicator pips
//
// Add an ordered list with the following class and add a list item for each
// slide your carousel holds.
.carousel-indicators {
  left: 0;
  right: 0;
  padding-right: 0; // override <ol> default
  // Use the .carousel-control's width as margin so we don't overlay those
  margin-left: $carousel-control-width;
  margin-right: $carousel-control-width;
  li {
    margin-left: $carousel-indicator-spacer;
    margin-right: $carousel-indicator-spacer;
    // Use transparent borders to increase the hit area by 10px on top and bottom.
    @include transition($carousel-indicator-transition);
  }
  .active {
  }
}
// Optional captions
//
//
.carousel-caption {
  left: (100% - $carousel-caption-width) / 2;
  right: (100% - $carousel-caption-width) / 2;
}
// Dark mode carousel
.carousel-dark {
  .carousel-control-prev-icon,
  .carousel-control-next-icon {
  }
  .carousel-indicators li {
  }
  .carousel-caption {
  }
}
