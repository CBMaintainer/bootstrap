// Base class
//
// Easily usable on <ul>, <ol>, or <div>.
.list-group {
  padding-right: 0; // reset padding because ul and ol
  @include border-radius($list-group-border-radius);
}
// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.
.list-group-item-action {
  // Hover state
  &:hover,
  &:focus {
  }
  &:active {
  }
}
// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.
.list-group-item {
  &:first-child {
    @include border-top-radius(inherit);
  }
  &:last-child {
    @include border-bottom-radius(inherit);
  }
  &.disabled,
  &:disabled {
  }
  // Include both here for `<a>`s and `<button>`s
  &.active {
  }
  & + & {
    &.active {
    }
  }
}
// Horizontal
//
// Change the layout of list group items from vertical (default) to horizontal.
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .list-group-horizontal#{$infix} {
      > .list-group-item {
        &:first-child {
          @include border-bottom-start-radius($list-group-border-radius);
          @include border-top-end-radius(0);
        }
        &:last-child {
          @include border-top-end-radius($list-group-border-radius);
          @include border-bottom-start-radius(0);
        }
        &.active {
        }
        + .list-group-item {
          border-right-width: 0;
          &.active {
            margin-right: -$list-group-border-width;
            border-right-width: $list-group-border-width;
          }
        }
      }
    }
  }
}
// Flush list items
//
// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).
.list-group-flush {
  @include border-radius(0);
  > .list-group-item {
    &:last-child {
    }
  }
}
// scss-docs-start list-group-modifiers
// List group contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.
@each $state, $value in $theme-colors {
  @if (contrast-ratio($list-group-background, $list-group-color) < $min-contrast-ratio) {
  }
  @include list-group-item-variant($state, $list-group-background, $list-group-color);
}
// scss-docs-end list-group-modifiers
