// stylelint-disable selector-max-type

//
// Basic Bootstrap table
//

.table {
  width: 100%;
  margin-bottom: $spacer;
  background-color: $table-bg;
  border-color: $table-border-color;

  > thead {
    vertical-align: bottom;
  }

  > tbody {
    vertical-align: $table-vertical-align;
  }

  > tfoot {
    vertical-align: top;
  }

  > thead,
  > tbody,
  > tfoot {
    border-color: inherit;

    @if (not $table-show-border-top) {
      &:first-child {
        > tr:first-child {
          > th,
          > td {
            border-top-style: none;
          }
        }
      }
    }

    // Border between thead, tbody & tfoot
    &:not(:first-child) {
      > tr:first-child {
        > th,
        > td {
          border-top-width: (2 * $table-border-width);
        }
      }
    }

    @if ($table-show-border-bottom) {
      &:last-child {
        > tr:last-child {
          > th,
          > td {
            border-bottom-style: solid;
          }
        }
      }
    }

    > tr {
      border-color: inherit;

      > th,
      > td {
        padding: $table-cell-padding;
        border-color: inherit;
        border-width: $table-border-width;
        border-top-style: solid;
      }
    }
  }
}

//
// Condensed table w/ half padding
//

.table-sm {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: $table-cell-padding-sm;
      }
    }
  }
}

// Border versions
//
// Add or remove borders all around the table and between all the columns.

.table-bordered {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        // Important is used to overrule the removal of the top border
        // if `$table-show-border-top` is false
        // stylelint-disable-next-line declaration-no-important
        border-style: solid !important;
        border-width: $table-border-width;
      }
    }
  }
}

.table-borderless {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        // Important is used to overrule the top border
        // if `$table-show-border-bottom` is true
        // stylelint-disable-next-line declaration-no-important
        border-style: none !important;
      }
    }
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  > tbody > tr:nth-of-type(#{$table-striped-order}) {
    > td,
    > th {
      // Box shadow is used in stead of background color so that colored tables can be themed easily.
      box-shadow: inset 0 0 0 999rem $table-accent-bg;
    }
  }
}

// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  > tbody > tr {
    > td,
    > th {
      @include transition($table-hover-bg-transition);
    }

    @include hover {
      > td,
      > th {
        // Box shadow is used in stead of background color so that colored tables can be themed easily.
        box-shadow: inset 0 0 0 999rem $table-hover-bg;
      }
    }
  }
}

// Colored tables
//
// Because border and background colors are always inherited, these classes
// can be added to the table, thead, tbody, tfoot, tr, td and th elements.
//
@each $table-color, $background-color in $table-colors {
  // Double selector increases specificity
  .table-#{$table-color}.table-#{$table-color} {
    @include table-background($background-color);
  }
}

// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar; // See https://github.com/twbs/bootstrap/pull/10057
      }
    }
  }
}
