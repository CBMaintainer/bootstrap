[["Map",1,2,9,10,131,132],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.4.2","content-config-digest","55f4119cedb28735","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://getbootstrap.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"prism\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,null],\"rehypePlugins\":[null,[null,{\"behavior\":\"append\",\"content\":[{\"type\":\"text\",\"value\":\" \"}],\"properties\":{\"class\":\"anchor-link\"}}],null],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":false},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","callouts",["Map",11,12,26,27,41,42,56,57,71,72,86,87,101,102,116,117],"info-mediaqueries-breakpoints",{"id":11,"data":13,"body":14,"filePath":15,"digest":16,"rendered":17,"legacyId":25},{},"**Why subtract .02px?** Browsers don't currently support [range context queries](https://www.w3.org/TR/mediaqueries-4/#range-context), so we work around the limitations of [`min-` and `max-` prefixes](https://www.w3.org/TR/mediaqueries-4/#mq-min-max) and viewports with fractional widths (which can occur under certain conditions on high-dpi devices, for instance) by using values with higher precision.","src/content/callouts/info-mediaqueries-breakpoints.md","cf3c1ee7bdc70ef6",{"html":18,"metadata":19},"\u003Cp>\u003Cstrong>Why subtract .02px?\u003C/strong> Browsers don't currently support \u003Ca href=\"https://www.w3.org/TR/mediaqueries-4/#range-context\">range context queries\u003C/a>, so we work around the limitations of \u003Ca href=\"https://www.w3.org/TR/mediaqueries-4/#mq-min-max\">\u003Ccode>min-\u003C/code> and \u003Ccode>max-\u003C/code> prefixes\u003C/a> and viewports with fractional widths (which can occur under certain conditions on high-dpi devices, for instance) by using values with higher precision.\u003C/p>",{"headings":20,"localImagePaths":21,"remoteImagePaths":22,"frontmatter":23,"imagePaths":24},[],[],[],{},[],"info-mediaqueries-breakpoints.md","danger-async-methods",{"id":26,"data":28,"body":29,"filePath":30,"digest":31,"rendered":32,"legacyId":40},{},"**All API methods are asynchronous and start a transition.** They return to the caller as soon as the transition is started, but before it ends. In addition, a method call on a transitioning component will be ignored. [Learn more in our JavaScript docs.](/docs/[[config:docs_version]]/getting-started/javascript/#asynchronous-functions-and-transitions)","src/content/callouts/danger-async-methods.md","9c0d127fac13cbab",{"html":33,"metadata":34},"\u003Cp>\u003Cstrong>All API methods are asynchronous and start a transition.\u003C/strong> They return to the caller as soon as the transition is started, but before it ends. In addition, a method call on a transitioning component will be ignored. \u003Ca href=\"/docs/5.3/getting-started/javascript/#asynchronous-functions-and-transitions\">Learn more in our JavaScript docs.\u003C/a>\u003C/p>",{"headings":35,"localImagePaths":36,"remoteImagePaths":37,"frontmatter":38,"imagePaths":39},[],[],[],{},[],"danger-async-methods.md","info-sanitizer",{"id":41,"data":43,"body":44,"filePath":45,"digest":46,"rendered":47,"legacyId":55},{},"By default, this component uses the built-in content sanitizer, which strips out any HTML elements that are not explicitly allowed. See the [sanitizer section in our JavaScript documentation](/docs/[[config:docs_version]]/getting-started/javascript/#sanitizer) for more details.","src/content/callouts/info-sanitizer.md","223886390d6d5205",{"html":48,"metadata":49},"\u003Cp>By default, this component uses the built-in content sanitizer, which strips out any HTML elements that are not explicitly allowed. See the \u003Ca href=\"/docs/5.3/getting-started/javascript/#sanitizer\">sanitizer section in our JavaScript documentation\u003C/a> for more details.\u003C/p>",{"headings":50,"localImagePaths":51,"remoteImagePaths":52,"frontmatter":53,"imagePaths":54},[],[],[],{},[],"info-sanitizer.md","info-npm-starter",{"id":56,"data":58,"body":59,"filePath":60,"digest":61,"rendered":62,"legacyId":70},{},"**Get started with Bootstrap via npm with our starter project!** Head to the [Sass & JS example](https://github.com/twbs/examples/tree/main/sass-js) template repository to see how to build and customize Bootstrap in your own npm project. Includes Sass compiler, Autoprefixer, Stylelint, PurgeCSS, and Bootstrap Icons.","src/content/callouts/info-npm-starter.md","2f6e891b396b9472",{"html":63,"metadata":64},"\u003Cp>\u003Cstrong>Get started with Bootstrap via npm with our starter project!\u003C/strong> Head to the \u003Ca href=\"https://github.com/twbs/examples/tree/main/sass-js\">Sass &#x26; JS example\u003C/a> template repository to see how to build and customize Bootstrap in your own npm project. Includes Sass compiler, Autoprefixer, Stylelint, PurgeCSS, and Bootstrap Icons.\u003C/p>",{"headings":65,"localImagePaths":66,"remoteImagePaths":67,"frontmatter":68,"imagePaths":69},[],[],[],{},[],"info-npm-starter.md","warning-input-support",{"id":71,"data":73,"body":74,"filePath":75,"digest":76,"rendered":77,"legacyId":85},{},"Some date inputs types are [not fully supported](https://caniuse.com/input-datetime) by the latest versions of Safari and Firefox.","src/content/callouts/warning-input-support.md","2eff92fcab0109d0",{"html":78,"metadata":79},"\u003Cp>Some date inputs types are \u003Ca href=\"https://caniuse.com/input-datetime\">not fully supported\u003C/a> by the latest versions of Safari and Firefox.\u003C/p>",{"headings":80,"localImagePaths":81,"remoteImagePaths":82,"frontmatter":83,"imagePaths":84},[],[],[],{},[],"warning-input-support.md","info-prefersreducedmotion",{"id":86,"data":88,"body":89,"filePath":90,"digest":91,"rendered":92,"legacyId":100},{},"The animation effect of this component is dependent on the `prefers-reduced-motion` media query. See the [reduced motion section of our accessibility documentation](/docs/[[config:docs_version]]/getting-started/accessibility/#reduced-motion).","src/content/callouts/info-prefersreducedmotion.md","5d3fba76d4903cd2",{"html":93,"metadata":94},"\u003Cp>The animation effect of this component is dependent on the \u003Ccode>prefers-reduced-motion\u003C/code> media query. See the \u003Ca href=\"/docs/5.3/getting-started/accessibility/#reduced-motion\">reduced motion section of our accessibility documentation\u003C/a>.\u003C/p>",{"headings":95,"localImagePaths":96,"remoteImagePaths":97,"frontmatter":98,"imagePaths":99},[],[],[],{},[],"info-prefersreducedmotion.md","warning-color-assistive-technologies",{"id":101,"data":103,"body":104,"filePath":105,"digest":106,"rendered":107,"legacyId":115},{},"**Accessibility tip:** Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies like screen readers. Please ensure the meaning is obvious from the content itself (e.g., the visible text with a [_sufficient_ color contrast](/docs/[[config:docs_version]]/getting-started/accessibility/#color-contrast)) or is included through alternative means, such as additional text hidden with the `.visually-hidden` class.","src/content/callouts/warning-color-assistive-technologies.md","8b6512e777588344",{"html":108,"metadata":109},"\u003Cp>\u003Cstrong>Accessibility tip:\u003C/strong> Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies like screen readers. Please ensure the meaning is obvious from the content itself (e.g., the visible text with a \u003Ca href=\"/docs/5.3/getting-started/accessibility/#color-contrast\">\u003Cem>sufficient\u003C/em> color contrast\u003C/a>) or is included through alternative means, such as additional text hidden with the \u003Ccode>.visually-hidden\u003C/code> class.\u003C/p>",{"headings":110,"localImagePaths":111,"remoteImagePaths":112,"frontmatter":113,"imagePaths":114},[],[],[],{},[],"warning-color-assistive-technologies.md","warning-data-bs-title-vs-title",{"id":116,"data":118,"body":119,"filePath":120,"digest":121,"rendered":122,"legacyId":130},{},"Feel free to use either `title` or `data-bs-title` in your HTML. When `title` is used, Popper will replace it automatically with `data-bs-title` when the element is rendered.","src/content/callouts/warning-data-bs-title-vs-title.md","4166d28547478b6d",{"html":123,"metadata":124},"\u003Cp>Feel free to use either \u003Ccode>title\u003C/code> or \u003Ccode>data-bs-title\u003C/code> in your HTML. When \u003Ccode>title\u003C/code> is used, Popper will replace it automatically with \u003Ccode>data-bs-title\u003C/code> when the element is rendered.\u003C/p>",{"headings":125,"localImagePaths":126,"remoteImagePaths":127,"frontmatter":128,"imagePaths":129},[],[],[],{},[],"warning-data-bs-title-vs-title.md","docs",["Map",133,134,144,145,153,154,162,163,174,175,183,184,192,193,201,202,210,211,220,221,230,231,239,240,248,249,259,260,268,269,277,278,286,287,295,296,304,305,330,331,338,339,347,348,356,357,365,366,377,378,386,387,395,396,404,405,413,414,422,423,431,432,440,441,449,450,458,459,467,468,477,478,486,487,495,496,506,507,515,516,524,525,533,534,542,543,551,552,560,561,571,572,580,581,589,590,599,600,608,609,641,642,649,650,657,658,666,667,677,678,685,686,693,694,702,703,711,712,720,721,731,732,740,741,753,754,762,763,772,773,781,782,790,791,800,801,812,813,822,823,832,833,841,842,851,852,861,862,870,871,879,880,889,890,898,899,907,908,917,918,927,928,937,938,946,947,955,956,965,966,974,975,983,984,992,993,1001,1002,1011,1012,1020,1021,1029,1030,1038,1039,1047,1048,1056,1057,1065,1066,1074,1075,1084,1085,1094,1095,1104,1105,1113,1114,1121,1122,1130,1131,1139,1140,1148,1149,1157,1158,1166,1167,1175,1176],"docsref",{"id":133,"data":135,"body":140,"filePath":141,"digest":142,"legacyId":143,"deferredRender":139},{"aliases":136,"description":137,"title":138,"toc":139},"/docsref/","Examples of Bootstrap's documentation-specific components and styles.","Docs reference",true,"## Buttons\n\n\u003Cbutton class=\"btn btn-bd-primary\">Primary button\u003C/button>\n\u003Cbutton class=\"btn btn-bd-accent\">Accent button\u003C/button>\n\u003Cbutton class=\"btn btn-bd-light\">Light button\u003C/button>\n\n## Callouts\n\n\u003CCallout>\n  Default callout\n\u003C/Callout>\n\n\u003CCallout type=\"warning\">\n  Warning callout\n\u003C/Callout>\n\n\u003CCallout type=\"danger\">\n  Danger callout\n\u003C/Callout>\n\n## Code example\n\n```scss\n.test {\n  --color: blue;\n}\n```\n\n\u003Cdiv class=\"bd-example\">\n  The \u003Cabbr title=\"HyperText Markup Language\">HTML\u003C/abbr> abbreviation element.\n\u003C/div>\n\n\u003CExample code={`\u003Cdiv class=\"test\">This is a test.\u003C/div>`} />\n\n\u003CScssDocs name=\"variable-gradient\" file=\"scss/_variables.scss\" />\n\n\u003CJsDocs name=\"live-toast\" file=\"site/src/assets/partials/snippets.js\" />","src/content/docs/docsref.mdx","d91e6f101bfa6222","docsref.mdx","about/brand",{"id":144,"data":146,"body":149,"filePath":150,"digest":151,"legacyId":152,"deferredRender":139},{"description":147,"title":148,"toc":139},"Documentation and examples for Bootstrap's logo and brand usage guidelines.","Brand guidelines","Have a need for Bootstrap's brand resources? Great! We have only a few guidelines we follow, and in turn ask you to follow as well.\n\n## Logo\n\nWhen referencing Bootstrap, use our logo mark. Do not modify our logos in any way. Do not use Bootstrap's branding for your own open or closed source projects.\n\n\u003Cdiv class=\"bd-brand-item px-2 py-5 mb-3 border rounded-3\">\n  \u003Cimg class=\"d-block img-fluid mx-auto\" src=\"/docs/[[config:docs_version]]/assets/brand/bootstrap-logo.svg\" alt=\"Bootstrap\" width=\"256\" height=\"204\" />\n\u003C/div>\n\nOur logo mark is also available in black and white. All rules for our primary logo apply to these as well.\n\n\u003Cdiv class=\"bd-brand-logos d-sm-flex text-center bg-light rounded-3 overflow-hidden w-100 mb-3\">\n  \u003Cdiv class=\"bd-brand-item w-100 px-2 py-5\">\n    \u003Cimg src=\"/docs/[[config:docs_version]]/assets/brand/bootstrap-logo-black.svg\" alt=\"Bootstrap\" width=\"128\" height=\"102\" loading=\"lazy\" />\n  \u003C/div>\n  \u003Cdiv class=\"bd-brand-item w-100 px-2 py-5 inverse\">\n    \u003Cimg src=\"/docs/[[config:docs_version]]/assets/brand/bootstrap-logo-white.svg\" alt=\"Bootstrap\" width=\"128\" height=\"102\" loading=\"lazy\" />\n  \u003C/div>\n\u003C/div>\n\n## Name\n\nBootstrap should always be referred to as just **Bootstrap**. No capital _s_.\n\n\u003Cdiv class=\"bd-brand-logos d-sm-flex text-center border rounded-3 overflow-hidden w-100 mb-3\">\n  \u003Cdiv class=\"bd-brand-item w-100 px-2 py-5\">\n    \u003Cdiv class=\"h3\">Bootstrap\u003C/div>\n    \u003Cstrong class=\"text-success\">Correct\u003C/strong>\n  \u003C/div>\n  \u003Cdiv class=\"bd-brand-item w-100 px-2 py-5\">\n    \u003Cdiv class=\"h3 text-body-secondary\">BootStrap\u003C/div>\n    \u003Cstrong class=\"text-danger\">Incorrect\u003C/strong>\n  \u003C/div>\n\u003C/div>","src/content/docs/about/brand.mdx","96bb8191532b6d99","about/brand.mdx","about/license",{"id":153,"data":155,"body":158,"filePath":159,"digest":160,"legacyId":161,"deferredRender":139},{"description":156,"title":157},"Commonly asked questions about Bootstrap's open source license.","License FAQs","Bootstrap is released under the MIT license and is copyright {new Date().getFullYear()}. Boiled down to smaller chunks, it can be described with the following conditions.\n\n## It requires you to:\n\n- Keep the license and copyright notice included in Bootstrap's CSS and JavaScript files when you use them in your works\n\n## It permits you to:\n\n- Freely download and use Bootstrap, in whole or in part, for personal, private, company internal, or commercial purposes\n- Use Bootstrap in packages or distributions that you create\n- Modify the source code\n- Grant a sublicense to modify and distribute Bootstrap to third parties not included in the license\n\n## It forbids you to:\n\n- Hold the authors and license owners liable for damages as Bootstrap is provided without warranty\n- Hold the creators or copyright holders of Bootstrap liable\n- Redistribute any piece of Bootstrap without proper attribution\n- Use any marks owned by Bootstrap in any way that might state or imply that Bootstrap endorses your distribution\n- Use any marks owned by Bootstrap in any way that might state or imply that you created the Bootstrap software in question\n\n## It does not require you to:\n\n- Include the source of Bootstrap itself, or of any modifications you may have made to it, in any redistribution you may assemble that includes it\n- Submit changes that you make to Bootstrap back to the Bootstrap project (though such feedback is encouraged)\n\nThe full Bootstrap license is located [in the project repository]([[config:repo]]/blob/v[[config:current_version]]/LICENSE) for more information.","src/content/docs/about/license.mdx","4a117d7276c78a51","about/license.mdx","about/overview",{"id":162,"data":164,"body":170,"filePath":171,"digest":172,"legacyId":173,"deferredRender":139},{"aliases":165,"description":168,"title":169},[166,167],"/about/","/docs/[[config:docs_version]]/about/","Learn more about the team maintaining Bootstrap, how and why the project started, and how to get involved.","About Bootstrap","## Team\n\nBootstrap is maintained by a [small team of developers](https://github.com/orgs/twbs/people) on GitHub. We're actively looking to grow this team and would love to hear from you if you're excited about CSS at scale, writing and maintaining vanilla JavaScript plugins, and improving build tooling processes for frontend code.\n\n## History\n\nOriginally created by a designer and a developer at Twitter, Bootstrap has become one of the most popular front-end frameworks and open source projects in the world.\n\nBootstrap was created at Twitter in mid-2010 by [@mdo](https://twitter.com/mdo) and [@fat](https://twitter.com/fat). Prior to being an open-sourced framework, Bootstrap was known as _Twitter Blueprint_. A few months into development, Twitter held its [first Hack Week](https://blog.twitter.com/engineering/en_us/a/2010/hack-week) and the project exploded as developers of all skill levels jumped in without any external guidance. It served as the style guide for internal tools development at the company for over a year before its public release, and continues to do so today.\n\nOriginally [released](https://blog.twitter.com/developer/en_us/a/2011/bootstrap-twitter) on \u003Ctime datetime=\"2011-08-19 11:25\">Friday, August 19, 2011\u003C/time>, we've since had over [twenty releases]([[config:repo]]/releases), including two major rewrites with v2 and v3. With Bootstrap 2, we added responsive functionality to the entire framework as an optional stylesheet. Building on that with Bootstrap 3, we rewrote the library once more to make it responsive by default with a mobile first approach.\n\nWith Bootstrap 4, we once again rewrote the project to account for two key architectural changes: a migration to Sass and the move to CSS's flexbox. Our intention is to help in a small way to move the web development community forward by pushing for newer CSS properties, fewer dependencies, and new technologies across more modern browsers.\n\nOur latest release, Bootstrap 5, focuses on improving v4's codebase with as few major breaking changes as possible. We improved existing features and components, removed support for older browsers, dropped jQuery for regular JavaScript, and embraced more future-friendly technologies like CSS custom properties as part of our tooling.\n\n## Get involved\n\nGet involved with Bootstrap development by [opening an issue]([[config:repo]]/issues/new/choose) or submitting a pull request. Read our [contributing guidelines]([[config:repo]]/blob/v[[config:current_version]]/.github/CONTRIBUTING.md) for information on how we develop.","src/content/docs/about/overview.mdx","4b954ae8fb0dbc70","about/overview.mdx","content/figures",{"id":174,"data":176,"body":179,"filePath":180,"digest":181,"legacyId":182,"deferredRender":139},{"description":177,"title":178,"toc":139},"Documentation and examples for displaying related images and text with the figure component in Bootstrap.","Figures","Anytime you need to display a piece of content—like an image with an optional caption, consider using a `\u003Cfigure>`.\n\nUse the included `.figure`, `.figure-img` and `.figure-caption` classes to provide some baseline styles for the HTML5 `\u003Cfigure>` and `\u003Cfigcaption>` elements. Images in figures have no explicit size, so be sure to add the `.img-fluid` class to your `\u003Cimg>` to make it responsive.\n\n\u003CExample code={`\u003Cfigure class=\"figure\">\n  \u003CPlaceholder width=\"400\" height=\"300\" class=\"figure-img img-fluid rounded\" />\n  \u003Cfigcaption class=\"figure-caption\">A caption for the above image.\u003C/figcaption>\n\u003C/figure>`} />\n\nAligning the figure's caption is easy with our [text utilities]([[docsref:/utilities/text#text-alignment]]).\n\n\u003CExample code={`\u003Cfigure class=\"figure\">\n  \u003CPlaceholder width=\"400\" height=\"300\" class=\"figure-img img-fluid rounded\" />\n  \u003Cfigcaption class=\"figure-caption text-end\">A caption for the above image.\u003C/figcaption>\n\u003C/figure>`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"figure-variables\" file=\"scss/_variables.scss\" />","src/content/docs/content/figures.mdx","8e9e02b0609a0ea1","content/figures.mdx","about/translations",{"id":183,"data":185,"body":188,"filePath":189,"digest":190,"legacyId":191,"deferredRender":139},{"description":186,"title":187},"Links to community-translated Bootstrap documentation sites.","Translations","import { getData } from '@libs/data'\n\nCommunity members have translated Bootstrap's documentation into various languages. None are officially supported and they may not always be up-to-date.\n\n\u003Cul>\n  {getData('translations').map((translation) => {\n    return (\n      \u003Cli>\u003Ca href={translation.url} hreflang={translation.code} lang={translation.code} >{translation.description} ({translation.name})\u003C/a>\u003C/li>\n    )\n  })}\n\u003C/ul>\n\n**We don't help organize or host translations, we just link to them.**\n\nFinished a new or better translation? Open a pull request to add it to our list.","src/content/docs/about/translations.mdx","d263fcb790208710","about/translations.mdx","about/team",{"id":192,"data":194,"body":197,"filePath":198,"digest":199,"legacyId":200,"deferredRender":139},{"description":195,"title":196},"An overview of the founding team and core contributors to Bootstrap.","Team","import { getData } from '@libs/data'\n\nBootstrap is maintained by the founding team and a small group of invaluable core contributors, with the massive support and involvement of our community.\n\n\u003Cdiv class=\"list-group mb-3\">\n  {getData('core-team').map((member) => {\n    return (\n      \u003Ca class=\"list-group-item list-group-item-action d-flex align-items-center\" href={`https://github.com/${member.user}`}>\n        \u003Cimg src={`https://github.com/${member.user}.png`} alt={`@${member.user}`} width=\"32\" height=\"32\" class=\"rounded me-2\" loading=\"lazy\"/>\n        \u003Cspan>\n          \u003Cstrong>{member.name}\u003C/strong> @{member.user}\n        \u003C/span>\n      \u003C/a>\n    )\n  })}\n\u003C/div>\n\nGet involved with Bootstrap development by [opening an issue]([[config:repo]]/issues/new/choose) or submitting a pull request. Read our [contributing guidelines]([[config:repo]]/blob/v[[config:current_version]]/.github/CONTRIBUTING.md) for information on how we develop.","src/content/docs/about/team.mdx","83c42af188b202dd","about/team.mdx","content/images",{"id":201,"data":203,"body":206,"filePath":207,"digest":208,"legacyId":209,"deferredRender":139},{"description":204,"title":205,"toc":139},"Documentation and examples for opting images into responsive behavior (so they never become wider than their parent) and add lightweight styles to them—all via classes.","Images","## Responsive images\n\nImages in Bootstrap are made responsive with `.img-fluid`. This applies `max-width: 100%;` and `height: auto;` to the image so that it scales with the parent width.\n\n\u003CExample code={`\u003CPlaceholder width=\"100%\" height=\"250\" class=\"bd-placeholder-img-lg img-fluid\" text=\"Responsive image\" />`} />\n\n## Image thumbnails\n\nIn addition to our [border-radius utilities]([[docsref:/utilities/borders]]), you can use `.img-thumbnail` to give an image a rounded 1px border appearance.\n\n\u003CExample code={`\u003CPlaceholder width=\"200\" height=\"200\" class=\"img-thumbnail\" title=\"A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera\" />`} />\n\n## Aligning images\n\nAlign images with the [helper float classes]([[docsref:/utilities/float]]) or [text alignment classes]([[docsref:/utilities/text#text-alignment]]). `block`-level images can be centered using [the `.mx-auto` margin utility class]([[docsref:/utilities/spacing#horizontal-centering]]).\n\n\u003CExample code={`\u003CPlaceholder width=\"200\" height=\"200\" class=\"rounded float-start\" />\n\u003CPlaceholder width=\"200\" height=\"200\" class=\"rounded float-end\" />`} />\n\n\n\u003CExample code={`\u003CPlaceholder width=\"200\" height=\"200\" class=\"rounded mx-auto d-block\" />`} />\n\n\u003CExample code={`\u003Cdiv class=\"text-center\">\n  \u003CPlaceholder width=\"200\" height=\"200\" class=\"rounded\" />\n\u003C/div>`} />\n\n\n## Picture\n\nIf you are using the `\u003Cpicture>` element to specify multiple `\u003Csource>` elements for a specific `\u003Cimg>`, make sure to add the `.img-*` classes to the `\u003Cimg>` and not to the `\u003Cpicture>` tag.\n\n```html\n\u003Cpicture>\n  \u003Csource srcset=\"...\" type=\"image/svg+xml\">\n  \u003Cimg src=\"...\" class=\"img-fluid img-thumbnail\" alt=\"...\">\n\u003C/picture>\n```\n\n## CSS\n\n### Sass variables\n\nVariables are available for image thumbnails.\n\n\u003CScssDocs name=\"thumbnail-variables\" file=\"scss/_variables.scss\" />","src/content/docs/content/images.mdx","fc8e095236d90181","content/images.mdx","migration",{"id":210,"data":212,"body":216,"filePath":217,"digest":218,"legacyId":219,"deferredRender":139},{"aliases":213,"description":214,"title":215,"toc":139},"/migration/","Track and review changes to the Bootstrap source files, documentation, and components to help you migrate from v4 to v5.","Migrating to v5","## v5.3.4\n\n### Dependencies\n\n- Migrated from Hugo to Astro for building our documentation\n\n## v5.3.0\n\nIf you're migrating from our previous alpha releases of v5.3.0, please review their changes in addition to this section.\n\n### Helpers\n\n- [Colored links]([[docsref:/helpers/colored-links]]) once again have `!important` so they work better with our newly added link utilities.\n\n### Utilities\n\n- Added new `.d-inline-grid` [display utility]([[docsref:/utilities/display]]).\n\n## v5.3.0-alpha2\n\nIf you're migrating from our previous alpha release of v5.3.0, please review the changes listed below.\n\n### CSS variables\n\n- Removed several duplicate and unused root CSS variables.\n\n### Color modes\n\n- Dark mode colors are now derived from our theme colors (e.g., `$primary`) in Sass, rather than color specific tints or shades (e.g., `$blue-300`). This allows for a more automated dark mode when customizing the default theme colors.\n\n- Added Sass maps for generating theme colors for dark mode text, subtle background, and subtle border.\n\n- [Snippet examples]([[docsref:/examples/#snippets]]) are now ready for dark mode with updated markup and reduced custom styles.\n\n- Added `color-scheme: dark` to dark mode CSS to change OS level controls like scrollbars\n\n- Form validation `border-color` and text `color` states now respond to dark mode, thanks to new Sass and CSS variables.\n\n- Dropped recently added form control background CSS variables and reassigned the Sass variables to use CSS variables instead. This simplifies the styling across color modes and avoids an issue where form controls in dark mode wouldn't update properly.\n\n- Our `box-shadow`s will once again always stay dark instead of inverting to white when in dark mode.\n\n- Improved HTML and JavaScript for our color mode toggle script. The selector for changing the active SVG has been improved, and the markup made more accessible with ARIA attributes.\n\n- Improved docs code syntax colors and more across light and dark modes.\n\n### Typography\n\n- We no longer set a color for `$headings-color-dark` or `--bs-heading-color` for dark mode. To avoid several problems of headings within components appearing the wrong color, we've set the Sass variable to `null` and added a `null` check like we use on the default light mode.\n\n### Components\n\n- Cards now have a `color` set on them to improve rendering across color modes.\n\n- Added new `.nav-underline` variant for our navigation with a simpler bottom border under the active nav link. [See the docs for an example.]([[docsref:/components/navs-tabs#underline]])\n\n- Navs now have new `:focus-visible` styles that better match our custom button focus styles.\n\n### Helpers\n\n- Added new `.icon-link` helper to quickly place and align Bootstrap Icons alongside a textual link. Icon links support our new link utilities, too.\n\n- Added new focus ring helper for removing the default `outline` and setting a custom `box-shadow` focus ring.\n\n### Utilities\n\n- Renamed Sass and CSS variables `${color}-text` to `${color}-text-emphasis` to match their associated utilities.\n\n- Added new `.link-body-emphasis` helper alongside our [colored links]([[docsref:/helpers/colored-links]]). This creates a colored link using our color mode responsive emphasis color.\n\n- Added new link utilities for link color opacity, underline offset, underline color, and underline opacity. [Explore the new links utilities.]([[docsref:/utilities/link]])\n\n- CSS variable based `border-width` utilities have been reverted to set their property directly (as was done prior to v5.2.0). This avoids inheritance issues across nested elements, including tables.\n\n- Added new `.border-black` utility to match our `.text-black` and `.bg-black` utilities.\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> Deprecated the `.text-muted` utility and `$text-muted` Sass variable. It's been replaced by `.text-body-secondary` and `$body-secondary-color`.\n\n### Docs\n\n- Examples are now displayed with the appropriate light or dark color mode as dictated by the setting in our docs. Each example has an individual color mode picker.\n\n- Improved included JavaScript for live Toast demo.\n\n- Added `twbs/examples` repo contents to the top of the Examples page.\n\n### Tooling\n\n- Added SCSS testing via True to help test our utilities API and other customizations.\n\n- Replaced instances of our bootstrap-npm-starter project with the newer and more complete [twbs/examples repo](https://github.com/twbs/examples).\n\n\u003Chr class=\"mb-4\"/>\n\nFor a complete list of changes, [see the v5.3.0-alpha2 project on GitHub](https://github.com/orgs/twbs/projects/13).\n\n## v5.3.0-alpha1\n\n\u003Chr class=\"mb-4\"/>\n\n### Color modes!\n\nLearn more by reading the new [color modes documentation]([[docsref:/customize/color-modes]]).\n\n- **Global support for light (default) and dark color modes.** Set color mode globally on the `:root` element, on groups of elements and components with a wrapper class, or directly on components, with `data-bs-theme=\"light|dark\"`. Also included is a new `color-mode()` mixin that can output a ruleset with the `data-bs-theme` selector or a media query, depending on your preference.\n\n  \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> Color modes replace dark variants for components, so  `.btn-close-white`, `.carousel-dark`, `.dropdown-menu-dark`, and `.navbar-dark` are deprecated.\n\n- **New extended color system.** We've added new theme colors (but not in `$theme-colors`) for a more nuanced, system-wide color palette with new secondary, tertiary, and emphasis colors for `color` and `background-color`. These new colors are available as Sass variables, CSS variables, and utilities.\n\n- We've also expanded our theme color Sass variables, CSS variables, and utilities to include text emphasis, subtle background colors, and subtle border colors. These are available as Sass variables, CSS variables, and utilities.\n\n- Adds new `_variables-dark.scss` stylesheet to house dark-mode specific overrides. This stylesheet should be imported immediately after the existing `_variables.scss` file in your import stack.\n\n  ```diff\n  diff --git a/scss/bootstrap.scss b/scss/bootstrap.scss\n  index 8f8296def..449d70487 100644\n  --- a/scss/bootstrap.scss\n  +++ b/scss/bootstrap.scss\n  @@ -6,6 +6,7 @@\n   // Configuration\n   @import \"functions\";\n   @import \"variables\";\n  +@import \"variables-dark\";\n   @import \"maps\";\n   @import \"mixins\";\n   @import \"utilities\";\n  ```\n\n### CSS variables\n\n- Restores CSS variables for breakpoints, though we don't use them in our media queries as they're not supported. However, these can be useful in JS-specific contexts.\n\n- Per the color modes update, we've added new utilities for new Sass CSS variables `secondary` and `tertiary` text and background colors, plus `{color}-bg-subtle`, `{color}-border-subtle`, and `{color}-text-emphasis` for our theme colors. These new colors are available through Sass and CSS variables (but not our color maps) with the express goal of making it easier to customize across multiple colors modes like light and dark.\n\n- Adds additional variables for alerts, `.btn-close`, and `.offcanvas`.\n\n- The `--bs-heading-color` variable is back with an update and dark mode support. First, we now check for a `null` value on the associated Sass variable, `$headings-color`, before trying to output the CSS variable, so by default it's not present in our compiled CSS. Second, we use the CSS variable with a fallback value, `inherit`, allowing the original behavior to persist, but also allowing for overrides.\n\n- Converts links to use CSS variables for styling `color`, but not `text-decoration`. Colors are now set with `--bs-link-color-rgb` and `--bs-link-opacity` as `rgba()` color, allowing you to customize the translucency with ease. The `a:hover` pseudo-class now overrides `--bs-link-color-rgb` instead of explicitly setting the `color` property.\n\n- `--bs-border-width` is now being used in more components for greater control over default global styling.\n\n- Adds new root CSS variables for our `box-shadow`s, including `--bs-box-shadow`, `--bs-box-shadow-sm`, `--bs-box-shadow-lg`, and `--bs-box-shadow-inset`.\n\n### Components\n\n#### Alert\n\n- Alert variants are now styled via CSS variables.\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> The `alert-variant()` mixin is now deprecated. We now [use a Sass loop]([[docsref:/components/alerts#sass-loops]]) directly to modify the component's default CSS variables for each variant.\n\n#### List group\n\n- List group item variants are now styled via CSS variables.\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> The `list-group-item-variant()` mixin is now deprecated. We now [use a Sass loop]([[docsref:/components/list-group#sass-loops]]) directly to modify the component's default CSS variables for each variant.\n\n#### Dropdowns\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> The `.dropdown-menu-dark` class has been deprecated and replaced with `data-bs-theme=\"dark\"` on the dropdown or any parent element. [See the docs for an example.]([[docsref:/components/dropdowns#dark-dropdowns]])\n\n#### Close button\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> The `.btn-close-white` class has been deprecated and replaced with `data-bs-theme=\"dark\"` on the close button or any parent element. [See the docs for an example.]([[docsref:/components/close-button#dark-variant]])\n\n#### Navbar\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> The `.navbar-dark` class has been deprecated and replaced with `data-bs-theme=\"dark\"` on the navbar or any parent element. [See the docs for updated examples.]([[docsref:/components/navbar#color-schemes]])\n\n### Progress bars\n\nThe markup for [progress bars]([[docsref:/components/progress]]) has been updated in v5.3.0. Due to the placement of `role` and various `aria-` attributes on the inner `.progress-bar` element, **some screen readers were not announcing zero value progress bars**. Now, `role=\"progressbar\"` and the relevant `aria-*` attributes are on the outer `.progress` element, leaving the `.progress-bar` purely for the visual presentation of the bar and optional label.\n\nWhile we recommend adopting the new markup for improved compatibility with all screen readers, note that the legacy progress bar structure will continue to work as before.\n\n```html\n\u003C!-- Previous markup -->\n\u003Cdiv class=\"progress\">\n  \u003Cdiv class=\"progress-bar\" role=\"progressbar\" aria-label=\"Basic example\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\u003C/div>\n\u003C/div>\n\n\u003C!-- New markup -->\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 25%\">\u003C/div>\n\u003C/div>\n```\n\nWe've also introduced a new `.progress-stacked` class to more logically wrap [multiple progress bars]([[docsref:/components/progress#multiple-bars]]) into a single stacked progress bar.\n\n```html\n\u003C!-- Previous markup -->\n\u003Cdiv class=\"progress\">\n  \u003Cdiv class=\"progress-bar\" role=\"progressbar\" aria-label=\"Segment one\" style=\"width: 15%\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\">\u003C/div>\n  \u003Cdiv class=\"progress-bar bg-success\" role=\"progressbar\" aria-label=\"Segment two\" style=\"width: 30%\" aria-valuenow=\"30\" aria-valuemin=\"0\" aria-valuemax=\"100\">\u003C/div>\n  \u003Cdiv class=\"progress-bar bg-info\" role=\"progressbar\" aria-label=\"Segment three\" style=\"width: 20%\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">\u003C/div>\n\u003C/div>\n\n\u003C!-- New markup -->\n\u003Cdiv class=\"progress-stacked\">\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Segment one\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 15%\">\n    \u003Cdiv class=\"progress-bar\">\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Segment two\" aria-valuenow=\"30\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 30%\">\n    \u003Cdiv class=\"progress-bar bg-success\">\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Segment three\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 20%\">\n    \u003Cdiv class=\"progress-bar bg-info\">\u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Forms\n\n- `.form-control` is now styled with CSS variables to support color modes. This includes the addition of two new root CSS variables for the default and disabled form control backgrounds.\n\n- `.form-check` and `.form-switch` components are now built with CSS variables for setting the `background-image`. The usage here differs from other components in that the various focus, active, etc states for each component aren't set on the base class. Instead, the states override one variable (e.g., `--bs-form-switch-bg`).\n\n- Floating form labels now have a `background-color` to fix support for `\u003Ctextarea>` elements. Additional changes have been made to also support disabled states and more.\n\n- Fixed display of date and time inputs in WebKit based browsers.\n\n### Utilities\n\n- \u003Cspan class=\"badge text-warning-emphasis bg-warning-subtle\">Deprecated\u003C/span> `.text-muted` will be replaced by `.text-body-secondary` in v6.\n\n  With the addition of the expanded theme colors and variables, the `.text-muted` variables and utility have been deprecated with v5.3.0. Its default value has also been reassigned to the new `--bs-secondary-color` CSS variable to better support color modes. It will be removed in v6.0.0.\n\n- Adds new `.overflow-x`, `.overflow-y`, and several `.object-fit-*` utilities. _The object-fit property is used to specify how an `\u003Cimg>` or `\u003Cvideo>` should be resized to fit its container, giving us a responsive alternative to using `background-image` for a resizable fill/fit image._\n\n- Adds new `.fw-medium` utility.\n\n- Added new [`.z-*` utilities]([[docsref:/utilities/z-index]]) for `z-index`.\n\n- [Box shadow utilities]([[docsref:/utilities/shadows]]) (and Sass variables) have been updated for dark mode. They now use `--bs-body-color-rgb` to generate the `rgba()` color values, allowing them to easily adapt to color modes based on the specified foreground color.\n\nFor a complete list of changes, [see the v5.3.0 project on GitHub](https://github.com/twbs/bootstrap/projects/).\n\n## v5.2.0\n\n\u003Chr class=\"mb-4\"/>\n\n### Refreshed design\n\nBootstrap v5.2.0 features a subtle design update for a handful of components and properties across the project, **most notably through refined `border-radius` values on buttons and form controls**. Our documentation also has been updated with a new homepage, simpler docs layout that no longer collapses sections of the sidebar, and more prominent examples of [Bootstrap Icons](https://icons.getbootstrap.com).\n\n### More CSS variables\n\n**We've updated all our components to use CSS variables.** While Sass still underpins everything, each component has been updated to include CSS variables on the component base classes (e.g., `.btn`), allowing for more real-time customization of Bootstrap. In subsequent releases, we'll continue to expand our use of CSS variables into our layout, forms, helpers, and utilities. Read more about CSS variables in each component on their respective documentation pages.\n\nOur CSS variable usage will be somewhat incomplete until Bootstrap 6. While we'd love to fully implement these across the board, they do run the risk of causing breaking changes. For example, setting `$alert-border-width: var(--bs-border-width)` in our source code breaks potential Sass in your own code if you were doing `$alert-border-width * 2` for some reason.\n\nAs such, wherever possible, we will continue to push towards more CSS variables, but please recognize our implementation may be slightly limited in v5.\n\n### New `_maps.scss`\n\n**Bootstrap v5.2.0 introduced a new Sass file with `_maps.scss`.** It pulls out several Sass maps from `_variables.scss` to fix an issue where updates to an original map were not applied to secondary maps that extend them. For example, updates to `$theme-colors` were not being applied to other theme maps that relied on `$theme-colors`, breaking key customization workflows. In short, Sass has a limitation where once a default variable or map has been _used_, it cannot be updated. _There's a similar shortcoming with CSS variables when they're used to compose other CSS variables._\n\nThis is why variable customizations in Bootstrap have to come after `@import \"functions\"`, but before `@import \"variables\"` and the rest of our import stack. The same applies to Sass maps—you must override the defaults before they get used. The following maps have been moved to the new `_maps.scss`:\n\n- `$theme-colors-rgb`\n- `$utilities-colors`\n- `$utilities-text`\n- `$utilities-text-colors`\n- `$utilities-bg`\n- `$utilities-bg-colors`\n- `$negative-spacers`\n- `$gutters`\n\nYour custom Bootstrap CSS builds should now look something like this with a separate maps import.\n\n```diff\n  // Functions come first\n  @import \"functions\";\n\n  // Optional variable overrides here\n+ $custom-color: #df711b;\n+ $custom-theme-colors: (\n+   \"custom\": $custom-color\n+ );\n\n  // Variables come next\n  @import \"variables\";\n\n+ // Optional Sass map overrides here\n+ $theme-colors: map-merge($theme-colors, $custom-theme-colors);\n+\n+ // Followed by our default maps\n+ @import \"maps\";\n+\n  // Rest of our imports\n  @import \"mixins\";\n  @import \"utilities\";\n  @import \"root\";\n  @import \"reboot\";\n  // etc\n```\n\n### New utilities\n\n- Expanded [`font-weight` utilities]([[docsref:/utilities/text#font-weight-and-italics]]) to include `.fw-semibold` for semibold fonts.\n- Expanded [`border-radius` utilities]([[docsref:/utilities/borders#sizes]]) to include two new sizes, `.rounded-4` and `.rounded-5`, for more options.\n\n### Additional changes\n\n- **Introduced new `$enable-container-classes` option. —** Now when opting into the experimental CSS Grid layout, `.container-*` classes will still be compiled, unless this option is set to `false`. Containers also now keep their gutter values.\n\n- **Offcanvas component now has [responsive variations]([[docsref:/components/offcanvas#responsive]]).** The original `.offcanvas` class remains unchanged—it hides content across all viewports. To make it responsive, change that `.offcanvas` class to any `.offcanvas-{sm|md|lg|xl|xxl}` class.\n\n- **Thicker table dividers are now opt-in. —** We've removed the thicker and more difficult to override border between table groups and moved it to an optional class you can apply, `.table-group-divider`. [See the table docs for an example.]([[docsref:/content/tables#table-group-dividers]])\n\n- **[Scrollspy has been rewritten](https://github.com/twbs/bootstrap/pull/33421) to use the Intersection Observer API**, which means you no longer need relative parent wrappers, deprecates `offset` config, and more. Look for your Scrollspy implementations to be more accurate and consistent in their nav highlighting.\n\n- **Popovers and tooltips now use CSS variables.** Some CSS variables have been updated from their Sass counterparts to reduce the number of variables. As a result, three variables have been deprecated in this release: `$popover-arrow-color`, `$popover-arrow-outer-color`, and `$tooltip-arrow-color`.\n\n- **Added new `.text-bg-{color}` helpers.** Instead of setting individual `.text-*` and `.bg-*` utilities, you can now use [the `.text-bg-*` helpers]([[docsref:helpers/color-background]]) to set a `background-color` with contrasting foreground `color`.\n\n- Added `.form-check-reverse` modifier to flip the order of labels and associated checkboxes/radios.\n\n- Added [striped columns]([[docsref:/content/tables#striped-columns]]) support to tables via the new `.table-striped-columns` class.\n\nFor a complete list of changes, [see the v5.2.0 project on GitHub](https://github.com/twbs/bootstrap/projects/32).\n\n## v5.1.0\n\n\u003Chr class=\"mb-4\"/>\n\n- **Added experimental support for [CSS Grid layout]([[docsref:/layout/css-grid]]). —** This is a work in progress, and is not yet ready for production use, but you can opt into the new feature via Sass. To enable it, disable the default grid, by setting `$enable-grid-classes: false` and enable the CSS Grid by setting `$enable-cssgrid: true`.\n\n- **Updated navbars to support offcanvas. —** Add [offcanvas drawers in any navbar]([[docsref:/components/navbar#offcanvas]]) with the responsive `.navbar-expand-*` classes and some offcanvas markup.\n\n- **Added new [placeholder component]([[docsref:/components/placeholders/]]). —** Our newest component, a way to provide temporary blocks in lieu of real content to help indicate that something is still loading in your site or app.\n\n- **Collapse plugin now supports [horizontal collapsing]([[docsref:/components/collapse#horizontal]]). —** Add `.collapse-horizontal` to your `.collapse` to collapse the `width` instead of the `height`. Avoid browser repainting by setting a `min-height` or `height`.\n\n- **Added new stack and vertical rule helpers. —** Quickly apply multiple flexbox properties to quickly create custom layouts with [stacks]([[docsref:/helpers/stacks/]]). Choose from horizontal (`.hstack`) and vertical (`.vstack`) stacks. Add vertical dividers similar to `\u003Chr>` elements with the [new `.vr` helpers]([[docsref:/helpers/vertical-rule/]]).\n\n- **Added new global `:root` CSS variables. —** Added several new CSS variables to the `:root` level for controlling `\u003Cbody>` styles. More are in the works, including across our utilities and components, but for now read up [CSS variables in the Customize section]([[docsref:/customize/css-variables/]]).\n\n- **Overhauled color and background utilities to use CSS variables, and added new [text opacity]([[docsref:/utilities/text#opacity]]) and [background opacity]([[docsref:/utilities/background#opacity]]) utilities. —** `.text-*` and `.bg-*` utilities are now built with CSS variables and `rgba()` color values, allowing you to easily customize any utility with new opacity utilities.\n\n- **Added new snippet examples based to show how to customize our components. —** Pull ready to use customized components and other common design patterns with our new [Snippets examples]([[docsref:/examples/#snippets]]). Includes [footers]([[docsref:/examples/footers/]]), [dropdowns]([[docsref:/examples/dropdowns/]]), [list groups]([[docsref:/examples/list-groups/]]), and [modals]([[docsref:/examples/modals/]]).\n\n- **Removed unused positioning styles from popovers and tooltips** as these are handled solely by Popper. `$tooltip-margin` has been deprecated and set to `null` in the process.\n\nWant more information? [Read the v5.1.0 blog post.](https://blog.getbootstrap.com/2021/08/04/bootstrap-5-1-0/)\n\n## v5.0.0\n\n\u003Chr class=\"mb-4\"/>\n\n\u003CCallout>\n**Hey there!** Changes to our first major release of Bootstrap 5, v5.0.0, are documented below. They don't reflect the additional changes shown above.\n\u003C/Callout>\n\n### Dependencies\n\n- Dropped jQuery.\n- Upgraded from Popper v1.x to Popper v2.x.\n- Replaced Libsass with Dart Sass as our Sass compiler given Libsass was deprecated.\n- Migrated from Jekyll to Hugo for building our documentation\n\n### Browser support\n\n- Dropped Internet Explorer 10 and 11\n- Dropped Microsoft Edge \u003C 16 (Legacy Edge)\n- Dropped Firefox \u003C 60\n- Dropped Safari \u003C 12\n- Dropped iOS Safari \u003C 12\n- Dropped Chrome \u003C 60\n\n\u003Chr class=\"my-5\"/>\n\n### Documentation changes\n\n- Redesigned homepage, docs layout, and footer.\n- Added [new Parcel guide]([[docsref:/getting-started/parcel]]).\n- Added [new Customize section]([[docsref:/customize/overview]]), replacing [v4's Theming page](https://getbootstrap.com/docs/4.6/getting-started/theming/), with new details on Sass, global configuration options, color schemes, CSS variables, and more.\n- Reorganized all form documentation into [new Forms section]([[docsref:/forms/overview]]), breaking apart the content into more focused pages.\n- Similarly, updated [the Layout section]([[docsref:/layout/breakpoints]]), to flesh out grid content more clearly.\n- Renamed \"Navs\" component page to \"Navs & Tabs\".\n- Renamed \"Checks\" page to \"Checks & radios\".\n- Redesigned the navbar and added a new subnav to make it easier to get around our sites and docs versions.\n- Added new keyboard shortcut for the search field: \u003Ckbd>\u003Ckbd>Ctrl\u003C/kbd> + \u003Ckbd>/\u003C/kbd>\u003C/kbd>.\n\n### Sass\n\n- We've ditched the default Sass map merges to make it easier to remove redundant values. Keep in mind you now have to define all values in the Sass maps like `$theme-colors`. Check out how to deal with [Sass maps]([[docsref:/customize/sass#maps-and-loops]]).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `color-yiq()` function and related variables to `color-contrast()` as it's no longer related to YIQ color space. [See #30168.](https://github.com/twbs/bootstrap/pull/30168/)\n  - `$yiq-contrasted-threshold` is renamed to `$min-contrast-ratio`.\n  - `$yiq-text-dark` and `$yiq-text-light` are respectively renamed to `$color-contrast-dark` and `$color-contrast-light`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Media query mixins parameters have changed for a more logical approach.\n  - `media-breakpoint-down()` uses the breakpoint itself instead of the next breakpoint (e.g., `media-breakpoint-down(lg)` instead of `media-breakpoint-down(md)` targets viewports smaller than `lg`).\n  - Similarly, the second parameter in `media-breakpoint-between()` also uses the breakpoint itself instead of the next breakpoint (e.g., `media-breakpoint-between(sm, lg)` instead of `media-breakpoint-between(sm, md)` targets viewports between `sm` and `lg`).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Removed print styles and `$enable-print-styles` variable. Print display classes are still around. [See #28339](https://github.com/twbs/bootstrap/pull/28339).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `color()`, `theme-color()`, and `gray()` functions in favor of variables. [See #29083](https://github.com/twbs/bootstrap/pull/29083).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `theme-color-level()` function to `color-level()` and now accepts any color you want instead of only `$theme-color` colors. [See #29083](https://github.com/twbs/bootstrap/pull/29083) **Watch out:** `color-level()` was later on dropped in `v5.0.0-alpha3`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `$enable-prefers-reduced-motion-media-query` and `$enable-pointer-cursor-for-buttons` to `$enable-reduced-motion` and `$enable-button-pointers` for brevity.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Removed the `bg-gradient-variant()` mixin. Use the `.bg-gradient` class to add gradients to elements instead of the generated `.bg-gradient-*` classes.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **Removed previously deprecated mixins:**\n  - `hover`, `hover-focus`, `plain-hover-focus`, and `hover-focus-active`\n  - `float()`\n  - `form-control-mixin()`\n  - `nav-divider()`\n  - `retina-img()`\n  - `text-hide()` (also dropped the associated utility class, `.text-hide`)\n  - `visibility()`\n  - `form-control-focus()`\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `scale-color()` function to `shift-color()` to avoid collision with Sass's own color scaling function.\n\n- `box-shadow` mixins now allow `null` values and drop `none` from multiple arguments. [See #30394](https://github.com/twbs/bootstrap/pull/30394).\n\n- The `border-radius()` mixin now has a default value.\n\n### Color system\n\n- The color system which worked with `color-level()` and `$theme-color-interval` was removed in favor of a new color system. All `lighten()` and `darken()` functions in our codebase are replaced by `tint-color()` and `shade-color()`. These functions will mix the color with either white or black instead of changing its lightness by a fixed amount. The `shift-color()` will either tint or shade a color depending on whether its weight parameter is positive or negative. [See #30622](https://github.com/twbs/bootstrap/pull/30622) for more details.\n\n- Added new tints and shades for every color, providing nine separate colors for each base color, as new Sass variables.\n\n- Improved color contrast. Bumped color contrast ratio from 3:1 to 4.5:1 and updated blue, green, cyan, and pink colors to ensure WCAG 2.2 AA contrast. Also changed our color contrast color from `$gray-900` to `$black`.\n\n- To support our color system, we've added new custom `tint-color()` and `shade-color()` functions to mix our colors appropriately.\n\n### Grid updates\n\n- **New breakpoint!** Added new `xxl` breakpoint for `1400px` and up. No changes to all other breakpoints.\n\n- **Improved gutters.** Gutters are now set in rems, and are narrower than v4 (`1.5rem`, or about `24px`, down from `30px`). This aligns our grid system's gutters with our spacing utilities.\n  - Added new [gutter class]([[docsref:/layout/gutters]]) (`.g-*`, `.gx-*`, and `.gy-*`) to control horizontal/vertical gutters, horizontal gutters, and vertical gutters.\n  - \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.no-gutters` to `.g-0` to match new gutter utilities.\n\n- Columns no longer have `position: relative` applied, so you may have to add `.position-relative` to some elements to restore that behavior.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped several `.order-*` classes that often went unused. We now only provide `.order-0` to `.order-5` out of the box.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped the `.media` component as it can be easily replicated with utilities. [See #28265](https://github.com/twbs/bootstrap/pull/28265) and the [flex utilities page for an example]([[docsref:/utilities/flex#media-object]]).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> `bootstrap-grid.css` now only applies `box-sizing: border-box` to the column instead of resetting the global box-sizing. This way, our grid styles can be used in more places without interference.\n\n- `$enable-grid-classes` no longer disables the generation of container classes anymore. [See #29146.](https://github.com/twbs/bootstrap/pull/29146)\n\n- Updated the `make-col` mixin to default to equal columns without a specified size.\n\n### Content, Reboot, etc\n\n- **[RFS]([[docsref:/getting-started/rfs]]) is now enabled by default.** Headings using the `font-size()` mixin will automatically adjust their `font-size` to scale with the viewport. _This feature was previously opt-in with v4._\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Overhauled our display typography to replace our `$display-*` variables and with a `$display-font-sizes` Sass map. Also removed the individual `$display-*-weight` variables for a single `$display-font-weight` and adjusted `font-size`s.\n\n- Added two new `.display-*` heading sizes, `.display-5` and `.display-6`.\n\n- **Links are underlined by default** (not just on hover), unless they're part of specific components.\n\n- **Redesigned tables** to refresh their styles and rebuild them with CSS variables for more control over styling.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Nested tables do not inherit styles anymore.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> `.thead-light` and `.thead-dark` are dropped in favor of the `.table-*` variant classes which can be used for all table elements (`thead`, `tbody`, `tfoot`, `tr`, `th` and `td`).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> The `table-row-variant()` mixin is renamed to `table-variant()` and accepts only 2 parameters: `$color` (color name) and `$value` (color code). The border color and accent colors are automatically calculated based on the table factor variables.\n\n- Split table cell padding variables into `-y` and `-x`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `.pre-scrollable` class. [See #29135](https://github.com/twbs/bootstrap/pull/29135)\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> `.text-*` utilities do not add hover and focus states to links anymore. `.link-*` helper classes can be used instead. [See #29267](https://github.com/twbs/bootstrap/pull/29267)\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `.text-justify` class. [See #29793](https://github.com/twbs/bootstrap/pull/29793)\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> ~~`\u003Chr>` elements now use `height` instead of `border` to better support the `size` attribute. This also enables use of padding utilities to create thicker dividers (e.g., `\u003Chr class=\"py-1\">`).~~\n\n- Reset default horizontal `padding-left` on `\u003Cul>` and `\u003Col>` elements from browser default `40px` to `2rem`.\n\n- Added `$enable-smooth-scroll`, which applies `scroll-behavior: smooth` globally—except for users asking for reduced motion through `prefers-reduced-motion` media query. [See #31877](https://github.com/twbs/bootstrap/pull/31877)\n\n### RTL\n\n- Horizontal direction specific variables, utilities, and mixins have all been renamed to use logical properties like those found in flexbox layouts—e.g., `start` and `end` in lieu of `left` and `right`.\n\n### Forms\n\n- **Added new floating forms!** We've promoted the Floating labels example to fully supported form components. [See the new Floating labels page.]([[docsref:/forms/floating-labels]])\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **Consolidated native and custom form elements.** Checkboxes, radios, selects, and other inputs that had native and custom classes in v4 have been consolidated. Now nearly all our form elements are entirely custom, most without the need for custom HTML.\n  - `.custom-control.custom-checkbox` is now `.form-check`.\n  - `.custom-control.custom-radio` is now `.form-check`.\n  - `.custom-control.custom-switch` is now `.form-check.form-switch`.\n  - `.custom-select` is now `.form-select`.\n  - `.custom-file` and `.form-control-file` have been replaced by custom styles on top of `.form-control`.\n  - `.custom-range` is now `.form-range`.\n  - Dropped native `.form-control-file` and `.form-control-range`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `.input-group-append` and `.input-group-prepend`. You can now just add buttons and `.input-group-text` as direct children of the input groups.\n\n- The longstanding [Missing border radius on input group with validation feedback bug](https://github.com/twbs/bootstrap/issues/25110) is finally fixed by adding an additional `.has-validation` class to input groups with validation.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **Dropped form-specific layout classes for our grid system.** Use our grid and utilities instead of `.form-group`, `.form-row`, or `.form-inline`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Form labels now require `.form-label`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> `.form-text` no longer sets `display`, allowing you to create inline or block help text as you wish just by changing the HTML element.\n\n- Form controls no longer used fixed `height` when possible, instead deferring to `min-height` to improve customization and compatibility with other components.\n\n- Validation icons are no longer applied to `\u003Cselect>`s with `multiple`.\n\n- Rearranged source Sass files under `scss/forms/`, including input group styles.\n\n\u003Chr class=\"my-5\"/>\n\n### Components\n\n- Unified `padding` values for alerts, breadcrumbs, cards, dropdowns, list groups, modals, popovers, and tooltips to be based on our `$spacer` variable. [See #30564](https://github.com/twbs/bootstrap/pull/30564).\n\n#### Accordion\n\n- Added [new accordion component]([[docsref:/components/accordion]]).\n\n#### Alerts\n\n- Alerts now have [examples with icons]([[docsref:/components/alerts#icons]]).\n\n- Removed custom styles for `\u003Chr>`s in each alert since they already use `currentColor`.\n\n#### Badges\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped all `.badge-*` color classes for background utilities (e.g., use `.bg-primary` instead of `.badge-primary`).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `.badge-pill`—use the `.rounded-pill` utility instead.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Removed hover and focus styles for `\u003Ca>` and `\u003Cbutton>` elements.\n\n- Increased default padding for badges from `.25em`/`.5em` to `.35em`/`.65em`.\n\n#### Breadcrumbs\n\n- Simplified the default appearance of breadcrumbs by removing `padding`, `background-color`, and `border-radius`.\n\n- Added new CSS custom property `--bs-breadcrumb-divider` for easy customization without needing to recompile CSS.\n\n#### Buttons\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **[Toggle buttons]([[docsref:/forms/checks-radios#toggle-buttons]]), with checkboxes or radios, no longer require JavaScript and have new markup.** We no longer require a wrapping element, add `.btn-check` to the `\u003Cinput>`, and pair it with any `.btn` classes on the `\u003Clabel>`. [See #30650](https://github.com/twbs/bootstrap/pull/30650). _The docs for this has moved from our Buttons page to the new Forms section._\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **Dropped `.btn-block` for utilities.** Instead of using `.btn-block` on the `.btn`, wrap your buttons with `.d-grid` and a `.gap-*` utility to space them as needed. Switch to responsive classes for even more control over them. [Read the docs for some examples.]([[docsref:/components/buttons#block-buttons]])\n\n- Updated our `button-variant()` and `button-outline-variant()` mixins to support additional parameters.\n\n- Updated buttons to ensure increased contrast on hover and active states.\n\n- Disabled buttons now have `pointer-events: none;`.\n\n#### Card\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `.card-deck` in favor of our grid. Wrap your cards in column classes and add a parent `.row-cols-*` container to recreate card decks (but with more control over responsive alignment).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `.card-columns` in favor of Masonry. [See #28922](https://github.com/twbs/bootstrap/pull/28922).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Replaced the `.card` based accordion with a [new Accordion component]([[docsref:/components/accordion]]).\n\n#### Carousel\n\n- Added new [`.carousel-dark` variant]([[docsref:/components/carousel#dark-variant]]) for dark text, controls, and indicators (great for lighter backgrounds).\n\n- Replaced chevron icons for carousel controls with new SVGs from [Bootstrap Icons]([[config:icons]]).\n\n#### Close button\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.close` to `.btn-close` for a less generic name.\n\n- Close buttons now use a `background-image` (embedded SVG) instead of a `&times;` in the HTML, allowing for easier customization without the need to touch your markup.\n\n- Added new `.btn-close-white` variant that uses `filter: invert(1)` to enable higher contrast dismiss icons against darker backgrounds.\n\n#### Collapse\n\n- Removed scroll anchoring for accordions.\n\n#### Dropdowns\n\n- Added new `.dropdown-menu-dark` variant and associated variables for on-demand dark dropdowns.\n\n- Added new variable for `$dropdown-padding-x`.\n\n- Darkened the dropdown divider for improved contrast.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> All the events for the dropdown are now triggered on the dropdown toggle button and then bubbled up to the parent element.\n\n- Dropdown menus now have a `data-bs-popper=\"static\"` attribute set when the positioning of the dropdown is static, or dropdown is in the navbar. This is added by our JavaScript and helps us use custom position styles without interfering with Popper's positioning.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped `flip` option for dropdown plugin in favor of native Popper configuration. You can now disable the flipping behavior by passing an empty array for [`fallbackPlacements`](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements) option in [flip](https://popper.js.org/docs/v2/modifiers/flip/) modifier.\n\n- Dropdown menus can now be clickable with a new `autoClose` option to handle the [auto close behavior]([[docsref:/components/dropdowns#auto-close-behavior]]). You can use this option to accept the click inside or outside the dropdown menu to make it interactive.\n\n- Dropdowns now support `.dropdown-item`s wrapped in `\u003Cli>`s.\n\n#### Jumbotron\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Dropped the jumbotron component as it can be replicated with utilities. [See our new Jumbotron example for a demo.]([[docsref:/examples/jumbotron]])\n\n#### List group\n\n- Added new [`.list-group-numbered` modifier]([[docsref:/components/list-group#numbered]]) to list groups.\n\n#### Navs and tabs\n\n- Added new `null` variables for `font-size`, `font-weight`, `color`, and `:hover` `color` to the `.nav-link` class.\n\n#### Navbars\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Navbars now require a container within (to drastically simplify spacing requirements and CSS required).\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> The `.active` class can no longer be applied to `.nav-item`s, it must be applied directly on `.nav-link`s.\n\n#### Offcanvas\n\n- Added the new [offcanvas component]([[docsref:/components/offcanvas]]).\n\n#### Pagination\n\n- Pagination links now have customizable `margin-left` that are dynamically rounded on all corners when separated from one another.\n\n- Added `transition`s to pagination links.\n\n#### Popovers\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.arrow` to `.popover-arrow` in our default popover template.\n\n- Renamed `whiteList` option to `allowList`.\n\n#### Spinners\n\n- Spinners now honor `prefers-reduced-motion: reduce` by slowing down animations. [See #31882](https://github.com/twbs/bootstrap/pull/31882).\n\n- Improved spinner vertical alignment.\n\n#### Toasts\n\n- Toasts can now be [positioned]([[docsref:/components/toasts#placement]]) in a `.toast-container` with the help of [positioning utilities]([[docsref:/utilities/position]]).\n\n- Changed default toast duration to 5 seconds.\n\n- Removed `overflow: hidden` from toasts and replaced with proper `border-radius`s with `calc()` functions.\n\n#### Tooltips\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.arrow` to `.tooltip-arrow` in our default tooltip template.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> The default value for the `fallbackPlacements` is changed to `['top', 'right', 'bottom', 'left']` for better placement of popper elements.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `whiteList` option to `allowList`.\n\n### Utilities\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed several utilities to use logical property names instead of directional names with the addition of RTL support:\n  - Renamed `.float-left` and `.float-right` to `.float-start` and `.float-end`.\n  - Renamed `.border-left` and `.border-right` to `.border-start` and `.border-end`.\n  - Renamed `.rounded-left` and `.rounded-right` to `.rounded-start` and `.rounded-end`.\n  - Renamed `.ml-*` and `.mr-*` to `.ms-*` and `.me-*`.\n  - Renamed `.pl-*` and `.pr-*` to `.ps-*` and `.pe-*`.\n  - Renamed `.text-*-left` and `.text-*-right` to `.text-*-start` and `.text-*-end`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Disabled negative margins by default.\n\n- Added new `.bg-body` class for quickly setting the `\u003Cbody>`'s background to additional elements.\n\n- Added new [position utilities]([[docsref:/utilities/position#arrange-elements]]) for `top`, `right`, `bottom`, and `left`. Values include `0`, `50%`, and `100%` for each property.\n\n- Added new `.translate-middle-x` & `.translate-middle-y` utilities to horizontally or vertically center absolute/fixed positioned elements.\n\n- Added new [`border-width` utilities]([[docsref:/utilities/borders#border-width]]).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.text-monospace` to `.font-monospace`.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Removed `.text-hide` as it's an antiquated method for hiding text that shouldn't be used anymore.\n\n- Added `.fs-*` utilities for `font-size` utilities (with RFS enabled). These use the same scale as HTML's default headings (1-6, large to small), and can be modified via Sass map.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.font-weight-*` utilities as `.fw-*` for brevity and consistency.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Renamed `.font-italic` utility to `.fst-italic` for brevity and consistency with new `.fst-normal` utility.\n\n- Added `.d-grid` to display utilities and new `gap` utilities (`.gap`) for CSS Grid and flexbox layouts.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Removed `.rounded-sm` and `rounded-lg`, and introduced a new scale of classes, `.rounded-0` to `.rounded-3`. [See #31687](https://github.com/twbs/bootstrap/pull/31687).\n\n- Added new `line-height` utilities: `.lh-1`, `.lh-sm`, `.lh-base` and `.lh-lg`. See [here]([[docsref:/utilities/text#line-height]]).\n\n- Moved the `.d-none` utility in our CSS to give it more weight over other display utilities.\n\n- Extended the `.visually-hidden-focusable` helper to also work on containers, using `:focus-within`.\n\n### Helpers\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **Responsive embed helpers have been renamed to [ratio helpers]([[docsref:/helpers/ratio]])** with new class names and improved behaviors, as well as a helpful CSS variable.\n  - Classes have been renamed to change `by` to `x` in the aspect ratio. For example, `.ratio-16by9` is now `.ratio-16x9`.\n  - We've dropped the `.embed-responsive-item` and element group selector in favor of a simpler `.ratio > *` selector. No more class is needed, and the ratio helper now works with any HTML element.\n  - The `$embed-responsive-aspect-ratios` Sass map has been renamed to `$aspect-ratios` and its values have been simplified to include the class name and the percentage as the `key: value` pair.\n  - CSS variables are now generated and included for each value in the Sass map. Modify the `--bs-aspect-ratio` variable on the `.ratio` to create any [custom aspect ratio]([[docsref:/helpers/ratio#custom-ratios]]).\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> **\"Screen reader\" classes are now [\"visually hidden\" classes]([[docsref:/helpers/visually-hidden]]).**\n  - Changed the Sass file from `scss/helpers/_screenreaders.scss` to `scss/helpers/_visually-hidden.scss`\n  - Renamed `.sr-only` and `.sr-only-focusable` to `.visually-hidden` and `.visually-hidden-focusable`\n  - Renamed `sr-only()` and `sr-only-focusable()` mixins to `visually-hidden()` and `visually-hidden-focusable()`.\n\n- `bootstrap-utilities.css` now also includes our helpers. Helpers don't need to be imported in custom builds anymore.\n\n### JavaScript\n\n- **Dropped jQuery dependency** and rewrote plugins to be in regular JavaScript.\n\n- \u003Cspan class=\"badge text-bg-danger\">Breaking\u003C/span> Data attributes for all JavaScript plugins are now namespaced to help distinguish Bootstrap functionality from third parties and your own code. For example, we use `data-bs-toggle` instead of `data-toggle`.\n\n- **All plugins can now accept a CSS selector as the first argument.** You can either pass a DOM element or any valid CSS selector to create a new instance of the plugin:\n\n  ```js\n  const modal = new bootstrap.Modal('#myModal')\n  const dropdown = new bootstrap.Dropdown('[data-bs-toggle=\"dropdown\"]')\n  ```\n\n- `popperConfig` can be passed as a function that accepts the Bootstrap's default Popper config as an argument, so that you can merge this default configuration in your way. **Applies to dropdowns, popovers, and tooltips.**\n\n- The default value for the `fallbackPlacements` is changed to `['top', 'right', 'bottom', 'left']` for better placement of Popper elements. **Applies to dropdowns, popovers, and tooltips.**\n\n- Removed underscore from public static methods like `_getInstance()` → `getInstance()`.\n\n- Removed `util.js`, with its functionality now integrated into individual plugins. If you previously included `util.js` manually, you can safely remove it, as it is no longer needed. Each plugin now contains only the utilities it requires, enhancing modularity and reducing dependencies.","src/content/docs/migration.mdx","589eb82f3b85ceaf","migration.mdx","content/reboot",{"id":220,"data":222,"body":226,"filePath":227,"digest":228,"legacyId":229,"deferredRender":139},{"aliases":223,"description":224,"title":225,"toc":139},"/docs/[[config:docs_version]]/content/","Reboot, a collection of element-specific CSS changes in a single file, kickstart Bootstrap to provide an elegant, consistent, and simple baseline to build upon.","Reboot","## Approach\n\nReboot builds upon Normalize, providing many HTML elements with somewhat opinionated styles using only element selectors. Additional styling is done only with classes. For example, we reboot some `\u003Ctable>` styles for a simpler baseline and later provide `.table`, `.table-bordered`, and more.\n\nHere are our guidelines and reasons for choosing what to override in Reboot:\n\n- Update some browser default values to use `rem`s instead of `em`s for scalable component spacing.\n- Avoid `margin-top`. Vertical margins can collapse, yielding unexpected results. More importantly though, a single direction of `margin` is a simpler mental model.\n- For easier scaling across device sizes, block elements should use `rem`s for `margin`s.\n- Keep declarations of `font`-related properties to a minimum, using `inherit` whenever possible.\n\n## CSS variables\n\n\u003CAddedIn version=\"5.2.0\"/>\n\nWith v5.1.1, we standardized our required `@import`s across all our CSS bundles (including `bootstrap.css`, `bootstrap-reboot.css`, and `bootstrap-grid.css`) to include `_root.scss`. This adds `:root` level CSS variables to all bundles, regardless of how many of them are used in that bundle. Ultimately Bootstrap 5 will continue to see more [CSS variables]([[docsref:/customize/css-variables]]) added over time, in order to provide more real-time customization without the need to always recompile Sass. Our approach is to take our source Sass variables and transform them into CSS variables. That way, even if you don't use CSS variables, you still have all the power of Sass. **This is still in-progress and will take time to fully implement.**\n\nFor example, consider these `:root` CSS variables for common `\u003Cbody>` styles:\n\n\u003CScssDocs name=\"root-body-variables\" file=\"scss/_root.scss\" />\n\nIn practice, those variables are then applied in Reboot like so:\n\n\u003CScssDocs name=\"reboot-body-rules\" file=\"scss/_reboot.scss\" />\n\nWhich allows you to make real-time customizations however you like:\n\n```html\n\u003Cbody style=\"--bs-body-color: #333;\">\n  \u003C!-- ... -->\n\u003C/body>\n```\n\n## Page defaults\n\nThe `\u003Chtml>` and `\u003Cbody>` elements are updated to provide better page-wide defaults. More specifically:\n\n- The `box-sizing` is globally set on every element—including `*::before` and `*::after`, to `border-box`. This ensures that the declared width of element is never exceeded due to padding or border.\n  - No base `font-size` is declared on the `\u003Chtml>`, but `16px` is assumed (the browser default). `font-size: 1rem` is applied on the `\u003Cbody>` for easy responsive type-scaling via media queries while respecting user preferences and ensuring a more accessible approach. This browser default can be overridden by modifying the `$font-size-root` variable.\n- The `\u003Cbody>` also sets a global `font-family`, `font-weight`, `line-height`, and `color`. This is inherited later by some form elements to prevent font inconsistencies.\n- For safety, the `\u003Cbody>` has a declared `background-color`, defaulting to `#fff`.\n\n## Native font stack\n\nBootstrap utilizes a \"native font stack\" or \"system font stack\" for optimum text rendering on every device and OS. These system fonts have been designed specifically with today's devices in mind, with improved rendering on screens, variable font support, and more. Read more about [native font stacks in this *Smashing Magazine* article](https://www.smashingmagazine.com/2015/11/using-system-ui-fonts-practical-guide/).\n\n```scss\n$font-family-sans-serif:\n  // Cross-platform generic font family (default user interface font)\n  system-ui,\n  // Safari for macOS and iOS (San Francisco)\n  -apple-system,\n  // Windows\n  \"Segoe UI\",\n  // Android\n  Roboto,\n  // older macOS and iOS\n  \"Helvetica Neue\",\n  // Linux\n  \"Noto Sans\",\n  \"Liberation Sans\",\n  // Basic web fallback\n  Arial,\n  // Sans serif fallback\n  sans-serif,\n  // Emoji fonts\n  \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\" !default;\n```\n\nNote that because the font stack includes emoji fonts, many common symbol/dingbat Unicode characters will be rendered as multicolored pictographs. Their appearance will vary, depending on the style used in the browser/platform's native emoji font, and they won't be affected by any CSS `color` styles.\n\nThis `font-family` is applied to the `\u003Cbody>` and automatically inherited globally throughout Bootstrap. To switch the global `font-family`, update `$font-family-base` and recompile Bootstrap.\n\n## Headings\n\nAll heading elements—`\u003Ch1>`—`\u003Ch6>` have their `margin-top` removed, `margin-bottom: .5rem` set, and `line-height` tightened. While headings inherit their `color` by default, you can also override it via optional CSS variable, `--bs-heading-color`.\n\n\u003CBsTable>\n| Heading | Example |\n| --- | --- |\n| `\u003Ch1>\u003C/h1>` | \u003Cspan class=\"h1\">h1. Bootstrap heading\u003C/span> |\n| `\u003Ch2>\u003C/h2>` | \u003Cspan class=\"h2\">h2. Bootstrap heading\u003C/span> |\n| `\u003Ch3>\u003C/h3>` | \u003Cspan class=\"h3\">h3. Bootstrap heading\u003C/span> |\n| `\u003Ch4>\u003C/h4>` | \u003Cspan class=\"h4\">h4. Bootstrap heading\u003C/span> |\n| `\u003Ch5>\u003C/h5>` | \u003Cspan class=\"h5\">h5. Bootstrap heading\u003C/span> |\n| `\u003Ch6>\u003C/h6>` | \u003Cspan class=\"h6\">h6. Bootstrap heading\u003C/span> |\n\u003C/BsTable>\n\n## Paragraphs\n\nAll `\u003Cp>` elements have their `margin-top` removed and `margin-bottom: 1rem` set for easy spacing.\n\n\u003CExample code={`\u003Cp>This is an example paragraph.\u003C/p>`} />\n\n## Links\n\nLinks have a default `color` and underline applied. While links change on `:hover`, they don't change based on whether someone `:visited` the link. They also receive no special `:focus` styles.\n\n\u003CExample code={`\u003Ca href=\"#\">This is an example link\u003C/a>`} />\n\nAs of v5.3.x, link `color` is set using `rgba()` and new `-rgb` CSS variables, allowing for easy customization of link color opacity. Change the link color opacity with the `--bs-link-opacity` CSS variable:\n\n\u003CExample code={`\u003Ca href=\"#\" style=\"--bs-link-opacity: .5\">This is an example link\u003C/a>`} />\n\n\nPlaceholder links—those without an `href`—are targeted with a more specific selector and have their `color` and `text-decoration` reset to their default values.\n\n\u003CExample code={`\u003Ca>This is a placeholder link\u003C/a>`} />\n\n## Horizontal rules\n\nThe `\u003Chr>` element has been simplified. Similar to browser defaults, `\u003Chr>`s are styled via `border-top`, have a default `opacity: .25`, and automatically inherit their `border-color` via `color`, including when `color` is set via the parent. They can be modified with text, border, and opacity utilities.\n\n\u003CExample code={`\u003Chr>\n\n\u003Cdiv class=\"text-success\">\n  \u003Chr>\n\u003C/div>\n\n\u003Chr class=\"border border-danger border-2 opacity-50\">\n\u003Chr class=\"border border-primary border-3 opacity-75\">`} />\n\n## Lists\n\nAll lists—`\u003Cul>`, `\u003Col>`, and `\u003Cdl>`—have their `margin-top` removed and a `margin-bottom: 1rem`. Nested lists have no `margin-bottom`. We've also reset the `padding-left` on `\u003Cul>` and `\u003Col>` elements.\n\n\u003Cdiv class=\"bd-example\">\n* All lists have their top margin removed\n* And their bottom margin normalized\n* Nested lists have no bottom margin\n  * This way they have a more even appearance\n  * Particularly when followed by more list items\n* The left padding has also been reset\n\n1. Here's an ordered list\n2. With a few list items\n3. It has the same overall look\n4. As the previous unordered list\n\u003C/div>\n\nFor simpler styling, clear hierarchy, and better spacing, description lists have updated `margin`s. `\u003Cdd>`s reset `margin-left` to `0` and add `margin-bottom: .5rem`. `\u003Cdt>`s are **bolded**.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdl>\n    \u003Cdt>Description lists\u003C/dt>\n    \u003Cdd>A description list is perfect for defining terms.\u003C/dd>\n    \u003Cdt>Term\u003C/dt>\n    \u003Cdd>Definition for the term.\u003C/dd>\n    \u003Cdd>A second definition for the same term.\u003C/dd>\n    \u003Cdt>Another term\u003C/dt>\n    \u003Cdd>Definition for this other term.\u003C/dd>\n  \u003C/dl>\n\u003C/div>\n\n## Inline code\n\nWrap inline snippets of code with `\u003Ccode>`. Be sure to escape HTML angle brackets.\n\n\u003CExample code={`For example, \u003Ccode>&lt;section&gt;\u003C/code> should be wrapped as inline.`} />\n\n## Code blocks\n\nUse `\u003Cpre>`s for multiple lines of code. Once again, be sure to escape any angle brackets in the code for proper rendering. The `\u003Cpre>` element is reset to remove its `margin-top` and use `rem` units for its `margin-bottom`.\n\n\u003CExample code={`\u003Cpre>\u003Ccode>&lt;p&gt;Sample text here...&lt;/p&gt;\n&lt;p&gt;And another line of sample text here...&lt;/p&gt;\n\u003C/code>\u003C/pre>`} />\n\n## Variables\n\nFor indicating variables use the `\u003Cvar>` tag.\n\n\u003CExample code={`\u003Cvar>y\u003C/var> = \u003Cvar>m\u003C/var>\u003Cvar>x\u003C/var> + \u003Cvar>b\u003C/var>`} />\n\n## User input\n\nUse the `\u003Ckbd>` to indicate input that is typically entered via keyboard.\n\n\u003CExample code={`To switch directories, type \u003Ckbd>cd\u003C/kbd> followed by the name of the directory.\u003Cbr/>\nTo edit settings, press \u003Ckbd>\u003Ckbd>Ctrl\u003C/kbd> + \u003Ckbd>,\u003C/kbd>\u003C/kbd>`} />\n\n## Sample output\n\nFor indicating sample output from a program use the `\u003Csamp>` tag.\n\n\u003CExample code={`\u003Csamp>This text is meant to be treated as sample output from a computer program.\u003C/samp>`} />\n\n## Tables\n\nTables are slightly adjusted to style `\u003Ccaption>`s, collapse borders, and ensure consistent `text-align` throughout. Additional changes for borders, padding, and more come with [the `.table` class]([[docsref:/content/tables]]).\n\n\u003CExample code={`\u003Ctable>\n  \u003Ccaption>\n    This is an example table, and this is its caption to describe the contents.\n  \u003C/caption>\n  \u003Cthead>\n    \u003Ctr>\n      \u003Cth>Table heading\u003C/th>\n      \u003Cth>Table heading\u003C/th>\n      \u003Cth>Table heading\u003C/th>\n      \u003Cth>Table heading\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n      \u003Ctd>Table cell\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>`} />\n\n## Forms\n\nVarious form elements have been rebooted for simpler base styles. Here are some of the most notable changes:\n\n- `\u003Cfieldset>`s have no borders, padding, or margin so they can be easily used as wrappers for individual inputs or groups of inputs.\n- `\u003Clegend>`s, like fieldsets, have also been restyled to be displayed as a heading of sorts.\n- `\u003Clabel>`s are set to `display: inline-block` to allow `margin` to be applied.\n- `\u003Cinput>`s, `\u003Cselect>`s, `\u003Ctextarea>`s, and `\u003Cbutton>`s are mostly addressed by Normalize, but Reboot removes their `margin` and sets `line-height: inherit`, too.\n- `\u003Ctextarea>`s are modified to only be resizable vertically as horizontal resizing often \"breaks\" page layout.\n- `\u003Cbutton>`s and `\u003Cinput>` button elements have `cursor: pointer` when `:not(:disabled)`.\n\nThese changes, and more, are demonstrated below.\n\n\u003CCallout name=\"warning-input-support\" type=\"warning\" />\n\n\u003Cform class=\"bd-example\">\n  \u003Cfieldset>\n    \u003Clegend>Example legend\u003C/legend>\n    \u003Cp>\n      \u003Clabel for=\"input\">Example input\u003C/label>\n      \u003Cinput type=\"text\" id=\"input\" placeholder=\"Example input\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"email\">Example email\u003C/label>\n      \u003Cinput type=\"email\" id=\"email\" placeholder=\"test@example.com\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"tel\">Example telephone\u003C/label>\n      \u003Cinput type=\"tel\" id=\"tel\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"url\">Example url\u003C/label>\n      \u003Cinput type=\"url\" id=\"url\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"number\">Example number\u003C/label>\n      \u003Cinput type=\"number\" id=\"number\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"search\">Example search\u003C/label>\n      \u003Cinput type=\"search\" id=\"search\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"range\">Example range\u003C/label>\n      \u003Cinput type=\"range\" id=\"range\" min=\"0\" max=\"10\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"file\">Example file input\u003C/label>\n      \u003Cinput type=\"file\" id=\"file\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"select\">Example select\u003C/label>\n      \u003Cselect id=\"select\">\n        \u003Coption value=\"\">Choose...\u003C/option>\n        \u003Coptgroup label=\"Option group 1\">\n          \u003Coption value=\"\">Option 1\u003C/option>\n          \u003Coption value=\"\">Option 2\u003C/option>\n          \u003Coption value=\"\">Option 3\u003C/option>\n        \u003C/optgroup>\n        \u003Coptgroup label=\"Option group 2\">\n          \u003Coption value=\"\">Option 4\u003C/option>\n          \u003Coption value=\"\">Option 5\u003C/option>\n          \u003Coption value=\"\">Option 6\u003C/option>\n        \u003C/optgroup>\n      \u003C/select>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel>\n        \u003Cinput type=\"checkbox\" value=\"\"/>\n        Check this checkbox\n      \u003C/label>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel>\n        \u003Cinput type=\"radio\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" checked/>\n        Option one is this and that\n      \u003C/label>\n      \u003Clabel>\n        \u003Cinput type=\"radio\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"/>\n        Option two is something else that's also super long to demonstrate the wrapping of these fancy form controls.\n      \u003C/label>\n      \u003Clabel>\n        \u003Cinput type=\"radio\" name=\"optionsRadios\" id=\"optionsRadios3\" value=\"option3\" disabled/>\n        Option three is disabled\n      \u003C/label>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"textarea\">Example textarea\u003C/label>\n      \u003Ctextarea id=\"textarea\" rows=\"3\">\u003C/textarea>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"date\">Example date\u003C/label>\n      \u003Cinput type=\"date\" id=\"date\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"time\">Example time\u003C/label>\n      \u003Cinput type=\"time\" id=\"time\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"password\">Example password\u003C/label>\n      \u003Cinput type=\"password\" id=\"password\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"datetime-local\">Example datetime-local\u003C/label>\n      \u003Cinput type=\"datetime-local\" id=\"datetime-local\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"week\">Example week\u003C/label>\n      \u003Cinput type=\"week\" id=\"week\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"month\">Example month\u003C/label>\n      \u003Cinput type=\"month\" id=\"month\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"color\">Example color\u003C/label>\n      \u003Cinput type=\"color\" id=\"color\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Clabel for=\"output\">Example output\u003C/label>\n      \u003Coutput name=\"result\" id=\"output\">100\u003C/output>\n    \u003C/p>\n    \u003Cp>\n      \u003Cbutton type=\"submit\">Button submit\u003C/button>\n      \u003Cinput type=\"submit\" value=\"Input submit button\"/>\n      \u003Cinput type=\"reset\" value=\"Input reset button\"/>\n      \u003Cinput type=\"button\" value=\"Input button\"/>\n    \u003C/p>\n    \u003Cp>\n      \u003Cbutton type=\"submit\" disabled>Button submit\u003C/button>\n      \u003Cinput type=\"submit\" value=\"Input submit button\" disabled/>\n      \u003Cinput type=\"reset\" value=\"Input reset button\" disabled/>\n      \u003Cinput type=\"button\" value=\"Input button\" disabled/>\n    \u003C/p>\n  \u003C/fieldset>\n\u003C/form>\n\n### Pointers on buttons\n\nReboot includes an enhancement for `role=\"button\"` to change the default cursor to `pointer`. Add this attribute to elements to help indicate elements are interactive. This role isn't necessary for `\u003Cbutton>` elements, which get their own `cursor` change.\n\n\u003CExample code={`\u003Cspan role=\"button\" tabindex=\"0\">Non-button element button\u003C/span>`} />\n\n## Misc elements\n\n### Address\n\nThe `\u003Caddress>` element is updated to reset the browser default `font-style` from `italic` to `normal`. `line-height` is also now inherited, and `margin-bottom: 1rem` has been added. `\u003Caddress>`s are for presenting contact information for the nearest ancestor (or an entire body of work). Preserve formatting by ending lines with `\u003Cbr/>`.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Caddress>\n    \u003Cstrong>ACME Corporation\u003C/strong>\u003Cbr/>\n    1123 Fictional St,\u003Cbr/>\n    San Francisco, CA 94103\u003Cbr/>\n    \u003Cabbr title=\"Phone\">P:\u003C/abbr> (123) 456-7890\n  \u003C/address>\n\n  \u003Caddress>\n    \u003Cstrong>Full Name\u003C/strong>\u003Cbr/>\n    \u003Ca href=\"mailto:first.last@example.com\">first.last@example.com\u003C/a>\n  \u003C/address>\n\u003C/div>\n\n### Blockquote\n\nThe default `margin` on blockquotes is `1em 40px`, so we reset that to `0 0 1rem` for something more consistent with other elements.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cblockquote class=\"blockquote\">\n    \u003Cp>A well-known quote, contained in a blockquote element.\u003C/p>\n  \u003C/blockquote>\n  \u003Cp>Someone famous in \u003Ccite title=\"Source Title\">Source Title\u003C/cite>\u003C/p>\n\u003C/div>\n\n### Inline elements\n\nThe `\u003Cabbr>` element receives basic styling to make it stand out amongst paragraph text.\n\n\u003Cdiv class=\"bd-example\">\n  The \u003Cabbr title=\"HyperText Markup Language\">HTML\u003C/abbr> abbreviation element.\n\u003C/div>\n\n### Summary\n\nThe default `cursor` on summary is `text`, so we reset that to `pointer` to convey that the element can be interacted with by clicking on it.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdetails>\n    \u003Csummary>Some details\u003C/summary>\n    \u003Cp>More info about the details.\u003C/p>\n  \u003C/details>\n\n  \u003Cdetails open>\n    \u003Csummary>Even more details\u003C/summary>\n    \u003Cp>Here are even more details about the details.\u003C/p>\n  \u003C/details>\n\u003C/div>\n\n## HTML5 `[hidden]` attribute\n\nHTML5 adds [a new global attribute named `[hidden]`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden), which is styled as `display: none` by default. Borrowing an idea from [PureCSS](https://purecss.io/), we improve upon this default by making `[hidden] { display: none !important; }` to help prevent its `display` from getting accidentally overridden.\n\n```html\n\u003Cinput type=\"text\" hidden/>\n```\n\n\u003CCallout>\nSince `[hidden]` is not compatible with jQuery's `$(...).hide()` and `$(...).show()` methods, we don't specifically endorse `[hidden]` over other techniques for managing the `display` of elements.\n\u003C/Callout>\n\nTo merely toggle the visibility of an element, meaning its `display` is not modified and the element can still affect the flow of the document, use [the `.invisible` class]([[docsref:/utilities/visibility]]) instead.","src/content/docs/content/reboot.mdx","93ee6fd27784eb6f","content/reboot.mdx","content/typography",{"id":230,"data":232,"body":235,"filePath":236,"digest":237,"legacyId":238,"deferredRender":139},{"description":233,"title":234,"toc":139},"Documentation and examples for Bootstrap typography, including global settings, headings, body text, lists, and more.","Typography","## Global settings\n\nBootstrap sets basic global display, typography, and link styles. When more control is needed, check out the [textual utility classes]([[docsref:/utilities/text]]).\n\n- Use a [native font stack]([[docsref:/content/reboot#native-font-stack]]) that selects the best `font-family` for each OS and device.\n- For a more inclusive and accessible type scale, we use the browser's default root `font-size` (typically 16px) so visitors can customize their browser defaults as needed.\n- Use the `$font-family-base`, `$font-size-base`, and `$line-height-base` attributes as our typographic base applied to the `\u003Cbody>`.\n- Set the global link color via `$link-color`.\n- Use `$body-bg` to set a `background-color` on the `\u003Cbody>` (`#fff` by default).\n\nThese styles can be found within `_reboot.scss`, and the global variables are defined in `_variables.scss`. Make sure to set `$font-size-base` in `rem`.\n\n## Headings\n\nAll HTML headings, `\u003Ch1>` through `\u003Ch6>`, are available.\n\n\u003CBsTable>\n| Heading | Example |\n| --- | --- |\n| `\u003Ch1>\u003C/h1>` | \u003Cspan class=\"h1\">h1. Bootstrap heading\u003C/span> |\n| `\u003Ch2>\u003C/h2>` | \u003Cspan class=\"h2\">h2. Bootstrap heading\u003C/span> |\n| `\u003Ch3>\u003C/h3>` | \u003Cspan class=\"h3\">h3. Bootstrap heading\u003C/span> |\n| `\u003Ch4>\u003C/h4>` | \u003Cspan class=\"h4\">h4. Bootstrap heading\u003C/span> |\n| `\u003Ch5>\u003C/h5>` | \u003Cspan class=\"h5\">h5. Bootstrap heading\u003C/span> |\n| `\u003Ch6>\u003C/h6>` | \u003Cspan class=\"h6\">h6. Bootstrap heading\u003C/span> |\n\u003C/BsTable>\n\n```html\n\u003Ch1>h1. Bootstrap heading\u003C/h1>\n\u003Ch2>h2. Bootstrap heading\u003C/h2>\n\u003Ch3>h3. Bootstrap heading\u003C/h3>\n\u003Ch4>h4. Bootstrap heading\u003C/h4>\n\u003Ch5>h5. Bootstrap heading\u003C/h5>\n\u003Ch6>h6. Bootstrap heading\u003C/h6>\n```\n\n`.h1` through `.h6` classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.\n\n\u003CExample code={`\u003Cp class=\"h1\">h1. Bootstrap heading\u003C/p>\n\u003Cp class=\"h2\">h2. Bootstrap heading\u003C/p>\n\u003Cp class=\"h3\">h3. Bootstrap heading\u003C/p>\n\u003Cp class=\"h4\">h4. Bootstrap heading\u003C/p>\n\u003Cp class=\"h5\">h5. Bootstrap heading\u003C/p>\n\u003Cp class=\"h6\">h6. Bootstrap heading\u003C/p>`} />\n\n### Customizing headings\n\nUse the included utility classes to recreate the small secondary heading text from Bootstrap 3.\n\n\u003CExample code={`\u003Ch3>\n  Fancy display heading\n  \u003Csmall class=\"text-body-secondary\">With faded secondary text\u003C/small>\n\u003C/h3>`} />\n\n## Display headings\n\nTraditional heading elements are designed to work best in the meat of your page content. When you need a heading to stand out, consider using a **display heading**—a larger, slightly more opinionated heading style.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"display-1 pb-3 mb-3 border-bottom\">Display 1\u003C/div>\n  \u003Cdiv class=\"display-2 pb-3 mb-3 border-bottom\">Display 2\u003C/div>\n  \u003Cdiv class=\"display-3 pb-3 mb-3 border-bottom\">Display 3\u003C/div>\n  \u003Cdiv class=\"display-4 pb-3 mb-3 border-bottom\">Display 4\u003C/div>\n  \u003Cdiv class=\"display-5 pb-3 mb-3 border-bottom\">Display 5\u003C/div>\n  \u003Cdiv class=\"display-6\">Display 6\u003C/div>\n\u003C/div>\n\n```html\n\u003Ch1 class=\"display-1\">Display 1\u003C/h1>\n\u003Ch1 class=\"display-2\">Display 2\u003C/h1>\n\u003Ch1 class=\"display-3\">Display 3\u003C/h1>\n\u003Ch1 class=\"display-4\">Display 4\u003C/h1>\n\u003Ch1 class=\"display-5\">Display 5\u003C/h1>\n\u003Ch1 class=\"display-6\">Display 6\u003C/h1>\n```\n\nDisplay headings are configured via the `$display-font-sizes` Sass map and two variables, `$display-font-weight` and `$display-line-height`.\n\nDisplay headings are customizable via two variables, `$display-font-family` and `$display-font-style`.\n\n\u003CScssDocs name=\"display-headings\" file=\"scss/_variables.scss\" />\n\n## Lead\n\nMake a paragraph stand out by adding `.lead`.\n\n\u003CExample code={`\u003Cp class=\"lead\">\n  This is a lead paragraph. It stands out from regular paragraphs.\n\u003C/p>`} />\n\n## Inline text elements\n\nStyling for common inline HTML5 elements.\n\n\u003CExample code={`\u003Cp>You can use the mark tag to \u003Cmark>highlight\u003C/mark> text.\u003C/p>\n\u003Cp>\u003Cdel>This line of text is meant to be treated as deleted text.\u003C/del>\u003C/p>\n\u003Cp>\u003Cs>This line of text is meant to be treated as no longer accurate.\u003C/s>\u003C/p>\n\u003Cp>\u003Cins>This line of text is meant to be treated as an addition to the document.\u003C/ins>\u003C/p>\n\u003Cp>\u003Cu>This line of text will render as underlined.\u003C/u>\u003C/p>\n\u003Cp>\u003Csmall>This line of text is meant to be treated as fine print.\u003C/small>\u003C/p>\n\u003Cp>\u003Cstrong>This line rendered as bold text.\u003C/strong>\u003C/p>\n\u003Cp>\u003Cem>This line rendered as italicized text.\u003C/em>\u003C/p>`} />\n\nBeware that those tags should be used for semantic purpose:\n\n- `\u003Cmark>` represents text which is marked or highlighted for reference or notation purposes.\n- `\u003Csmall>` represents side-comments and small print, like copyright and legal text.\n- `\u003Cs>` represents element that are no longer relevant or no longer accurate.\n- `\u003Cu>` represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation.\n\nIf you want to style your text, you should use the following classes instead:\n\n- `.mark` will apply the same styles as `\u003Cmark>`.\n- `.small` will apply the same styles as `\u003Csmall>`.\n- `.text-decoration-underline` will apply the same styles as `\u003Cu>`.\n- `.text-decoration-line-through` will apply the same styles as `\u003Cs>`.\n\nWhile not shown above, feel free to use `\u003Cb>` and `\u003Ci>` in HTML5. `\u003Cb>` is meant to highlight words or phrases without conveying additional importance, while `\u003Ci>` is mostly for voice, technical terms, etc.\n\n## Text utilities\n\nChange text alignment, transform, style, weight, line-height, decoration and color with our [text utilities]([[docsref:/utilities/text]]) and [color utilities]([[docsref:/utilities/colors]]).\n\n## Abbreviations\n\nStylized implementation of HTML's `\u003Cabbr>` element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.\n\nAdd `.initialism` to an abbreviation for a slightly smaller font-size.\n\n\u003CExample code={`\u003Cp>\u003Cabbr title=\"attribute\">attr\u003C/abbr>\u003C/p>\n\u003Cp>\u003Cabbr title=\"HyperText Markup Language\" class=\"initialism\">HTML\u003C/abbr>\u003C/p>`} />\n\n## Blockquotes\n\nFor quoting blocks of content from another source within your document. Wrap `\u003Cblockquote class=\"blockquote\">` around any HTML as the quote.\n\n\u003CExample code={`\u003Cblockquote class=\"blockquote\">\n  \u003Cp>A well-known quote, contained in a blockquote element.\u003C/p>\n\u003C/blockquote>`} />\n\n### Naming a source\n\nThe HTML spec requires that blockquote attribution be placed outside the `\u003Cblockquote>`. When providing attribution, wrap your `\u003Cblockquote>` in a `\u003Cfigure>` and use a `\u003Cfigcaption>` or a block level element (e.g., `\u003Cp>`) with the `.blockquote-footer` class. Be sure to wrap the name of the source work in `\u003Ccite>` as well.\n\n\u003CExample code={`\u003Cfigure>\n  \u003Cblockquote class=\"blockquote\">\n    \u003Cp>A well-known quote, contained in a blockquote element.\u003C/p>\n  \u003C/blockquote>\n  \u003Cfigcaption class=\"blockquote-footer\">\n    Someone famous in \u003Ccite title=\"Source Title\">Source Title\u003C/cite>\n  \u003C/figcaption>\n\u003C/figure>`} />\n\n### Alignment\n\nUse text utilities as needed to change the alignment of your blockquote.\n\n\u003CExample code={`\u003Cfigure class=\"text-center\">\n  \u003Cblockquote class=\"blockquote\">\n    \u003Cp>A well-known quote, contained in a blockquote element.\u003C/p>\n  \u003C/blockquote>\n  \u003Cfigcaption class=\"blockquote-footer\">\n    Someone famous in \u003Ccite title=\"Source Title\">Source Title\u003C/cite>\n  \u003C/figcaption>\n\u003C/figure>`} />\n\n\u003CExample code={`\u003Cfigure class=\"text-end\">\n  \u003Cblockquote class=\"blockquote\">\n    \u003Cp>A well-known quote, contained in a blockquote element.\u003C/p>\n  \u003C/blockquote>\n  \u003Cfigcaption class=\"blockquote-footer\">\n    Someone famous in \u003Ccite title=\"Source Title\">Source Title\u003C/cite>\n  \u003C/figcaption>\n\u003C/figure>`} />\n\n## Lists\n\n### Unstyled\n\nRemove the default `list-style` and left margin on list items (immediate children only). **This only applies to immediate children list items**, meaning you will need to add the class for any nested lists as well.\n\n\u003CExample code={`\u003Cul class=\"list-unstyled\">\n  \u003Cli>This is a list.\u003C/li>\n  \u003Cli>It appears completely unstyled.\u003C/li>\n  \u003Cli>Structurally, it's still a list.\u003C/li>\n  \u003Cli>However, this style only applies to immediate child elements.\u003C/li>\n  \u003Cli>Nested lists:\n    \u003Cul>\n      \u003Cli>are unaffected by this style\u003C/li>\n      \u003Cli>will still show a bullet\u003C/li>\n      \u003Cli>and have appropriate left margin\u003C/li>\n    \u003C/ul>\n  \u003C/li>\n  \u003Cli>This may still come in handy in some situations.\u003C/li>\n\u003C/ul>`} />\n\n### Inline\n\nRemove a list's bullets and apply some light `margin` with a combination of two classes, `.list-inline` and `.list-inline-item`.\n\n\u003CExample code={`\u003Cul class=\"list-inline\">\n  \u003Cli class=\"list-inline-item\">This is a list item.\u003C/li>\n  \u003Cli class=\"list-inline-item\">And another one.\u003C/li>\n  \u003Cli class=\"list-inline-item\">But they're displayed inline.\u003C/li>\n\u003C/ul>`} />\n\n### Description list alignment\n\nAlign terms and descriptions horizontally by using our grid system's predefined classes (or semantic mixins). For longer terms, you can optionally add a `.text-truncate` class to truncate the text with an ellipsis.\n\n\u003CExample code={`\u003Cdl class=\"row\">\n  \u003Cdt class=\"col-sm-3\">Description lists\u003C/dt>\n  \u003Cdd class=\"col-sm-9\">A description list is perfect for defining terms.\u003C/dd>\n\n  \u003Cdt class=\"col-sm-3\">Term\u003C/dt>\n  \u003Cdd class=\"col-sm-9\">\n    \u003Cp>Definition for the term.\u003C/p>\n    \u003Cp>And some more placeholder definition text.\u003C/p>\n  \u003C/dd>\n\n  \u003Cdt class=\"col-sm-3\">Another term\u003C/dt>\n  \u003Cdd class=\"col-sm-9\">This definition is short, so no extra paragraphs or anything.\u003C/dd>\n\n  \u003Cdt class=\"col-sm-3 text-truncate\">Truncated term is truncated\u003C/dt>\n  \u003Cdd class=\"col-sm-9\">This can be useful when space is tight. Adds an ellipsis at the end.\u003C/dd>\n\n  \u003Cdt class=\"col-sm-3\">Nesting\u003C/dt>\n  \u003Cdd class=\"col-sm-9\">\n    \u003Cdl class=\"row\">\n      \u003Cdt class=\"col-sm-4\">Nested definition list\u003C/dt>\n      \u003Cdd class=\"col-sm-8\">I heard you like definition lists. Let me put a definition list inside your definition list.\u003C/dd>\n    \u003C/dl>\n  \u003C/dd>\n\u003C/dl>`} />\n\n## Responsive font sizes\n\nIn Bootstrap 5, we've enabled responsive font sizes by default, allowing text to scale more naturally across device and viewport sizes. Have a look at the [RFS page]([[docsref:/getting-started/rfs]]) to find out how this works.\n\n## CSS\n\n### Sass variables\n\nHeadings have some dedicated variables for sizing and spacing.\n\n\u003CScssDocs name=\"headings-variables\" file=\"scss/_variables.scss\" />\n\nMiscellaneous typography elements covered here and in [Reboot]([[docsref:/content/reboot]]) also have dedicated variables.\n\n\u003CScssDocs name=\"type-variables\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\nThere are no dedicated mixins for typography, but Bootstrap does use [Responsive Font Sizing (RFS)]([[docsref:/getting-started/rfs]]).","src/content/docs/content/typography.mdx","b2c265f7bf9965fc","content/typography.mdx","customize/color",{"id":239,"data":241,"body":244,"filePath":245,"digest":246,"legacyId":247,"deferredRender":139},{"description":242,"title":243,"toc":139},"Bootstrap is supported by an extensive color system that themes our styles and components. This enables more comprehensive customization and extension for any project.","Color","import { getData } from '@libs/data'\nimport { getSequence } from '@libs/utils'\n\n## Colors\n\n\u003CAddedIn version=\"5.3.0\" />\n\nBootstrap's color palette has continued to expand and become more nuanced in v5.3.0. We've added new variables for `secondary` and `tertiary` text and background colors, plus `{color}-bg-subtle`, `{color}-border-subtle`, and `{color}-text-emphasis` for our theme colors. These new colors are available through Sass and CSS variables (but not our color maps or utility classes) with the express goal of making it easier to customize across multiple colors modes like light and dark. These new variables are globally set on `:root` and are adapted for our new dark color mode while our original theme colors remain unchanged.\n\nColors ending in `-rgb` provide the `red, green, blue` values for use in `rgb()` and `rgba()` color modes. For example, `rgba(var(--bs-secondary-bg-rgb), .5)`.\n\n\u003CCallout type=\"warning\">\n**Heads up!** There's some potential confusion with our new secondary and tertiary colors, and our existing secondary theme color, as well as our light and dark theme colors. Expect this to be ironed out in v6.\n\u003C/Callout>\n\n\u003Cdiv class=\"table-responsive\">\n  \u003Ctable class=\"table table-swatches\">\n    \u003Cthead>\n      \u003Ctr>\n        \u003Cth style=\"width: 340px;\">Description\u003C/th>\n        \u003Cth style=\"width: 200px;\" class=\"ps-0\">Swatch\u003C/th>\n        \u003Cth>Variables\u003C/th>\n      \u003C/tr>\n    \u003C/thead>\n    \u003Ctbody>\n      \u003Ctr>\n        \u003Ctd rowspan=\"2\">\n          **Body —** Default foreground (color) and background, including components.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-body-color);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-body-color`\u003Cbr/>`--bs-body-color-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2 border\" style=\"background-color: var(--bs-body-bg);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-body-bg`\u003Cbr/>`--bs-body-bg-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"2\">\n          **Secondary —** Use the `color` option for lighter text. Use the `bg` option for dividers and to indicate disabled component states.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-secondary-color);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-secondary-color`\u003Cbr/>`--bs-secondary-color-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2 border\" style=\"background-color: var(--bs-secondary-bg);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-secondary-bg`\u003Cbr/>`--bs-secondary-bg-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"2\">\n          **Tertiary —** Use the `color` option for even lighter text. Use the `bg` option to style backgrounds for hover states, accents, and wells.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-tertiary-color);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-tertiary-color`\u003Cbr/>`--bs-tertiary-color-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2 border\" style=\"background-color: var(--bs-tertiary-bg);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-tertiary-bg`\u003Cbr/>`--bs-tertiary-bg-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          **Emphasis —** For higher contrast text. Not applicable for backgrounds.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-emphasis-color);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-emphasis-color`\u003Cbr/>`--bs-emphasis-color-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          **Border —** For component borders, dividers, and rules. Use `--bs-border-color-translucent` to blend with backgrounds with an `rgba()` value.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-border-color);\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-border-color`\u003Cbr/>`--bs-border-color-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Primary —** Main theme color, used for hyperlinks, focus styles, and component and form active states.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-primary\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-primary`\u003Cbr/>`--bs-primary-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-primary-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-primary-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-primary-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-primary-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-primary-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-primary-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Success —** Theme color used for positive or successful actions and information.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-success\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-success`\u003Cbr/>`--bs-success-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-success-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-success-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-success-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-success-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-success-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-success-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Danger —** Theme color used for errors and dangerous actions.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-danger\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-danger`\u003Cbr/>`--bs-danger-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-danger-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-danger-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-danger-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-danger-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-danger-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-danger-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Warning —** Theme color used for non-destructive warning messages.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-warning\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-warning`\u003Cbr/>`--bs-warning-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-warning-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-warning-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-warning-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-warning-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-warning-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-warning-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Info —** Theme color used for neutral and informative content.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-info\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-info`\u003Cbr/>`--bs-info-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-info-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-info-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-info-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-info-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-info-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-info-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Light —** Additional theme option for less contrasting colors.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-light\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-light`\u003Cbr/>`--bs-light-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-light-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-light-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-light-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-light-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-light-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-light-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd rowspan=\"4\">\n          **Dark —** Additional theme option for higher contrasting colors.\n        \u003C/td>\n        \u003Ctd class=\"ps-0\">\n          \u003Cdiv class=\"p-3 rounded-2 bg-dark\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-dark`\u003Cbr/>`--bs-dark-rgb`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"background-color: var(--bs-dark-bg-subtle)\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-dark-bg-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"p-3 rounded-2\" style=\"border: 5px var(--bs-dark-border-subtle) solid\">&nbsp;\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-dark-border-subtle`\n        \u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>\n          \u003Cdiv class=\"py-3 fw-bold h5\" style=\"color: var(--bs-dark-text-emphasis)\">Text\u003C/div>\n        \u003C/td>\n        \u003Ctd>\n          `--bs-dark-text-emphasis`\n        \u003C/td>\n      \u003C/tr>\n    \u003C/tbody>\n  \u003C/table>\n\u003C/div>\n\n### Using the new colors\n\nThese new colors are accessible via CSS variables and utility classes—like `--bs-primary-bg-subtle` and `.bg-primary-subtle`—allowing you to compose your own CSS rules with the variables, or to quickly apply styles via classes. The utilities are built with the color's associated CSS variables, and since we customize those CSS variables for dark mode, they are also adaptive to color mode by default.\n\n\u003CExample code={`\u003Cdiv class=\"p-3 text-primary-emphasis bg-primary-subtle border border-primary-subtle rounded-3\">\n  Example element with utilities\n\u003C/div>`} />\n\n### Theme colors\n\nWe use a subset of all colors to create a smaller color palette for generating color schemes, also available as Sass variables and a Sass map in Bootstrap's `scss/_variables.scss` file.\n\n\u003Cdiv class=\"row\">\n  {getData('theme-colors').map((themeColor) => {\n    return (\n      \u003Cdiv class=\"col-md-4\">\n        \u003Cdiv class={`p-3 mb-3 text-bg-${themeColor.name} rounded-3`}>{themeColor.title}\u003C/div>\n      \u003C/div>\n    )\n  })}\n\u003C/div>\n\nAll these colors are available as a Sass map, `$theme-colors`.\n\n\u003CScssDocs name=\"theme-colors-map\" file=\"scss/_variables.scss\" />\n\nCheck out [our Sass maps and loops docs]([[docsref:/customize/sass#maps-and-loops]]) for how to modify these colors.\n\n### All colors\n\nAll Bootstrap colors are available as Sass variables and a Sass map in `scss/_variables.scss` file. To avoid increased file sizes, we don't create text or background color classes for each of these variables. Instead, we choose a subset of these colors for a [theme palette](#theme-colors).\n\nBe sure to monitor contrast ratios as you customize colors. As shown below, we've added three contrast ratios to each of the main colors—one for the swatch's current colors, one for against white, and one for against black.\n\n\u003Cdiv class=\"row font-monospace\">\n  {getData('colors').map((color) => {\n    if ((color.name !== \"white\") && (color.name !== \"gray\") && (color.name !== \"gray-dark\")) {\n      return (\n        \u003Cdiv class=\"col-md-4 mb-3\">\n          \u003Cdiv class={`p-3 mb-2 position-relative swatch-${color.name}`}>\n            \u003Cstrong class=\"d-block\">${color.name}\u003C/strong>\n            {color.hex}\n          \u003C/div>\n\n          {getSequence(100, 900, 100).map((value) => {\n            return (\n              \u003Cdiv class={`p-3 bd-${color.name}-${value}`}>${color.name}-{value}\u003C/div>\n            )\n          })}\n        \u003C/div>\n      )\n    }\n  })}\n\n  \u003Cdiv class=\"col-md-4 mb-3\">\n    \u003Cdiv class=\"p-3 mb-2 position-relative swatch-gray-500\">\u003Cstrong class=\"d-block\">$gray-500\u003C/strong>#adb5bd\u003C/div>\n    {getData('grays').map((gray) => {\n      return (\n        \u003Cdiv class={`p-3 bd-gray-${gray.name}`}>$gray-{gray.name}\u003C/div>\n      )\n    })}\n  \u003C/div>\n\n  \u003Cdiv class=\"col-md-4 mb-3\">\n    \u003Cdiv class=\"p-3 mb-2 bd-black text-white\">\n      \u003Cstrong class=\"d-block\">$black\u003C/strong>\n      #000\n    \u003C/div>\n    \u003Cdiv class=\"p-3 mb-2 bd-white border\">\n      \u003Cstrong class=\"d-block\">$white\u003C/strong>\n      #fff\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n### Notes on Sass\n\nSass cannot programmatically generate variables, so we manually created variables for every tint and shade ourselves. We specify the midpoint value (e.g., `$blue-500`) and use custom color functions to tint (lighten) or shade (darken) our colors via Sass's `mix()` color function.\n\nUsing `mix()` is not the same as `lighten()` and `darken()`—the former blends the specified color with white or black, while the latter only adjusts the lightness value of each color. The result is a much more complete suite of colors, as [shown in this CodePen demo](https://codepen.io/emdeoh/pen/zYOQOPB).\n\nOur `tint-color()` and `shade-color()` functions use `mix()` alongside our `$theme-color-interval` variable, which specifies a stepped percentage value for each mixed color we produce. See the `scss/_functions.scss` and `scss/_variables.scss` files for the full source code.\n\n## Color Sass maps\n\nBootstrap's source Sass files include three maps to help you quickly and easily loop over a list of colors and their hex values.\n\n- `$colors` lists all our available base (`500`) colors\n- `$theme-colors` lists all semantically named theme colors (shown below)\n- `$grays` lists all tints and shades of gray\n\nWithin `scss/_variables.scss`, you'll find Bootstrap's color variables and Sass map. Here's an example of the `$colors` Sass map:\n\n\u003CScssDocs name=\"colors-map\" file=\"scss/_variables.scss\" />\n\nAdd, remove, or modify values within the map to update how they're used in many other components. Unfortunately at this time, not _every_ component utilizes this Sass map. Future updates will strive to improve upon this. Until then, plan on making use of the `${color}` variables and this Sass map.\n\n### Example\n\nHere's how you can use these in your Sass:\n\n```scss\n.alpha { color: $purple; }\n.beta {\n  color: $yellow-300;\n  background-color: $indigo-900;\n}\n```\n\n[Color]([[docsref:/utilities/colors]]) and [background]([[docsref:/utilities/background]]) utility classes are also available for setting `color` and `background-color` using the `500` color values.\n\n## Generating utilities\n\n\u003CAddedIn version=\"5.1.0\"/>\n\nBootstrap doesn't include `color` and `background-color` utilities for every color variable, but you can generate these yourself with our [utility API]([[docsref:/utilities/api]]) and our extended Sass maps added in v5.1.0.\n\n1. To start, make sure you've imported our functions, variables, mixins, and utilities.\n2. Use our `map-merge-multiple()` function to quickly merge multiple Sass maps together in a new map.\n3. Merge this new combined map to extend any utility with a `{color}-{level}` class name.\n\nHere's an example that generates text color utilities (e.g., `.text-purple-500`) using the above steps.\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$all-colors: map-merge-multiple($blues, $indigos, $purples, $pinks, $reds, $oranges, $yellows, $greens, $teals, $cyans);\n\n$utilities: map-merge(\n  $utilities,\n  (\n    \"color\": map-merge(\n      map-get($utilities, \"color\"),\n      (\n        values: map-merge(\n          map-get(map-get($utilities, \"color\"), \"values\"),\n          (\n            $all-colors\n          ),\n        ),\n      ),\n    ),\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\nThis will generate new `.text-{color}-{level}` utilities for every color and level. You can do the same for any other utility and property as well.","src/content/docs/customize/color.mdx","ee7e14b66b69aada","customize/color.mdx","customize/color-modes",{"id":248,"data":250,"body":255,"filePath":256,"digest":257,"legacyId":258,"deferredRender":139},{"added":251,"description":253,"title":254,"toc":139},{"version":252},"5.3","Bootstrap now supports color modes, or themes, as of v5.3.0. Explore our default light color mode and the new dark mode, or create your own using our styles as your template.","Color modes","import { getDocsRelativePath } from '@libs/path'\n\n\u003CCallout>\n**Try it yourself!** Download the source code and working demo for using Bootstrap with Stylelint, and the color modes from the [twbs/examples repository](https://github.com/twbs/examples/tree/main/color-modes). You can also [open the example in StackBlitz](https://stackblitz.com/github/twbs/examples/tree/main/color-modes?file=index.html).\n\u003C/Callout>\n\n## Dark mode\n\n**Bootstrap now supports color modes, starting with dark mode!** With v5.3.0 you can implement your own color mode toggler (see below for an example from Bootstrap's docs) and apply the different color modes as you see fit. We support a light mode (default) and now dark mode. Color modes can be toggled globally on the `\u003Chtml>` element, or on specific components and elements, thanks to the `data-bs-theme` attribute.\n\nAlternatively, you can also switch to a media query implementation thanks to our color mode mixin—see [the usage section for details](#building-with-sass). Heads up though—this eliminates your ability to change themes on a per-component basis as shown below.\n\n## Example\n\nFor example, to change the color mode of a dropdown menu, add `data-bs-theme=\"light\"` or `data-bs-theme=\"dark\"` to the parent `.dropdown`. Now, no matter the global color mode, these dropdowns will display with the specified theme value.\n\n\u003CExample class=\"d-flex justify-content-between\" code={`\u003Cdiv class=\"dropdown\" data-bs-theme=\"light\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButtonLight\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Default dropdown\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButtonLight\">\n    \u003Cli>\u003Ca class=\"dropdown-item active\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"dropdown\" data-bs-theme=\"dark\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButtonDark\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dark dropdown\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButtonDark\">\n    \u003Cli>\u003Ca class=\"dropdown-item active\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n## How it works\n\n- As shown above, color mode styles are controlled by the `data-bs-theme` attribute. This attribute can be applied to the `\u003Chtml>` element, or to any other element or Bootstrap component. If applied to the `\u003Chtml>` element, it will apply to everything. If applied to a component or element, it will be scoped to that specific component or element.\n\n- For each color mode you wish to support, you'll need to add new overrides for the shared global CSS variables. We do this already in our `_root.scss` stylesheet for dark mode, with light mode being the default values. In writing color mode specific styles, use the mixin:\n\n  ```scss\n  // Color mode variables in _root.scss\n  @include color-mode(dark) {\n    // CSS variable overrides here...\n  }\n  ```\n\n- We use a custom `_variables-dark.scss` to power those shared global CSS variable overrides for dark mode. This file isn't required for your own custom color modes, but it's required for our dark mode for two reasons. First, it's better to have a single place to reset global colors. Second, some Sass variables had to be overridden for background images embedded in our CSS for accordions, form components, and more.\n\n## Usage\n\n### Enable dark mode\n\nEnable the built in dark color mode across your entire project by adding the `data-bs-theme=\"dark\"` attribute to the `\u003Chtml>` element. This will apply the dark color mode to all components and elements, other than those with a specific `data-bs-theme` attribute applied. Building on the [quick start template]([[docsref:/getting-started/introduction#quick-start]]):\n\n```html\n\u003C!doctype html>\n\u003Chtml lang=\"en\" data-bs-theme=\"dark\">\n  \u003Chead>\n    \u003Cmeta charset=\"utf-8\">\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \u003Ctitle>Bootstrap demo\u003C/title>\n    \u003Clink href=\"[[config:cdn.css]]\" rel=\"stylesheet\" integrity=\"[[config:cdn.css_hash]]\" crossorigin=\"anonymous\">\n  \u003C/head>\n  \u003Cbody>\n    \u003Ch1>Hello, world!\u003C/h1>\n    \u003Cscript src=\"[[config:cdn.js_bundle]]\" integrity=\"[[config:cdn.js_bundle_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n  \u003C/body>\n\u003C/html>\n```\n\nBootstrap does not yet ship with a built-in color mode picker, but you can use the one from our own documentation if you like. [Learn more in the JavaScript section.](#javascript)\n\n### Building with Sass\n\nOur new dark mode option is available to use for all users of Bootstrap, but it's controlled via data attributes instead of media queries and does not automatically toggle your project's color mode. You can disable our dark mode entirely via Sass by changing `$enable-dark-mode` to `false`.\n\nWe use a custom Sass mixin, `color-mode()`, to help you control _how_ color modes are applied. By default, we use a `data` attribute approach, allowing you to create more user-friendly experiences where your visitors can choose to have an automatic dark mode or control their preference (like in our own docs here). This is also an easy and scalable way to add different themes and more custom color modes beyond light and dark.\n\nIn case you want to use media queries and only make color modes automatic, you can change the mixin's default type via Sass variable. Consider the following snippet and its compiled CSS output.\n\n```scss\n$color-mode-type: data;\n\n@include color-mode(dark) {\n  .element {\n    color: var(--bs-primary-text-emphasis);\n    background-color: var(--bs-primary-bg-subtle);\n  }\n}\n```\n\nOutputs to:\n\n```css\n[data-bs-theme=dark] .element {\n  color: var(--bs-primary-text-emphasis);\n  background-color: var(--bs-primary-bg-subtle);\n}\n```\n\nAnd when setting to `media-query`:\n\n```scss\n$color-mode-type: media-query;\n\n@include color-mode(dark) {\n  .element {\n    color: var(--bs-primary-text-emphasis);\n    background-color: var(--bs-primary-bg-subtle);\n  }\n}\n```\n\nOutputs to:\n\n```css\n@media (prefers-color-scheme: dark) {\n  .element {\n    color: var(--bs-primary-text-emphasis);\n    background-color: var(--bs-primary-bg-subtle);\n  }\n}\n```\n\n## Custom color modes\n\nWhile the primary use case for color modes is light and dark mode, custom color modes are also possible. Create your own `data-bs-theme` selector with a custom value as the name of your color mode, then modify our Sass and CSS variables as needed. We opted to create a separate `_variables-dark.scss` stylesheet to house Bootstrap's dark mode specific Sass variables, but that's not required for you.\n\nFor example, you can create a \"blue theme\" with the selector `data-bs-theme=\"blue\"`. In your custom Sass or CSS file, add the new selector and override any global or component CSS variables as needed. If you're using Sass, you can also use Sass's functions within your CSS variable overrides.\n\n\u003CScssDocs name=\"custom-color-mode\" file=\"site/src/scss/_content.scss\" />\n\n\u003Cdiv class=\"bd-example text-body bg-body\" data-bs-theme=\"blue\">\n  \u003Cdiv class=\"h4\">Example blue theme\u003C/div>\n  \u003Cp>Some paragraph text to show how the blue theme might look with written copy.\u003C/p>\n\n  \u003Chr class=\"my-4\"/>\n\n  \u003Cdiv class=\"dropdown\">\n    \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButtonCustom\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropdown button\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButtonCustom\">\n      \u003Cli>\u003Ca class=\"dropdown-item active\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv data-bs-theme=\"blue\">\n  ...\n\u003C/div>\n```\n\n## JavaScript\n\nTo allow visitors or users to toggle color modes, you'll need to create a toggle element to control the `data-bs-theme` attribute on the root element, `\u003Chtml>`. We've built a toggler in our documentation that initially defers to a user's current system color mode, but provides an option to override that and pick a specific color mode.\n\nHere's a look at the JavaScript that powers it. Feel free to inspect our own documentation navbar to see how it's implemented using HTML and CSS from our own components. It is suggested to include the JavaScript at the top of your page to reduce potential screen flickering during reloading of your site. Note that if you decide to use media queries for your color modes, your JavaScript may need to be modified or removed if you prefer an implicit control.\n\n\u003CCode containerClass=\"bd-example-snippet\" lang=\"js\" filePath={getDocsRelativePath('/static/docs/[version]/assets/js/color-modes.js')} />\n\n## Adding theme colors\n\nAdding a new color in `$theme-colors` is not enough for some of our components like [alerts]([[docsref:/components/alerts]]) and [list groups]([[docsref:/components/list-group]]). New colors must also be defined in `$theme-colors-text`, `$theme-colors-bg-subtle`, and `$theme-colors-border-subtle` for light theme; but also in `$theme-colors-text-dark`, `$theme-colors-bg-subtle-dark`, and `$theme-colors-border-subtle-dark` for dark theme.\n\nThis is a manual process because Sass cannot generate its own Sass variables from an existing variable or map. In future versions of Bootstrap, we'll revisit this setup to reduce the duplication.\n\n```scss\n// Required\n@import \"functions\";\n@import \"variables\";\n@import \"variables-dark\";\n\n// Add a custom color to $theme-colors\n$custom-colors: (\n  \"custom-color\": #712cf9\n);\n$theme-colors: map-merge($theme-colors, $custom-colors);\n\n@import \"maps\";\n@import \"mixins\";\n@import \"utilities\";\n\n// Add a custom color to new theme maps\n\n// Light mode\n$custom-colors-text: (\"custom-color\": #712cf9);\n$custom-colors-bg-subtle: (\"custom-color\": #e1d2fe);\n$custom-colors-border-subtle: (\"custom-color\": #bfa1fc);\n\n$theme-colors-text: map-merge($theme-colors-text, $custom-colors-text);\n$theme-colors-bg-subtle: map-merge($theme-colors-bg-subtle, $custom-colors-bg-subtle);\n$theme-colors-border-subtle: map-merge($theme-colors-border-subtle, $custom-colors-border-subtle);\n\n// Dark mode\n$custom-colors-text-dark: (\"custom-color\": #e1d2f2);\n$custom-colors-bg-subtle-dark: (\"custom-color\": #8951fa);\n$custom-colors-border-subtle-dark: (\"custom-color\": #e1d2f2);\n\n$theme-colors-text-dark: map-merge($theme-colors-text-dark, $custom-colors-text-dark);\n$theme-colors-bg-subtle-dark: map-merge($theme-colors-bg-subtle-dark, $custom-colors-bg-subtle-dark);\n$theme-colors-border-subtle-dark: map-merge($theme-colors-border-subtle-dark, $custom-colors-border-subtle-dark);\n\n// Remainder of Bootstrap imports\n@import \"root\";\n@import \"reboot\";\n// etc\n```\n\n## CSS\n\n### Variables\n\nDozens of root level CSS variables are repeated as overrides for dark mode. These are scoped to the color mode selector, which defaults to `data-bs-theme` but [can be configured](#building-with-sass) to use a `prefers-color-scheme` media query. Use these variables as a guideline for generating your own new color modes.\n\n\u003CScssDocs name=\"root-dark-mode-vars\" file=\"scss/_root.scss\" />\n\n### Sass variables\n\nCSS variables for our dark color mode are partially generated from dark mode specific Sass variables in `_variables-dark.scss`. This also includes some custom overrides for changing the colors of embedded SVGs used throughout our components.\n\n\u003CScssDocs name=\"sass-dark-mode-vars\" file=\"scss/_variables-dark.scss\" />\n\n### Sass mixins\n\nStyles for dark mode, and any custom color modes you create, can be scoped appropriately to the `data-bs-theme` attribute selector or media query with the customizable `color-mode()` mixin. See the [Sass usage section](#building-with-sass) for more details.\n\n\u003CScssDocs name=\"color-mode-mixin\" file=\"scss/mixins/_color-mode.scss\" />","src/content/docs/customize/color-modes.mdx","b17e4c61de6235f1","customize/color-modes.mdx","content/tables",{"id":259,"data":261,"body":264,"filePath":265,"digest":266,"legacyId":267,"deferredRender":139},{"description":262,"title":263,"toc":139},"Documentation and examples for opt-in styling of tables (given their prevalent use in JavaScript plugins) with Bootstrap.","Tables","import { getData } from '@libs/data'\n\n## Overview\n\nDue to the widespread use of `\u003Ctable>` elements across third-party widgets like calendars and date pickers, Bootstrap's tables are **opt-in**. Add the base class `.table` to any `\u003Ctable>`, then extend with our optional modifier classes or custom styles. All table styles are not inherited in Bootstrap, meaning any nested tables can be styled independent from the parent.\n\nUsing the most basic table markup, here's how `.table`-based tables look in Bootstrap.\n\n\u003CTable class=\"table\" simplified={false} />\n\n## Variants\n\nUse contextual classes to color tables, table rows or individual cells.\n\n\u003CCallout>\n**Heads up!** Because of the more complicated CSS used to generate our table variants, they most likely won't see color mode adaptive styling until v6.\n\u003C/Callout>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Ctable class=\"table\">\n    \u003Cthead>\n      \u003Ctr>\n        \u003Cth scope=\"col\">Class\u003C/th>\n        \u003Cth scope=\"col\">Heading\u003C/th>\n        \u003Cth scope=\"col\">Heading\u003C/th>\n      \u003C/tr>\n    \u003C/thead>\n    \u003Ctbody>\n      \u003Ctr>\n        \u003Cth scope=\"row\">Default\u003C/th>\n        \u003Ctd>Cell\u003C/td>\n        \u003Ctd>Cell\u003C/td>\n      \u003C/tr>\n      {getData('theme-colors').map((themeColor) => {\n        return (\n          \u003Ctr class={`table-${themeColor.name}`}>\n            \u003Cth scope=\"row\">{themeColor.title}\u003C/th>\n            \u003Ctd>Cell\u003C/td>\n            \u003Ctd>Cell\u003C/td>\n          \u003C/tr>\n        )\n      })}\n    \u003C/tbody>\n  \u003C/table>\n\u003C/div>\n\n\u003CCode code={[\n  `\u003C!-- On tables -->`,\n  ...getData('theme-colors').map((themeColor) => `\u003Ctable class=\"table-${themeColor.name}\">...\u003C/table>`),\n  `\n\u003C!-- On rows -->`,\n  ...getData('theme-colors').map((themeColor) => `\u003Ctr class=\"table-${themeColor.name}\">...\u003C/tr>`),\n  `\n\u003C!-- On cells (\\`td\\` or \\`th\\`) -->\n\u003Ctr>`,\n  ...getData('theme-colors').map((themeColor) => `  \u003Ctd class=\"table-${themeColor.name}\">...\u003C/td>`),\n  `\u003C/tr>`\n]} lang=\"html\" />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## Accented tables\n\n### Striped rows\n\nUse `.table-striped` to add zebra-striping to any table row within the `\u003Ctbody>`.\n\n\u003CTable class=\"table table-striped\" />\n\n### Striped columns\n\nUse `.table-striped-columns` to add zebra-striping to any table column.\n\n\u003CTable class=\"table table-striped-columns\" />\n\nThese classes can also be added to table variants:\n\n\u003CTable class=\"table table-dark table-striped\" />\n\n\u003CTable class=\"table table-dark table-striped-columns\" />\n\n\u003CTable class=\"table table-success table-striped\" />\n\n\u003CTable class=\"table table-success table-striped-columns\" />\n\n### Hoverable rows\n\nAdd `.table-hover` to enable a hover state on table rows within a `\u003Ctbody>`.\n\n\u003CTable class=\"table table-hover\" />\n\n\u003CTable class=\"table table-dark table-hover\" />\n\nThese hoverable rows can also be combined with the striped rows variant:\n\n\u003CTable class=\"table table-striped table-hover\" />\n\n### Active tables\n\nHighlight a table row or cell by adding a `.table-active` class.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Ctable class=\"table\">\n    \u003Cthead>\n      \u003Ctr>\n        \u003Cth scope=\"col\">#\u003C/th>\n        \u003Cth scope=\"col\">First\u003C/th>\n        \u003Cth scope=\"col\">Last\u003C/th>\n        \u003Cth scope=\"col\">Handle\u003C/th>\n      \u003C/tr>\n    \u003C/thead>\n    \u003Ctbody>\n      \u003Ctr class=\"table-active\">\n        \u003Cth scope=\"row\">1\u003C/th>\n        \u003Ctd>Mark\u003C/td>\n        \u003Ctd>Otto\u003C/td>\n        \u003Ctd>@mdo\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth scope=\"row\">2\u003C/th>\n        \u003Ctd>Jacob\u003C/td>\n        \u003Ctd>Thornton\u003C/td>\n        \u003Ctd>@fat\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth scope=\"row\">3\u003C/th>\n        \u003Ctd colspan=\"2\" class=\"table-active\">Larry the Bird\u003C/td>\n        \u003Ctd>@twitter\u003C/td>\n      \u003C/tr>\n    \u003C/tbody>\n  \u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table\">\n  \u003Cthead>\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr class=\"table-active\">\n      ...\n    \u003C/tr>\n    \u003Ctr>\n      ...\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd colspan=\"2\" class=\"table-active\">Larry the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>\n```\n\n\u003Cdiv class=\"bd-example\">\n  \u003Ctable class=\"table table-dark\">\n    \u003Cthead>\n      \u003Ctr>\n        \u003Cth scope=\"col\">#\u003C/th>\n        \u003Cth scope=\"col\">First\u003C/th>\n        \u003Cth scope=\"col\">Last\u003C/th>\n        \u003Cth scope=\"col\">Handle\u003C/th>\n      \u003C/tr>\n    \u003C/thead>\n    \u003Ctbody>\n      \u003Ctr class=\"table-active\">\n        \u003Cth scope=\"row\">1\u003C/th>\n        \u003Ctd>Mark\u003C/td>\n        \u003Ctd>Otto\u003C/td>\n        \u003Ctd>@mdo\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth scope=\"row\">2\u003C/th>\n        \u003Ctd>Jacob\u003C/td>\n        \u003Ctd>Thornton\u003C/td>\n        \u003Ctd>@fat\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth scope=\"row\">3\u003C/th>\n        \u003Ctd colspan=\"2\" class=\"table-active\">Larry the Bird\u003C/td>\n        \u003Ctd>@twitter\u003C/td>\n      \u003C/tr>\n    \u003C/tbody>\n  \u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table table-dark\">\n  \u003Cthead>\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr class=\"table-active\">\n      ...\n    \u003C/tr>\n    \u003Ctr>\n      ...\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd colspan=\"2\" class=\"table-active\">Larry the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>\n```\n\n## How do the variants and accented tables work?\n\nFor the accented tables ([striped rows](#striped-rows), [striped columns](#striped-columns), [hoverable rows](#hoverable-rows), and [active tables](#active-tables)), we used some techniques to make these effects work for all our [table variants](#variants):\n\n- We start by setting the background of a table cell with the `--bs-table-bg` custom property. All table variants then set that custom property to colorize the table cells. This way, we don't get into trouble if semi-transparent colors are used as table backgrounds.\n- Then we add an inset box shadow on the table cells with `box-shadow: inset 0 0 0 9999px var(--bs-table-bg-state, var(--bs-table-bg-type, var(--bs-table-accent-bg)));` to layer on top of any specified `background-color`. It uses custom cascade to override the `box-shadow`, regardless the CSS specificity. Because we use a huge spread and no blur, the color will be monotone. Since `--bs-table-accent-bg` is set to `transparent` by default, we don't have a default box shadow.\n- When either `.table-striped`, `.table-striped-columns`, `.table-hover` or `.table-active` classes are added, either `--bs-table-bg-type` or `--bs-table-bg-state` (by default set to `initial`) are set to a semitransparent color (`--bs-table-striped-bg`, `--bs-table-active-bg` or `--bs-table-hover-bg`) to colorize the background and override default `--bs-table-accent-bg`.\n- For each table variant, we generate a `--bs-table-accent-bg` color with the highest contrast depending on that color. For example, the accent color for `.table-primary` is darker while `.table-dark` has a lighter accent color.\n- Text and border colors are generated the same way, and their colors are inherited by default.\n\nBehind the scenes it looks like this:\n\n\u003CScssDocs name=\"table-variant\" file=\"scss/mixins/_table-variants.scss\" />\n\n## Table borders\n\n### Bordered tables\n\nAdd `.table-bordered` for borders on all sides of the table and cells.\n\n\u003CTable class=\"table table-bordered\" />\n\n[Border color utilities]([[docsref:/utilities/borders#border-color]]) can be added to change colors:\n\n\u003CTable class=\"table table-bordered border-primary\" />\n\n### Tables without borders\n\nAdd `.table-borderless` for a table without borders.\n\n\u003CTable class=\"table table-borderless\" />\n\n\u003CTable class=\"table table-dark table-borderless\" />\n\n## Small tables\n\nAdd `.table-sm` to make any `.table` more compact by cutting all cell `padding` in half.\n\n\u003CTable class=\"table table-sm\" />\n\n\u003CTable class=\"table table-dark table-sm\" />\n\n## Table group dividers\n\nAdd a thicker border, darker between table groups—`\u003Cthead>`, `\u003Ctbody>`, and `\u003Ctfoot>`—with `.table-group-divider`. Customize the color by changing the `border-top-color` (which we don't currently provide a utility class for at this time).\n\n\u003CExample code={`\u003Ctable class=\"table\">\n  \u003Cthead>\n    \u003Ctr>\n      \u003Cth scope=\"col\">#\u003C/th>\n      \u003Cth scope=\"col\">First\u003C/th>\n      \u003Cth scope=\"col\">Last\u003C/th>\n      \u003Cth scope=\"col\">Handle\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody class=\"table-group-divider\">\n    \u003Ctr>\n      \u003Cth scope=\"row\">1\u003C/th>\n      \u003Ctd>Mark\u003C/td>\n      \u003Ctd>Otto\u003C/td>\n      \u003Ctd>@mdo\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">2\u003C/th>\n      \u003Ctd>Jacob\u003C/td>\n      \u003Ctd>Thornton\u003C/td>\n      \u003Ctd>@fat\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd colspan=\"2\">Larry the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>`} />\n\n## Vertical alignment\n\nTable cells of `\u003Cthead>` are always vertical aligned to the bottom. Table cells in `\u003Ctbody>` inherit their alignment from `\u003Ctable>` and are aligned to the top by default. Use the [vertical align]([[docsref:/utilities/vertical-align]]) classes to re-align where needed.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"table-responsive\">\n    \u003Ctable class=\"table align-middle\">\n      \u003Cthead>\n        \u003Ctr>\n          \u003Cth scope=\"col\" class=\"w-25\">Heading 1\u003C/th>\n          \u003Cth scope=\"col\" class=\"w-25\">Heading 2\u003C/th>\n          \u003Cth scope=\"col\" class=\"w-25\">Heading 3\u003C/th>\n          \u003Cth scope=\"col\" class=\"w-25\">Heading 4\u003C/th>\n        \u003C/tr>\n      \u003C/thead>\n      \u003Ctbody>\n        \u003Ctr>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: middle;\u003C/code> from the table\u003C/td>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: middle;\u003C/code> from the table\u003C/td>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: middle;\u003C/code> from the table\u003C/td>\n          \u003Ctd>This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.\u003C/td>\n        \u003C/tr>\n        \u003Ctr class=\"align-bottom\">\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: bottom;\u003C/code> from the table row\u003C/td>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: bottom;\u003C/code> from the table row\u003C/td>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: bottom;\u003C/code> from the table row\u003C/td>\n          \u003Ctd>This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.\u003C/td>\n        \u003C/tr>\n        \u003Ctr>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: middle;\u003C/code> from the table\u003C/td>\n          \u003Ctd>This cell inherits \u003Ccode>vertical-align: middle;\u003C/code> from the table\u003C/td>\n          \u003Ctd class=\"align-top\">This cell is aligned to the top.\u003C/td>\n          \u003Ctd>This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.\u003C/td>\n        \u003C/tr>\n      \u003C/tbody>\n    \u003C/table>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"table-responsive\">\n  \u003Ctable class=\"table align-middle\">\n    \u003Cthead>\n      \u003Ctr>\n        ...\n      \u003C/tr>\n    \u003C/thead>\n    \u003Ctbody>\n      \u003Ctr>\n        ...\n      \u003C/tr>\n      \u003Ctr class=\"align-bottom\">\n        ...\n      \u003C/tr>\n      \u003Ctr>\n        \u003Ctd>...\u003C/td>\n        \u003Ctd>...\u003C/td>\n        \u003Ctd class=\"align-top\">This cell is aligned to the top.\u003C/td>\n        \u003Ctd>...\u003C/td>\n      \u003C/tr>\n    \u003C/tbody>\n  \u003C/table>\n\u003C/div>\n```\n\n## Nesting\n\nBorder styles, active styles, and table variants are not inherited by nested tables.\n\n\u003Cdiv class=\"bd-example\">\n\u003Ctable class=\"table table-striped table-bordered\">\n  \u003Cthead>\n    \u003Ctr>\n      \u003Cth scope=\"col\">#\u003C/th>\n      \u003Cth scope=\"col\">First\u003C/th>\n      \u003Cth scope=\"col\">Last\u003C/th>\n      \u003Cth scope=\"col\">Handle\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Cth scope=\"row\">1\u003C/th>\n      \u003Ctd>Mark\u003C/td>\n      \u003Ctd>Otto\u003C/td>\n      \u003Ctd>@mdo\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Ctd colspan=\"4\">\n        \u003Ctable class=\"table mb-0\">\n          \u003Cthead>\n            \u003Ctr>\n              \u003Cth scope=\"col\">Header\u003C/th>\n              \u003Cth scope=\"col\">Header\u003C/th>\n              \u003Cth scope=\"col\">Header\u003C/th>\n            \u003C/tr>\n          \u003C/thead>\n          \u003Ctbody>\n            \u003Ctr>\n              \u003Cth scope=\"row\">A\u003C/th>\n              \u003Ctd>First\u003C/td>\n              \u003Ctd>Last\u003C/td>\n            \u003C/tr>\n            \u003Ctr>\n              \u003Cth scope=\"row\">B\u003C/th>\n              \u003Ctd>First\u003C/td>\n              \u003Ctd>Last\u003C/td>\n            \u003C/tr>\n            \u003Ctr>\n              \u003Cth scope=\"row\">C\u003C/th>\n              \u003Ctd>First\u003C/td>\n              \u003Ctd>Last\u003C/td>\n            \u003C/tr>\n          \u003C/tbody>\n        \u003C/table>\n      \u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd>Larry\u003C/td>\n      \u003Ctd>the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table table-striped table-bordered\">\n  \u003Cthead>\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    ...\n    \u003Ctr>\n      \u003Ctd colspan=\"4\">\n        \u003Ctable class=\"table mb-0\">\n          ...\n        \u003C/table>\n      \u003C/td>\n    \u003C/tr>\n    ...\n  \u003C/tbody>\n\u003C/table>\n```\n\n## How nesting works\n\nTo prevent _any_ styles from leaking to nested tables, we use the child combinator (`>`) selector in our CSS. Since we need to target all the `td`s and `th`s in the `thead`, `tbody`, and `tfoot`, our selector would look pretty long without it. As such, we use the rather odd looking `.table > :not(caption) > * > *` selector to target all `td`s and `th`s of the `.table`, but none of any potential nested tables.\n\nNote that if you add `\u003Ctr>`s as direct children of a table, those `\u003Ctr>` will be wrapped in a `\u003Ctbody>` by default, thus making our selectors work as intended.\n\n## Anatomy\n\n### Table head\n\nSimilar to tables and dark tables, use the modifier classes `.table-light` or `.table-dark` to make `\u003Cthead>`s appear light or dark gray.\n\n\u003Cdiv class=\"bd-example\">\n\u003Ctable class=\"table\">\n  \u003Cthead class=\"table-light\">\n    \u003Ctr>\n      \u003Cth scope=\"col\">#\u003C/th>\n      \u003Cth scope=\"col\">First\u003C/th>\n      \u003Cth scope=\"col\">Last\u003C/th>\n      \u003Cth scope=\"col\">Handle\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Cth scope=\"row\">1\u003C/th>\n      \u003Ctd>Mark\u003C/td>\n      \u003Ctd>Otto\u003C/td>\n      \u003Ctd>@mdo\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">2\u003C/th>\n      \u003Ctd>Jacob\u003C/td>\n      \u003Ctd>Thornton\u003C/td>\n      \u003Ctd>@fat\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd>Larry\u003C/td>\n      \u003Ctd>the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table\">\n  \u003Cthead class=\"table-light\">\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    ...\n  \u003C/tbody>\n\u003C/table>\n```\n\n\u003Cdiv class=\"bd-example\">\n\u003Ctable class=\"table\">\n  \u003Cthead class=\"table-dark\">\n    \u003Ctr>\n      \u003Cth scope=\"col\">#\u003C/th>\n      \u003Cth scope=\"col\">First\u003C/th>\n      \u003Cth scope=\"col\">Last\u003C/th>\n      \u003Cth scope=\"col\">Handle\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Cth scope=\"row\">1\u003C/th>\n      \u003Ctd>Mark\u003C/td>\n      \u003Ctd>Otto\u003C/td>\n      \u003Ctd>@mdo\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">2\u003C/th>\n      \u003Ctd>Jacob\u003C/td>\n      \u003Ctd>Thornton\u003C/td>\n      \u003Ctd>@fat\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd>Larry\u003C/td>\n      \u003Ctd>the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table\">\n  \u003Cthead class=\"table-dark\">\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    ...\n  \u003C/tbody>\n\u003C/table>\n```\n\n### Table foot\n\n\u003Cdiv class=\"bd-example\">\n\u003Ctable class=\"table\">\n  \u003Cthead>\n    \u003Ctr>\n      \u003Cth scope=\"col\">#\u003C/th>\n      \u003Cth scope=\"col\">First\u003C/th>\n      \u003Cth scope=\"col\">Last\u003C/th>\n      \u003Cth scope=\"col\">Handle\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Cth scope=\"row\">1\u003C/th>\n      \u003Ctd>Mark\u003C/td>\n      \u003Ctd>Otto\u003C/td>\n      \u003Ctd>@mdo\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">2\u003C/th>\n      \u003Ctd>Jacob\u003C/td>\n      \u003Ctd>Thornton\u003C/td>\n      \u003Ctd>@fat\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd>Larry\u003C/td>\n      \u003Ctd>the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n  \u003Ctfoot>\n    \u003Ctr>\n      \u003Ctd>Footer\u003C/td>\n      \u003Ctd>Footer\u003C/td>\n      \u003Ctd>Footer\u003C/td>\n      \u003Ctd>Footer\u003C/td>\n    \u003C/tr>\n  \u003C/tfoot>\n\u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table\">\n  \u003Cthead>\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    ...\n  \u003C/tbody>\n  \u003Ctfoot>\n    ...\n  \u003C/tfoot>\n\u003C/table>\n```\n\n### Captions\n\nA `\u003Ccaption>` functions like a heading for a table. It helps users with screen readers to find a table and understand what it's about and decide if they want to read it.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Ctable class=\"table\">\n    \u003Ccaption>List of users\u003C/caption>\n    \u003CTableContent />\n  \u003C/table>\n\u003C/div>\n\n```html\n\u003Ctable class=\"table table-sm\">\n  \u003Ccaption>List of users\u003C/caption>\n  \u003Cthead>\n    ...\n  \u003C/thead>\n  \u003Ctbody>\n    ...\n  \u003C/tbody>\n\u003C/table>\n```\n\nYou can also put the `\u003Ccaption>` on the top of the table with `.caption-top`.\n\n\u003CExample code={`\u003Ctable class=\"table caption-top\">\n  \u003Ccaption>List of users\u003C/caption>\n  \u003Cthead>\n    \u003Ctr>\n      \u003Cth scope=\"col\">#\u003C/th>\n      \u003Cth scope=\"col\">First\u003C/th>\n      \u003Cth scope=\"col\">Last\u003C/th>\n      \u003Cth scope=\"col\">Handle\u003C/th>\n    \u003C/tr>\n  \u003C/thead>\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Cth scope=\"row\">1\u003C/th>\n      \u003Ctd>Mark\u003C/td>\n      \u003Ctd>Otto\u003C/td>\n      \u003Ctd>@mdo\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">2\u003C/th>\n      \u003Ctd>Jacob\u003C/td>\n      \u003Ctd>Thornton\u003C/td>\n      \u003Ctd>@fat\u003C/td>\n    \u003C/tr>\n    \u003Ctr>\n      \u003Cth scope=\"row\">3\u003C/th>\n      \u003Ctd>Larry\u003C/td>\n      \u003Ctd>the Bird\u003C/td>\n      \u003Ctd>@twitter\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>`} />\n\n## Responsive tables\n\nResponsive tables allow tables to be scrolled horizontally with ease. Make any table responsive across all viewports by wrapping a `.table` with `.table-responsive`. Or, pick a maximum breakpoint with which to have a responsive table up to by using `.table-responsive{-sm|-md|-lg|-xl|-xxl}`.\n\n\u003CCallout type=\"warning\">\n##### Vertical clipping/truncation\n\nResponsive tables make use of `overflow-y: hidden`, which clips off any content that goes beyond the bottom or top edges of the table. In particular, this can clip off dropdown menus and other third-party widgets.\n\u003C/Callout>\n\n### Always responsive\n\nAcross every breakpoint, use `.table-responsive` for horizontally scrolling tables.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"table-responsive\">\n    \u003Ctable class=\"table\">\n      \u003Cthead>\n        \u003Ctr>\n          \u003Cth scope=\"col\">#\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n          \u003Cth scope=\"col\">Heading\u003C/th>\n        \u003C/tr>\n      \u003C/thead>\n      \u003Ctbody>\n        \u003Ctr>\n          \u003Cth scope=\"row\">1\u003C/th>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n        \u003C/tr>\n        \u003Ctr>\n          \u003Cth scope=\"row\">2\u003C/th>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n        \u003C/tr>\n        \u003Ctr>\n          \u003Cth scope=\"row\">3\u003C/th>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n          \u003Ctd>Cell\u003C/td>\n        \u003C/tr>\n      \u003C/tbody>\n    \u003C/table>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"table-responsive\">\n  \u003Ctable class=\"table\">\n    ...\n  \u003C/table>\n\u003C/div>\n```\n\n### Breakpoint specific\n\nUse `.table-responsive{-sm|-md|-lg|-xl|-xxl}` as needed to create responsive tables up to a particular breakpoint. From that breakpoint and up, the table will behave normally and not scroll horizontally.\n\n**These tables may appear broken until their responsive styles apply at specific viewport widths.**\n\n{getData('breakpoints').map((breakpoint) => {\n  if (breakpoint.breakpoint === 'xs') {\n    return \u003CFragment />\n  }\n\n  return (\n    \u003Cdiv class=\"bd-example\">\n      \u003Cdiv class={`table-responsive${breakpoint.abbr}`}>\n        \u003Ctable class=\"table\">\n          \u003Cthead>\n            \u003Ctr>\n              \u003Cth scope=\"col\">#\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n              \u003Cth scope=\"col\">Heading\u003C/th>\n            \u003C/tr>\n          \u003C/thead>\n          \u003Ctbody>\n            \u003Ctr>\n              \u003Cth scope=\"row\">1\u003C/th>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n            \u003C/tr>\n            \u003Ctr>\n              \u003Cth scope=\"row\">2\u003C/th>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n            \u003C/tr>\n            \u003Ctr>\n              \u003Cth scope=\"row\">3\u003C/th>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n              \u003Ctd>Cell\u003C/td>\n            \u003C/tr>\n          \u003C/tbody>\n        \u003C/table>\n      \u003C/div>\n    \u003C/div>\n  )\n})}\n\n\u003CCode code={getData('breakpoints').map((breakpoint) => `\u003Cdiv class=\"table-responsive${breakpoint.abbr}\">\n  \u003Ctable class=\"table\">\n    ...\n  \u003C/table>\n\u003C/div>\n`)} lang=\"html\" />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"table-variables\" file=\"scss/_variables.scss\" />\n\n### Sass loops\n\n\u003CScssDocs name=\"table-loop\" file=\"scss/_variables.scss\" />\n\n### Customizing\n\n- The factor variables (`$table-striped-bg-factor`, `$table-active-bg-factor` & `$table-hover-bg-factor`) are used to determine the contrast in table variants.\n- Apart from the light & dark table variants, theme colors are lightened by the `$table-bg-scale` variable.","src/content/docs/content/tables.mdx","8e3511c00f6f34f8","content/tables.mdx","customize/components",{"id":268,"data":270,"body":273,"filePath":274,"digest":275,"legacyId":276,"deferredRender":139},{"description":271,"title":272,"toc":139},"Learn how and why we build nearly all our components responsively and with base and modifier classes.","Components","## Base classes\n\nBootstrap's components are largely built with a base-modifier nomenclature. We group as many shared properties as possible into a base class, like `.btn`, and then group individual styles for each variant into modifier classes, like `.btn-primary` or `.btn-success`.\n\nTo build our modifier classes, we use Sass's `@each` loops to iterate over a Sass map. This is especially helpful for generating variants of a component by our `$theme-colors` and creating responsive variants for each breakpoint. As you customize these Sass maps and recompile, you'll automatically see your changes reflected in these loops.\n\nCheck out [our Sass maps and loops docs]([[docsref:/customize/sass#maps-and-loops]]) for how to customize these loops and extend Bootstrap's base-modifier approach to your own code.\n\n## Modifiers\n\nMany of Bootstrap's components are built with a base-modifier class approach. This means the bulk of the styling is contained to a base class (e.g., `.btn`) while style variations are confined to modifier classes (e.g., `.btn-danger`). These modifier classes are built from the `$theme-colors` map to make customizing the number and name of our modifier classes.\n\nHere are two examples of how we loop over the `$theme-colors` map to generate modifiers to the `.alert` and `.list-group` components.\n\n\u003CScssDocs name=\"alert-modifiers\" file=\"scss/_alert.scss\" />\n\n\u003CScssDocs name=\"list-group-modifiers\" file=\"scss/_list-group.scss\" />\n\n## Responsive\n\nThese Sass loops aren't limited to color maps, either. You can also generate responsive variations of your components. Take for example our responsive alignment of the dropdowns where we mix an `@each` loop for the `$grid-breakpoints` Sass map with a media query include.\n\n\u003CScssDocs name=\"responsive-breakpoints\" file=\"scss/_dropdown.scss\" />\n\nShould you modify your `$grid-breakpoints`, your changes will apply to all the loops iterating over that map.\n\n\u003CScssDocs name=\"grid-breakpoints\" file=\"scss/_variables.scss\" />\n\nFor more information and examples on how to modify our Sass maps and variables, please refer to [the CSS section of the Grid documentation]([[docsref:/layout/grid#css]]).\n\n## Creating your own\n\nWe encourage you to adopt these guidelines when building with Bootstrap to create your own components. We've extended this approach ourselves to the custom components in our documentation and examples. Components like our callouts are built just like our provided components with base and modifier classes.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"bd-callout my-0\">\n    \u003Cstrong>This is a callout.\u003C/strong> We built it custom for our docs so our messages to you stand out. It has three variants via modifier classes.\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"callout\">...\u003C/div>\n```\n\nIn your CSS, you'd have something like the following where the bulk of the styling is done via `.callout`. Then, the unique styles between each variant is controlled via modifier class.\n\n```scss\n// Base class\n.callout {}\n\n// Modifier classes\n.callout-info {}\n.callout-warning {}\n.callout-danger {}\n```\n\nFor the callouts, that unique styling is just a `border-left-color`. When you combine that base class with one of those modifier classes, you get your complete component family:\n\n\u003CCallout>\n**This is an info callout.** Example text to show it in action.\n\u003C/Callout>\n\n\u003CCallout type=\"warning\">\n**This is a warning callout.** Example text to show it in action.\n\u003C/Callout>\n\n\u003CCallout type=\"danger\">\n**This is a danger callout.** Example text to show it in action.\n\u003C/Callout>","src/content/docs/customize/components.mdx","657efb0c87e1c280","customize/components.mdx","customize/css-variables",{"id":277,"data":279,"body":282,"filePath":283,"digest":284,"legacyId":285,"deferredRender":139},{"description":280,"title":281,"toc":139},"Use Bootstrap's CSS custom properties for fast and forward-looking design and development.","CSS variables","Bootstrap includes many [CSS custom properties (variables)](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties) in its compiled CSS for real-time customization without the need to recompile Sass. These provide easy access to commonly used values like our theme colors, breakpoints, and primary font stacks when working in your browser's inspector, a code sandbox, or general prototyping.\n\n**All our custom properties are prefixed with `bs-`** to avoid conflicts with third party CSS.\n\n## Root variables\n\nHere are the variables we include (note that the `:root` is required) that can be accessed anywhere Bootstrap's CSS is loaded. They're located in our `_root.scss` file and included in our compiled dist files.\n\n### Default\n\nThese CSS variables are available everywhere, regardless of color mode.\n\n\u003CCode lang=\"css\" filePath=\"dist/css/bootstrap.css\" fileMatch=\":(root,\\n\\[data-bs-theme=light\\] {[^}]*})\" />\n\n### Dark mode\n\nThese variables are scoped to our built-in dark mode.\n\n\u003CCode lang=\"css\" filePath=\"dist/css/bootstrap.css\" fileMatch=\"(\\[data-bs-theme=dark\\] {[^}]*})\" />\n\n## Component variables\n\nBootstrap 5 is increasingly making use of custom properties as local variables for various components. This way we reduce our compiled CSS, ensure styles aren't inherited in places like nested tables, and allow some basic restyling and extending of Bootstrap components after Sass compilation.\n\nHave a look at our table documentation for some [insight into how we're using CSS variables]([[docsref:/content/tables#how-do-the-variants-and-accented-tables-work]]). Our [navbars also use CSS variables]([[docsref:/components/navbar#css]]) as of v5.2.0. We're also using CSS variables across our grids—primarily for gutters the [new opt-in CSS grid]([[docsref:/layout/css-grid]])—with more component usage coming in the future.\n\nWhenever possible, we'll assign CSS variables at the base component level (e.g., `.navbar` for navbar and its sub-components). This reduces guessing on where and how to customize, and allows for easy modifications by our team in future updates.\n\n## Prefix\n\nMost CSS variables use a prefix to avoid collisions with your own codebase. This prefix is in addition to the `--` that's required on every CSS variable.\n\nCustomize the prefix via the `$prefix` Sass variable. By default, it's set to `bs-` (note the trailing dash).\n\n## Examples\n\nCSS variables offer similar flexibility to Sass's variables, but without the need for compilation before being served to the browser. For example, here we're resetting our page's font and link styles with CSS variables.\n\n```css\nbody {\n  font: 1rem/1.5 var(--bs-font-sans-serif);\n}\na {\n  color: var(--bs-blue);\n}\n```\n\n## Focus variables\n\n\u003CAddedIn version=\"5.3.0\"/>\n\nBootstrap provides custom `:focus` styles using a combination of Sass and CSS variables that can be optionally added to specific components and elements. We do not yet globally override all `:focus` styles.\n\nIn our Sass, we set default values that can be customized before compiling.\n\n\u003CScssDocs name=\"focus-ring-variables\" file=\"scss/_variables.scss\" />\n\nThose variables are then reassigned to `:root` level CSS variables that can be customized in real-time, including with options for `x` and `y` offsets (which default to their fallback value of `0`).\n\n\u003CScssDocs name=\"root-focus-variables\" file=\"scss/_root.scss\" />\n\n## Grid breakpoints\n\nWhile we include our grid breakpoints as CSS variables (except for `xs`), be aware that **CSS variables do not work in media queries**. This is by design in the CSS spec for variables, but may change in coming years with support for `env()` variables. Check out [this Stack Overflow answer](https://stackoverflow.com/a/47212942) for some helpful links. In the meantime, you can use these variables in other CSS situations, as well as in your JavaScript.","src/content/docs/customize/css-variables.mdx","6823245e65e2f4cf","customize/css-variables.mdx","customize/options",{"id":286,"data":288,"body":291,"filePath":292,"digest":293,"legacyId":294,"deferredRender":139},{"description":289,"title":290},"Quickly customize Bootstrap with built-in variables to easily toggle global CSS preferences for controlling style and behavior.","Options","Customize Bootstrap with our built-in custom variables file and easily toggle global CSS preferences with new `$enable-*` Sass variables. Override a variable's value and recompile with `npm run test` as needed.\n\nYou can find and customize these variables for key global options in Bootstrap's `scss/_variables.scss` file.\n\n\u003CBsTable class=\"table table-options\">\n| Variable                       | Values                             | Description                                                                            |\n| ------------------------------ | ---------------------------------- | -------------------------------------------------------------------------------------- |\n| `$spacer`                      | `1rem` (default), or any value > 0 | Specifies the default spacer value to programmatically generate our [spacer utilities]([[docsref:/utilities/spacing]]). |\n| `$enable-dark-mode`            | `true` (default) or `false`        | Enables built-in [dark mode support]([[docsref:/customize/color-modes#dark-mode]]) across the project and its components. |\n| `$enable-rounded`              | `true` (default) or `false`        | Enables predefined `border-radius` styles on various components. |\n| `$enable-shadows`              | `true` or `false` (default)        | Enables predefined decorative `box-shadow` styles on various components. Does not affect `box-shadow`s used for focus states. |\n| `$enable-gradients`            | `true` or `false` (default)        | Enables predefined gradients via `background-image` styles on various components. |\n| `$enable-transitions`          | `true` (default) or `false`        | Enables predefined `transition`s on various components. |\n| `$enable-reduced-motion`       | `true` (default) or `false`        | Enables the [`prefers-reduced-motion` media query]([[docsref:/getting-started/accessibility#reduced-motion]]), which suppresses certain animations/transitions based on the users' browser/operating system preferences. |\n| `$enable-grid-classes`         | `true` (default) or `false`        | Enables the generation of CSS classes for the grid system (e.g. `.row`, `.col-md-1`, etc.). |\n| `$enable-cssgrid`              | `true` or `false` (default)        | Enables the experimental CSS Grid system (e.g. `.grid`, `.g-col-md-1`, etc.). |\n| `$enable-container-classes`    | `true` (default) or `false`        | Enables the generation of CSS classes for layout containers. (New in v5.2.0) |\n| `$enable-caret`                | `true` (default) or `false`        | Enables pseudo element caret on `.dropdown-toggle`. |\n| `$enable-button-pointers`      | `true` (default) or `false`        | Add \"hand\" cursor to non-disabled button elements. |\n| `$enable-rfs`                  | `true` (default) or `false`        | Globally enables [RFS]([[docsref:/getting-started/rfs]]). |\n| `$enable-validation-icons`     | `true` (default) or `false`        | Enables `background-image` icons within textual inputs and some custom forms for validation states. |\n| `$enable-negative-margins`     | `true` or `false` (default)        | Enables the generation of [negative margin utilities]([[docsref:/utilities/spacing#negative-margin]]). |\n| `$enable-deprecation-messages` | `true` (default) or `false`        | Set to `false` to hide warnings when using any of the deprecated mixins and functions that are planned to be removed in `v6`. |\n| `$enable-important-utilities`  | `true` (default) or `false`        | Enables the `!important` suffix in utility classes. |\n| `$enable-smooth-scroll`        | `true` (default) or `false`        | Applies `scroll-behavior: smooth` globally, except for users asking for reduced motion through [`prefers-reduced-motion` media query]([[docsref:/getting-started/accessibility#reduced-motion]]) |\n\u003C/BsTable>","src/content/docs/customize/options.mdx","afd90d6916d4e702","customize/options.mdx","customize/optimize",{"id":295,"data":297,"body":300,"filePath":301,"digest":302,"legacyId":303,"deferredRender":139},{"description":298,"title":299,"toc":139},"Keep your projects lean, responsive, and maintainable so you can deliver the best experience and focus on more important jobs.","Optimize","## Lean Sass imports\n\nWhen using Sass in your asset pipeline, make sure you optimize Bootstrap by only `@import`ing the components you need. Your largest optimizations will likely come from the `Layout & Components` section of our `bootstrap.scss`.\n\n\u003CScssDocs name=\"import-stack\" file=\"scss/bootstrap.scss\" />\n\n\nIf you're not using a component, comment it out or delete it entirely. For example, if you're not using the carousel, remove that import to save some file size in your compiled CSS. Keep in mind there are some dependencies across Sass imports that may make it more difficult to omit a file.\n\n## Lean JavaScript\n\nBootstrap's JavaScript includes every component in our primary dist files (`bootstrap.js` and `bootstrap.min.js`), and even our primary dependency (Popper) with our bundle files (`bootstrap.bundle.js` and `bootstrap.bundle.min.js`). While you're customizing via Sass, be sure to remove related JavaScript.\n\nFor instance, assuming you're using your own JavaScript bundler like Webpack, Parcel, or Vite, you'd only import the JavaScript you plan on using. In the example below, we show how to just include our modal JavaScript:\n\n{/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n```js\n// Import just what we need\n\n// import 'bootstrap/js/dist/alert';\n// import 'bootstrap/js/dist/button';\n// import 'bootstrap/js/dist/carousel';\n// import 'bootstrap/js/dist/collapse';\n// import 'bootstrap/js/dist/dropdown';\nimport 'bootstrap/js/dist/modal';\n// import 'bootstrap/js/dist/offcanvas';\n// import 'bootstrap/js/dist/popover';\n// import 'bootstrap/js/dist/scrollspy';\n// import 'bootstrap/js/dist/tab';\n// import 'bootstrap/js/dist/toast';\n// import 'bootstrap/js/dist/tooltip';\n```\n\nThis way, you're not including any JavaScript you don't intend to use for components like buttons, carousels, and tooltips. If you're importing dropdowns, tooltips or popovers, be sure to list the Popper dependency in your `package.json` file.\n\n\u003CCallout>\n**Heads up!** Files in `bootstrap/js/dist` use the **default export**. To use them, do the following:\n\n{/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n```js\nimport Modal from 'bootstrap/js/dist/modal'\nconst modal = new Modal(document.getElementById('myModal'))\n```\n\u003C/Callout>\n\n## Autoprefixer .browserslistrc\n\nBootstrap depends on Autoprefixer to automatically add browser prefixes to certain CSS properties. Prefixes are dictated by our `.browserslistrc` file, found in the root of the Bootstrap repo. Customizing this list of browsers and recompiling the Sass will automatically remove some CSS from your compiled CSS, if there are vendor prefixes unique to that browser or version.\n\n## Unused CSS\n\n_Help wanted with this section, please consider opening a PR. Thanks!_\n\nWhile we don't have a prebuilt example for using [PurgeCSS](https://github.com/FullHuman/purgecss) with Bootstrap, there are some helpful articles and walkthroughs that the community has written. Here are some options:\n\n- https://medium.com/dwarves-foundation/remove-unused-css-styles-from-bootstrap-using-purgecss-88395a2c5772\n- https://lukelowrey.com/automatically-removeunused-css-from-bootstrap-or-other-frameworks\n\nLastly, this [CSS Tricks article on unused CSS](https://css-tricks.com/how-do-you-remove-unused-css-from-a-site/) shows how to use PurgeCSS and other similar tools.\n\n## Minify and gzip\n\nWhenever possible, be sure to compress all the code you serve to your visitors. If you're using Bootstrap dist files, try to stick to the minified versions (indicated by the `.min.css` and `.min.js` extensions). If you're building Bootstrap from the source with your own build system, be sure to implement your own minifiers for HTML, CSS, and JS.\n\n## Non-blocking files\n\nWhile minifying and using compression might seem like enough, making your files non-blocking ones is also a big step in making your site well-optimized and fast enough.\n\nIf you are using a [Lighthouse](https://developer.chrome.com/docs/lighthouse/overview/) plugin in Google Chrome, you may have stumbled over FCP. [The First Contentful Paint](https://web.dev/articles/fcp) metric measures the time from when the page starts loading to when any part of the page's content is rendered on the screen.\n\nYou can improve FCP by deferring non-critical JavaScript or CSS. What does that mean? Simply, JavaScript or stylesheets that don't need to be present on the first paint of your page should be marked with `async` or `defer` attributes.\n\nThis ensures that the less important resources are loaded later and not blocking the first paint. On the other hand, critical resources can be included as inline scripts or styles.\n\nIf you want to learn more about this, there are already a lot of great articles about it:\n\n- https://developer.chrome.com/docs/lighthouse/performance/render-blocking-resources/\n- https://web.dev/articles/defer-non-critical-css\n\n## Always use HTTPS\n\nYour website should only be available over HTTPS connections in production. HTTPS improves the security, privacy, and availability of all sites, and [there is no such thing as non-sensitive web traffic](https://https.cio.gov/everything/). The steps to configure your website to be served exclusively over HTTPS vary widely depending on your architecture and web hosting provider, and thus are beyond the scope of these docs.\n\nSites served over HTTPS should also access all stylesheets, scripts, and other assets over HTTPS connections. Otherwise, you'll be sending users [mixed active content](https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content), leading to potential vulnerabilities where a site can be compromised by altering a dependency. This can lead to security issues and in-browser warnings displayed to users. Whether you're getting Bootstrap from a CDN or serving it yourself, ensure that you only access it over HTTPS connections.","src/content/docs/customize/optimize.mdx","254b0925b45ba2b8","customize/optimize.mdx","customize/overview",{"id":304,"data":306,"body":326,"filePath":327,"digest":328,"legacyId":329,"deferredRender":139},{"aliases":307,"description":308,"sections":309,"title":324,"toc":325},"/docs/[[config:docs_version]]/customize/","Learn how to theme, customize, and extend Bootstrap with Sass, a boatload of global options, an expansive color system, and more.",[310,313,315,317,319,321,322],{"description":311,"title":312},"Utilize our source Sass files to take advantage of variables, maps, mixins, and functions.","Sass",{"description":314,"title":290},"Customize Bootstrap with built-in variables to easily toggle global CSS preferences.",{"description":316,"title":243},"Learn about and customize the color systems that support the entire toolkit.",{"description":318,"title":254},"Explore our default light mode and the new dark mode, or create custom color modes yourself.",{"description":320,"title":272},"Learn how we build nearly all our components responsively and with base and modifier classes.",{"description":280,"title":281},{"description":323,"title":299},"Keep your projects lean, responsive, and maintainable so you can deliver the best experience.","Customize",false,"## Overview\n\nThere are multiple ways to customize Bootstrap. Your best path can depend on your project, the complexity of your build tools, the version of Bootstrap you're using, browser support, and more.\n\nOur two preferred methods are:\n\n1. Using Bootstrap [via package manager]([[docsref:/getting-started/download#package-managers]]) so you can use and extend our source files.\n2. Using Bootstrap's compiled distribution files or [jsDelivr]([[docsref:/getting-started/download#cdn-via-jsdelivr]]) so you can add onto or override Bootstrap's styles.\n\nWhile we cannot go into details here on how to use every package manager, we can give some guidance on [using Bootstrap with your own Sass compiler]([[docsref:/customize/sass]]).\n\nFor those who want to use the distribution files, review the [getting started page]([[docsref:/getting-started/introduction]]) for how to include those files and an example HTML page. From there, consult the docs for the layout, components, and behaviors you'd like to use.\n\nAs you familiarize yourself with Bootstrap, continue exploring this section for more details on how to utilize our global options, making use of and changing our color system, how we build our components, how to use our growing list of CSS custom properties, and how to optimize your code when building with Bootstrap.\n\n## CSPs and embedded SVGs\n\nSeveral Bootstrap components include embedded SVGs in our CSS to style components consistently and easily across browsers and devices. **For organizations with more strict \u003Cabbr title=\"Content Security Policy\">CSP\u003C/abbr> configurations**, we've documented all instances of our embedded SVGs (all of which are applied via `background-image`) so you can more thoroughly review your options.\n\n- [Accordion]([[docsref:/components/accordion]])\n- [Carousel controls]([[docsref:/components/carousel#with-controls]])\n- [Close button]([[docsref:/components/close-button]]) (used in alerts and modals)\n- [Form checkboxes and radio buttons]([[docsref:/forms/checks-radios]])\n- [Form switches]([[docsref:/forms/checks-radios#switches]])\n- [Form validation icons]([[docsref:/forms/validation#server-side]])\n- [Navbar toggle buttons]([[docsref:/components/navbar#responsive-behaviors]])\n- [Select menus]([[docsref:/forms/select]])\n\nBased on [community conversation](https://github.com/twbs/bootstrap/issues/25394), some options for addressing this in your own codebase include [replacing the URLs with locally hosted assets]([[docsref:/getting-started/webpack#extracting-svg-files]]), removing the images and using inline images (not possible in all components), and modifying your CSP. Our recommendation is to carefully review your own security policies and decide on the best path forward, if necessary.","src/content/docs/customize/overview.mdx","3bebbf56eb36be6d","customize/overview.mdx","customize/sass",{"id":330,"data":332,"body":334,"filePath":335,"digest":336,"legacyId":337,"deferredRender":139},{"description":333,"title":312,"toc":139},"Utilize our source Sass files to take advantage of variables, maps, mixins, and functions to help you build faster and customize your project.","Utilize our source Sass files to take advantage of variables, maps, mixins, and more.\n\n## File structure\n\nWhenever possible, avoid modifying Bootstrap's core files. For Sass, that means creating your own stylesheet that imports Bootstrap so you can modify and extend it. Assuming you're using a package manager like npm, you'll have a file structure that looks like this:\n\n```text\nyour-project/\n├── scss/\n│   └── custom.scss\n└── node_modules/\n│   └── bootstrap/\n│       ├── js/\n│       └── scss/\n└── index.html\n```\n\nIf you've downloaded our source files and aren't using a package manager, you'll want to manually create something similar to that structure, keeping Bootstrap's source files separate from your own.\n\n```text\nyour-project/\n├── scss/\n│   └── custom.scss\n├── bootstrap/\n│   ├── js/\n│   └── scss/\n└── index.html\n```\n\n## Importing\n\nIn your `custom.scss`, you'll import Bootstrap's source Sass files. You have two options: include all of Bootstrap, or pick the parts you need. We encourage the latter, though be aware there are some requirements and dependencies across our components. You also will need to include some JavaScript for our plugins.\n\n```scss\n// Custom.scss\n// Option A: Include all of Bootstrap\n\n// Include any default variable overrides here (though functions won't be available)\n\n@import \"../node_modules/bootstrap/scss/bootstrap\";\n\n// Then add additional custom code here\n```\n\n```scss\n// Custom.scss\n// Option B: Include parts of Bootstrap\n\n// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)\n@import \"../node_modules/bootstrap/scss/functions\";\n\n// 2. Include any default variable overrides here\n\n// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)\n@import \"../node_modules/bootstrap/scss/variables\";\n@import \"../node_modules/bootstrap/scss/variables-dark\";\n\n// 4. Include any default map overrides here\n\n// 5. Include remainder of required parts\n@import \"../node_modules/bootstrap/scss/maps\";\n@import \"../node_modules/bootstrap/scss/mixins\";\n@import \"../node_modules/bootstrap/scss/root\";\n\n// 6. Optionally include any other parts as needed\n@import \"../node_modules/bootstrap/scss/utilities\";\n@import \"../node_modules/bootstrap/scss/reboot\";\n@import \"../node_modules/bootstrap/scss/type\";\n@import \"../node_modules/bootstrap/scss/images\";\n@import \"../node_modules/bootstrap/scss/containers\";\n@import \"../node_modules/bootstrap/scss/grid\";\n@import \"../node_modules/bootstrap/scss/helpers\";\n\n// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`\n@import \"../node_modules/bootstrap/scss/utilities/api\";\n\n// 8. Add additional custom code here\n```\n\nWith that setup in place, you can begin to modify any of the Sass variables and maps in your `custom.scss`. You can also start to add parts of Bootstrap under the `// Optional` section as needed. We suggest using the full import stack from our `bootstrap.scss` file as your starting point.\n\n## Compiling\n\nIn order to use your custom Sass code as CSS in the browser, you need a Sass compiler. Sass ships as a CLI package, but you can also compile it with other build tools like [Gulp](https://gulpjs.com/) or [Webpack](https://webpack.js.org/), or with a GUI applications. Some IDEs also have Sass compilers built in or as downloadable extensions.\n\nWe like to use the CLI to compile our Sass, but you can use whichever method you prefer. From the command line, run the following:\n\n```shell\n# Install Sass globally\nnpm install -g sass\n\n# Watch your custom Sass for changes and compile it to CSS\nsass --watch ./scss/custom.scss ./css/custom.css\n```\n\nLearn more about your options at [sass-lang.com/install](https://sass-lang.com/install/) and [compiling with VS Code](https://code.visualstudio.com/docs/languages/css#_transpiling-sass-and-less-into-css).\n\n\u003CCallout>\n**Using Bootstrap with another build tool?** Consider reading our guides for compiling with [Webpack]([[docsref:/getting-started/webpack]]), [Parcel]([[docsref:/getting-started/parcel]]), or [Vite]([[docsref:/getting-started/vite]]). We also have production-ready demos in [our examples repository on GitHub](https://github.com/twbs/examples).\n\u003C/Callout>\n\n## Including\n\nOnce your CSS is compiled, you can include it in your HTML files. Inside your `index.html` you'll want to include your compiled CSS file. Be sure to update the path to your compiled CSS file if you've changed it.\n\n```html\n\u003C!doctype html>\n\u003Chtml lang=\"en\">\n  \u003Chead>\n    \u003Cmeta charset=\"utf-8\">\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \u003Ctitle>Custom Bootstrap\u003C/title>\n    \u003Clink href=\"/css/custom.css\" rel=\"stylesheet\">\n  \u003C/head>\n  \u003Cbody>\n    \u003Ch1>Hello, world!\u003C/h1>\n  \u003C/body>\n\u003C/html>\n```\n\n## Variable defaults\n\nEvery Sass variable in Bootstrap includes the `!default` flag allowing you to override the variable's default value in your own Sass without modifying Bootstrap's source code. Copy and paste variables as needed, modify their values, and remove the `!default` flag. If a variable has already been assigned, then it won't be re-assigned by the default values in Bootstrap.\n\nYou will find the complete list of Bootstrap's variables in `scss/_variables.scss`. Some variables are set to `null`, these variables don't output the property unless they are overridden in your configuration.\n\nVariable overrides must come after our functions are imported, but before the rest of the imports.\n\nHere's an example that changes the `background-color` and `color` for the `\u003Cbody>` when importing and compiling Bootstrap via npm:\n\n```scss\n// Required\n@import \"../node_modules/bootstrap/scss/functions\";\n\n// Default variable overrides\n$body-bg: #000;\n$body-color: #111;\n\n// Required\n@import \"../node_modules/bootstrap/scss/variables\";\n@import \"../node_modules/bootstrap/scss/variables-dark\";\n@import \"../node_modules/bootstrap/scss/maps\";\n@import \"../node_modules/bootstrap/scss/mixins\";\n@import \"../node_modules/bootstrap/scss/root\";\n\n// Optional Bootstrap components here\n@import \"../node_modules/bootstrap/scss/reboot\";\n@import \"../node_modules/bootstrap/scss/type\";\n// etc\n```\n\nRepeat as necessary for any variable in Bootstrap, including the global options below.\n\n\u003CCallout name=\"info-npm-starter\" />\n\n## Maps and loops\n\nBootstrap includes a handful of Sass maps, key value pairs that make it easier to generate families of related CSS. We use Sass maps for our colors, grid breakpoints, and more. Just like Sass variables, all Sass maps include the `!default` flag and can be overridden and extended.\n\nSome of our Sass maps are merged into empty ones by default. This is done to allow easy expansion of a given Sass map, but comes at the cost of making _removing_ items from a map slightly more difficult.\n\n### Modify map\n\nAll variables in the `$theme-colors` map are defined as standalone variables. To modify an existing color in our `$theme-colors` map, add the following to your custom Sass file:\n\n```scss\n$primary: #0074d9;\n$danger: #ff4136;\n```\n\nLater on, these variables are set in Bootstrap's `$theme-colors` map:\n\n```scss\n$theme-colors: (\n  \"primary\": $primary,\n  \"danger\": $danger\n);\n```\n\n### Add to map\n\nAdd new colors to `$theme-colors`, or any other map, by creating a new Sass map with your custom values and merging it with the original map. In this case, we'll create a new `$custom-colors` map and merge it with `$theme-colors`.\n\n```scss\n// Create your own map\n$custom-colors: (\n  \"custom-color\": #900\n);\n\n// Merge the maps\n$theme-colors: map-merge($theme-colors, $custom-colors);\n```\n\n### Remove from map\n\nTo remove colors from `$theme-colors`, or any other map, use `map-remove`. Be aware you must insert `$theme-colors` between our requirements just after its definition in `variables` and before its usage in `maps`:\n\n```scss\n// Required\n@import \"../node_modules/bootstrap/scss/functions\";\n@import \"../node_modules/bootstrap/scss/variables\";\n@import \"../node_modules/bootstrap/scss/variables-dark\";\n\n$theme-colors: map-remove($theme-colors, \"info\", \"light\", \"dark\");\n\n@import \"../node_modules/bootstrap/scss/maps\";\n@import \"../node_modules/bootstrap/scss/mixins\";\n@import \"../node_modules/bootstrap/scss/root\";\n\n// Optional\n@import \"../node_modules/bootstrap/scss/reboot\";\n@import \"../node_modules/bootstrap/scss/type\";\n// etc\n```\n\n## Required keys\n\nBootstrap assumes the presence of some specific keys within Sass maps as we used and extend these ourselves. As you customize the included maps, you may encounter errors where a specific Sass map's key is being used.\n\nFor example, we use the `primary`, `success`, and `danger` keys from `$theme-colors` for links, buttons, and form states. Replacing the values of these keys should present no issues, but removing them may cause Sass compilation issues. In these instances, you'll need to modify the Sass code that makes use of those values.\n\n## Functions\n\n### Colors\n\nNext to the [Sass maps]([[docsref:/customize/color#color-sass-maps]]) we have, theme colors can also be used as standalone variables, like `$primary`.\n\n```scss\n.custom-element {\n  color: $gray-100;\n  background-color: $dark;\n}\n```\n\nYou can lighten or darken colors with Bootstrap's `tint-color()` and `shade-color()` functions. These functions will mix colors with black or white, unlike Sass' native `lighten()` and `darken()` functions which will change the lightness by a fixed amount, which often doesn't lead to the desired effect.\n\n`shift-color()` combines these two functions by shading the color if the weight is positive and tinting the color if the weight is negative.\n\n\u003CScssDocs name=\"color-functions\" file=\"scss/_functions.scss\" />\n\nIn practice, you'd call the function and pass in the color and weight parameters.\n\n```scss\n.custom-element {\n  color: tint-color($primary, 10%);\n}\n\n.custom-element-2 {\n  color: shade-color($danger, 30%);\n}\n\n.custom-element-3 {\n  color: shift-color($success, 40%);\n  background-color: shift-color($success, -60%);\n}\n```\n\n### Color contrast\n\nIn order to meet the [Web Content Accessibility Guidelines (WCAG)](https://www.w3.org/TR/WCAG/) contrast requirements, authors **must** provide a minimum [text color contrast of 4.5:1](https://www.w3.org/TR/WCAG/#contrast-minimum) and a minimum [non-text color contrast of 3:1](https://www.w3.org/TR/WCAG/#non-text-contrast), with very few exceptions.\n\nTo help with this, we included the `color-contrast` function in Bootstrap. It uses the [WCAG contrast ratio algorithm](https://www.w3.org/TR/WCAG/#dfn-contrast-ratio) for calculating contrast thresholds based on [relative luminance](https://www.w3.org/TR/WCAG/#dfn-relative-luminance) in an `sRGB` color space to automatically return a light (`#fff`), dark (`#212529`) or black (`#000`) contrast color based on the specified base color. This function is especially useful for mixins or loops where you're generating multiple classes.\n\nFor example, to generate color swatches from our `$theme-colors` map:\n\n```scss\n@each $color, $value in $theme-colors {\n  .swatch-#{$color} {\n    color: color-contrast($value);\n  }\n}\n```\n\nIt can also be used for one-off contrast needs:\n\n```scss\n.custom-element {\n  color: color-contrast(#000); // returns `color: #fff`\n}\n```\n\nYou can also specify a base color with our color map functions:\n\n```scss\n.custom-element {\n  color: color-contrast($dark); // returns `color: #fff`\n}\n```\n\n### Escape SVG\n\nWe use the `escape-svg` function to escape the `\u003C`, `>` and `#` characters for SVG background images. When using the `escape-svg` function, data URIs must be quoted.\n\n### Add and Subtract functions\n\nWe use the `add` and `subtract` functions to wrap the CSS `calc` function. The primary purpose of these functions is to avoid errors when a \"unitless\" `0` value is passed into a `calc` expression. Expressions like `calc(10px - 0)` will return an error in all browsers, despite being mathematically correct.\n\nExample where the calc is valid:\n\n```scss\n$border-radius: .25rem;\n$border-width: 1px;\n\n.element {\n  // Output calc(.25rem - 1px) is valid\n  border-radius: calc($border-radius - $border-width);\n}\n\n.element {\n  // Output the same calc(.25rem - 1px) as above\n  border-radius: subtract($border-radius, $border-width);\n}\n```\n\nExample where the calc is invalid:\n\n```scss\n$border-radius: .25rem;\n$border-width: 0;\n\n.element {\n  // Output calc(.25rem - 0) is invalid\n  border-radius: calc($border-radius - $border-width);\n}\n\n.element {\n  // Output .25rem\n  border-radius: subtract($border-radius, $border-width);\n}\n```\n\n## Mixins\n\nOur `scss/mixins/` directory has a ton of mixins that power parts of Bootstrap and can also be used across your own project.\n\n### Color schemes\n\nA shorthand mixin for the `prefers-color-scheme` media query is available with support for `light` and `dark` color schemes. See [the color modes documentation]([[docsref:/customize/color-modes]]) for information on our color mode mixin.\n\n\u003CScssDocs name=\"mixin-color-scheme\" file=\"scss/mixins/_color-scheme.scss\" />\n\n```scss\n.custom-element {\n  @include color-scheme(light) {\n    // Insert light mode styles here\n  }\n\n  @include color-scheme(dark) {\n    // Insert dark mode styles here\n  }\n}\n```","src/content/docs/customize/sass.mdx","5d4b184d3629798a","customize/sass.mdx","components/badge",{"id":338,"data":340,"body":343,"filePath":344,"digest":345,"legacyId":346,"deferredRender":139},{"description":341,"title":342,"toc":139},"Documentation and examples for badges, our small count and labeling component.","Badges","import { getData } from '@libs/data'\n\n## Examples\n\nBadges scale to match the size of the immediate parent element by using relative font sizing and `em` units. As of v5, badges no longer have focus or hover styles for links.\n\n### Headings\n\n\u003CExample code={`\u003Ch1>Example heading \u003Cspan class=\"badge text-bg-secondary\">New\u003C/span>\u003C/h1>\n\u003Ch2>Example heading \u003Cspan class=\"badge text-bg-secondary\">New\u003C/span>\u003C/h2>\n\u003Ch3>Example heading \u003Cspan class=\"badge text-bg-secondary\">New\u003C/span>\u003C/h3>\n\u003Ch4>Example heading \u003Cspan class=\"badge text-bg-secondary\">New\u003C/span>\u003C/h4>\n\u003Ch5>Example heading \u003Cspan class=\"badge text-bg-secondary\">New\u003C/span>\u003C/h5>\n\u003Ch6>Example heading \u003Cspan class=\"badge text-bg-secondary\">New\u003C/span>\u003C/h6>`} />\n\n### Buttons\n\nBadges can be used as part of links or buttons to provide a counter.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary\">\n  Notifications \u003Cspan class=\"badge text-bg-secondary\">4\u003C/span>\n\u003C/button>`} />\n\nNote that depending on how they are used, badges may be confusing for users of screen readers and similar assistive technologies. While the styling of badges provides a visual cue as to their purpose, these users will simply be presented with the content of the badge. Depending on the specific situation, these badges may seem like random additional words or numbers at the end of a sentence, link, or button.\n\nUnless the context is clear (as with the \"Notifications\" example, where it is understood that the \"4\" is the number of notifications), consider including additional context with a visually hidden piece of additional text.\n\n### Positioned\n\nUse utilities to modify a `.badge` and position it in the corner of a link or button.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary position-relative\">\n  Inbox\n  \u003Cspan class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n    99+\n    \u003Cspan class=\"visually-hidden\">unread messages\u003C/span>\n  \u003C/span>\n\u003C/button>`} />\n\nYou can also replace the `.badge` class with a few more utilities without a count for a more generic indicator.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary position-relative\">\n  Profile\n  \u003Cspan class=\"position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle\">\n    \u003Cspan class=\"visually-hidden\">New alerts\u003C/span>\n  \u003C/span>\n\u003C/button>`} />\n\n## Background colors\n\n\u003CAddedIn version=\"5.2.0\" />\n\nSet a `background-color` with contrasting foreground `color` with [our `.text-bg-{color}` helpers]([[docsref:helpers/color-background]]). Previously it was required to manually pair your choice of [`.text-{color}`]([[docsref:/utilities/colors]]) and [`.bg-{color}`]([[docsref:/utilities/background]]) utilities for styling, which you still may use if you prefer.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cspan class=\"badge text-bg-${themeColor.name}\">${themeColor.title}\u003C/span>`)} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## Pill badges\n\nUse the `.rounded-pill` utility class to make badges more rounded with a larger `border-radius`.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cspan class=\"badge rounded-pill text-bg-${themeColor.name}\">${themeColor.title}\u003C/span>`)} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, badges now use local CSS variables on `.badge` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"badge-css-vars\" file=\"scss/_badge.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"badge-variables\" file=\"scss/_variables.scss\" />","src/content/docs/components/badge.mdx","749e5cf7de84ad9f","components/badge.mdx","components/alerts",{"id":347,"data":349,"body":352,"filePath":353,"digest":354,"legacyId":355,"deferredRender":139},{"description":350,"title":351,"toc":139},"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.","Alerts","import { getData } from '@libs/data'\n\n## Examples\n\nAlerts are available for any length of text, as well as an optional close button. For proper styling, use one of the eight **required** contextual classes (e.g., `.alert-success`). For inline dismissal, use the [alerts JavaScript plugin](#dismissing).\n\n\u003CCallout>\n**Heads up!** As of v5.3.0, the `alert-variant()` Sass mixin is deprecated. Alert variants now have their CSS variables overridden in [a Sass loop](#sass-loops).\n\u003C/Callout>\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"alert alert-${themeColor.name}\" role=\"alert\">\n  A simple ${themeColor.name} alert—check it out!\n\u003C/div>`)} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n### Live example\n\nClick the button below to show an alert (hidden with inline styles to start), then dismiss (and destroy) it with the built-in close button.\n\n\u003CExample addStackblitzJs code={`\u003Cdiv id=\"liveAlertPlaceholder\">\u003C/div>\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" id=\"liveAlertBtn\">Show live alert\u003C/button>`} />\n\nWe use the following JavaScript to trigger our live alert demo:\n\n\u003CJsDocs name=\"live-alert\" file=\"site/src/assets/partials/snippets.js\" />\n\n### Link color\n\nUse the `.alert-link` utility class to quickly provide matching colored links within any alert.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"alert alert-${themeColor.name}\" role=\"alert\">\n  A simple ${themeColor.name} alert with \u003Ca href=\"#\" class=\"alert-link\">an example link\u003C/a>. Give it a click if you like.\n\u003C/div>`)} />\n\n### Additional content\n\nAlerts can also contain additional HTML elements like headings, paragraphs and dividers.\n\n\u003CExample code={`\u003Cdiv class=\"alert alert-success\" role=\"alert\">\n  \u003Ch4 class=\"alert-heading\">Well done!\u003C/h4>\n  \u003Cp>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\u003C/p>\n  \u003Chr>\n  \u003Cp class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\u003C/p>\n\u003C/div>`} />\n\n### Icons\n\nSimilarly, you can use [flexbox utilities]([[docsref:/utilities/flex]]) and [Bootstrap Icons]([[config:icons]]) to create alerts with icons. Depending on your icons and content, you may want to add more utilities or custom styles.\n\n\u003CExample code={`\u003Cdiv class=\"alert alert-primary d-flex align-items-center\" role=\"alert\">\n  \u003Csvg xmlns=\"http://www.w3.org/2000/svg\" class=\"bi flex-shrink-0 me-2\" viewBox=\"0 0 16 16\" role=\"img\" aria-label=\"Warning:\">\n    \u003Cpath d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n  \u003C/svg>\n  \u003Cdiv>\n    An example alert with an icon\n  \u003C/div>\n\u003C/div>`} />\n\nNeed more than one icon for your alerts? Consider using more Bootstrap Icons and making a local SVG sprite like so to easily reference the same icons repeatedly.\n\n\u003CExample code={`\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" class=\"d-none\">\n  \u003Csymbol id=\"check-circle-fill\" viewBox=\"0 0 16 16\">\n    \u003Cpath d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\n  \u003C/symbol>\n  \u003Csymbol id=\"info-fill\" viewBox=\"0 0 16 16\">\n    \u003Cpath d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/>\n  \u003C/symbol>\n  \u003Csymbol id=\"exclamation-triangle-fill\" viewBox=\"0 0 16 16\">\n    \u003Cpath d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n  \u003C/symbol>\n\u003C/svg>\n\n\u003Cdiv class=\"alert alert-primary d-flex align-items-center\" role=\"alert\">\n  \u003Csvg class=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Info:\">\u003Cuse xlink:href=\"#info-fill\"/>\u003C/svg>\n  \u003Cdiv>\n    An example alert with an icon\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"alert alert-success d-flex align-items-center\" role=\"alert\">\n  \u003Csvg class=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Success:\">\u003Cuse xlink:href=\"#check-circle-fill\"/>\u003C/svg>\n  \u003Cdiv>\n    An example success alert with an icon\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"alert alert-warning d-flex align-items-center\" role=\"alert\">\n  \u003Csvg class=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Warning:\">\u003Cuse xlink:href=\"#exclamation-triangle-fill\"/>\u003C/svg>\n  \u003Cdiv>\n    An example warning alert with an icon\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\n  \u003Csvg class=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Danger:\">\u003Cuse xlink:href=\"#exclamation-triangle-fill\"/>\u003C/svg>\n  \u003Cdiv>\n    An example danger alert with an icon\n  \u003C/div>\n\u003C/div>`} />\n\n### Dismissing\n\nUsing the alert JavaScript plugin, it's possible to dismiss any alert inline. Here's how:\n\n- Be sure you've loaded the alert plugin, or the compiled Bootstrap JavaScript.\n- Add a [close button]([[docsref:/components/close-button]]) and the `.alert-dismissible` class, which adds extra padding to the right of the alert and positions the close button.\n- On the close button, add the `data-bs-dismiss=\"alert\"` attribute, which triggers the JavaScript functionality. Be sure to use the `\u003Cbutton>` element with it for proper behavior across all devices.\n- To animate alerts when dismissing them, be sure to add the `.fade` and `.show` classes.\n\nYou can see this in action with a live demo:\n\n\u003CExample code={`\u003Cdiv class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n  \u003Cstrong>Holy guacamole!\u003C/strong> You should check in on some of those fields below.\n  \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\u003C/button>\n\u003C/div>`} />\n\n\u003CCallout type=\"warning\">\nWhen an alert is dismissed, the element is completely removed from the page structure. If a keyboard user dismisses the alert using the close button, their focus will suddenly be lost and, depending on the browser, reset to the start of the page/document. For this reason, we recommend including additional JavaScript that listens for the `closed.bs.alert` event and programmatically sets `focus()` to the most appropriate location in the page. If you're planning to move focus to a non-interactive element that normally does not receive focus, make sure to add `tabindex=\"-1\"` to the element.\n\u003C/Callout>\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, alerts now use local CSS variables on `.alert` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"alert-css-vars\" file=\"scss/_alert.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"alert-variables\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\n\u003CDeprecatedIn version=\"5.3.0\" />\n\n\u003CScssDocs name=\"alert-variant-mixin\" file=\"scss/mixins/_alert.scss\" />\n\n### Sass loops\n\nLoop that generates the modifier classes with an overriding of CSS variables.\n\n\u003CScssDocs name=\"alert-modifiers\" file=\"scss/_alert.scss\" />\n\n## JavaScript behavior\n\n### Initialize\n\nInitialize elements as alerts\n\n```js\nconst alertList = document.querySelectorAll('.alert')\nconst alerts = [...alertList].map(element => new bootstrap.Alert(element))\n```\n\n\u003CCallout>\nFor the sole purpose of dismissing an alert, it isn't necessary to initialize the component manually via the JS API. By making use of `data-bs-dismiss=\"alert\"`, the component will be initialized automatically and properly dismissed.\n\nSee the [triggers](#triggers) section for more details.\n\u003C/Callout>\n\n### Triggers\n\n\u003CJsDismiss name=\"alert\" />\n\n**Note that closing an alert will remove it from the DOM.**\n\n### Methods\n\nYou can create an alert instance with the alert constructor, for example:\n\n```js\nconst bsAlert = new bootstrap.Alert('#myAlert')\n```\n\nThis makes an alert listen for click events on descendant elements which have the `data-bs-dismiss=\"alert\"` attribute. (Not necessary when using the data-api’s auto-initialization.)\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `close` | Closes an alert by removing it from the DOM. If the `.fade` and `.show` classes are present on the element, the alert will fade out before it is removed. |\n| `dispose` | Destroys an element's alert. (Removes stored data on the DOM element) |\n| `getInstance` | Static method which allows you to get the alert instance associated to a DOM element. For example: `bootstrap.Alert.getInstance(alert)`. |\n| `getOrCreateInstance` | Static method which returns an alert instance associated to a DOM element or create a new one in case it wasn't initialized. You can use it like this: `bootstrap.Alert.getOrCreateInstance(element)`. |\n\u003C/BsTable>\n\nBasic usage:\n\n```js\nconst alert = bootstrap.Alert.getOrCreateInstance('#myAlert')\nalert.close()\n```\n\n### Events\n\nBootstrap's alert plugin exposes a few events for hooking into alert functionality.\n\n\u003CBsTable>\n| Event | Description |\n| --- | --- |\n| `close.bs.alert` | Fires immediately when the `close` instance method is called. |\n| `closed.bs.alert` | Fired when the alert has been closed and CSS transitions have completed. |\n\u003C/BsTable>\n\n```js\nconst myAlert = document.getElementById('myAlert')\nmyAlert.addEventListener('closed.bs.alert', event => {\n  // do something, for instance, explicitly move focus to the most appropriate element,\n  // so it doesn't get lost/reset to the start of the page\n  // document.getElementById('...').focus()\n})\n```","src/content/docs/components/alerts.mdx","6607ff0c1f19842d","components/alerts.mdx","components/button-group",{"id":356,"data":358,"body":361,"filePath":362,"digest":363,"legacyId":364,"deferredRender":139},{"description":359,"title":360,"toc":139},"Group a series of buttons together on a single line or stack them in a vertical column.","Button group","## Basic example\n\nWrap a series of buttons with `.btn` in `.btn-group`.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Middle\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Right\u003C/button>\n\u003C/div>`} />\n\n\u003CCallout>\nButton groups require an appropriate `role` attribute and explicit label to ensure assistive technologies like screen readers identify buttons as grouped and announce them. Use `role=\"group\"` for button groups or `role=\"toolbar\"` for button toolbars. Then use `aria-label` or `aria-labelledby` to label them.\n\u003C/Callout>\n\nThese classes can also be added to groups of links, as an alternative to the [`.nav` navigation components]([[docsref:/components/navs-tabs]]).\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\">\n  \u003Ca href=\"#\" class=\"btn btn-primary active\" aria-current=\"page\">Active link\u003C/a>\n  \u003Ca href=\"#\" class=\"btn btn-primary\">Link\u003C/a>\n  \u003Ca href=\"#\" class=\"btn btn-primary\">Link\u003C/a>\n\u003C/div>`} />\n\n## Mixed styles\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-danger\">Left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-warning\">Middle\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-success\">Right\u003C/button>\n\u003C/div>`} />\n\n## Outlined styles\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Middle\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Right\u003C/button>\n\u003C/div>`} />\n\n## Checkbox and radio button groups\n\nCombine button-like checkbox and radio [toggle buttons]([[docsref:/forms/checks-radios]]) into a seamless looking button group.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Basic checkbox toggle button group\">\n  \u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btncheck1\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-primary\" for=\"btncheck1\">Checkbox 1\u003C/label>\n\n  \u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btncheck2\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-primary\" for=\"btncheck2\">Checkbox 2\u003C/label>\n\n  \u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btncheck3\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-primary\" for=\"btncheck3\">Checkbox 3\u003C/label>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\n  \u003Cinput type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" checked>\n  \u003Clabel class=\"btn btn-outline-primary\" for=\"btnradio1\">Radio 1\u003C/label>\n\n  \u003Cinput type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-primary\" for=\"btnradio2\">Radio 2\u003C/label>\n\n  \u003Cinput type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-primary\" for=\"btnradio3\">Radio 3\u003C/label>\n\u003C/div>`} />\n\n## Button toolbar\n\nCombine sets of button groups into button toolbars for more complex components. Use utility classes as needed to space out groups, buttons, and more.\n\n\u003CExample code={`\u003Cdiv class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n  \u003Cdiv class=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary\">1\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-primary\">2\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-primary\">3\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-primary\">4\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group me-2\" role=\"group\" aria-label=\"Second group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">5\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">6\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">7\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Third group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-info\">8\u003C/button>\n  \u003C/div>\n\u003C/div>`} />\n\nFeel free to mix input groups with button groups in your toolbars. Similar to the example above, you'll likely need some utilities though to space things properly.\n\n\u003CExample code={`\u003Cdiv class=\"btn-toolbar mb-3\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n  \u003Cdiv class=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">1\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">2\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">3\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">4\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"input-group\">\n    \u003Cdiv class=\"input-group-text\" id=\"btnGroupAddon\">@\u003C/div>\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Input group example\" aria-label=\"Input group example\" aria-describedby=\"btnGroupAddon\">\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n  \u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"First group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">1\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">2\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">3\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">4\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"input-group\">\n    \u003Cdiv class=\"input-group-text\" id=\"btnGroupAddon2\">@\u003C/div>\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Input group example\" aria-label=\"Input group example\" aria-describedby=\"btnGroupAddon2\">\n  \u003C/div>\n\u003C/div>`} />\n\n## Sizing\n\nInstead of applying button sizing classes to every button in a group, just add `.btn-group-*` to each `.btn-group`, including each one when nesting multiple groups.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Large button group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Middle\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Right\u003C/button>\n\u003C/div>\n\u003Cbr>\n\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Default button group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Middle\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Right\u003C/button>\n\u003C/div>\n\u003Cbr>\n\u003Cdiv class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Small button group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Middle\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-primary\">Right\u003C/button>\n\u003C/div>`} />\n\n## Nesting\n\nPlace a `.btn-group` within another `.btn-group` when you want dropdown menus mixed with a series of buttons.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">1\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">2\u003C/button>\n\n  \u003Cdiv class=\"btn-group\" role=\"group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropdown\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>`} />\n\n## Vertical variation\n\nMake a set of buttons appear vertically stacked rather than horizontally. **Split button dropdowns are not supported here.**\n\n\u003CExample code={`\u003Cdiv class=\"btn-group-vertical\" role=\"group\" aria-label=\"Vertical button group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Button\u003C/button>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"btn-group-vertical\" role=\"group\" aria-label=\"Vertical button group\">\n  \u003Cdiv class=\"btn-group\" role=\"group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropdown\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\">Button\u003C/button>\n  \u003Cdiv class=\"btn-group dropstart\" role=\"group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropdown\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group dropend\" role=\"group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropdown\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group dropup\" role=\"group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropdown\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Dropdown link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"btn-group-vertical\" role=\"group\" aria-label=\"Vertical radio toggle button group\">\n  \u003Cinput type=\"radio\" class=\"btn-check\" name=\"vbtn-radio\" id=\"vbtn-radio1\" autocomplete=\"off\" checked>\n  \u003Clabel class=\"btn btn-outline-danger\" for=\"vbtn-radio1\">Radio 1\u003C/label>\n  \u003Cinput type=\"radio\" class=\"btn-check\" name=\"vbtn-radio\" id=\"vbtn-radio2\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-danger\" for=\"vbtn-radio2\">Radio 2\u003C/label>\n  \u003Cinput type=\"radio\" class=\"btn-check\" name=\"vbtn-radio\" id=\"vbtn-radio3\" autocomplete=\"off\">\n  \u003Clabel class=\"btn btn-outline-danger\" for=\"vbtn-radio3\">Radio 3\u003C/label>\n\u003C/div>`} />","src/content/docs/components/button-group.mdx","6844839b1fda36ae","components/button-group.mdx","components/accordion",{"id":365,"data":367,"body":373,"filePath":374,"digest":375,"legacyId":376,"deferredRender":139},{"aliases":368,"description":371,"title":372,"toc":139},[369,370],"/components/","/docs/[[config:docs_version]]/components/","Build vertically collapsing accordions in combination with our Collapse JavaScript plugin.","Accordion","## How it works\n\nThe accordion uses [collapse]([[docsref:/components/collapse]]) internally to make it collapsible.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Example\n\nClick the accordions below to expand/collapse the accordion content.\n\nTo render an accordion that's expanded by default:\n- add the `.show` class on the `.accordion-collapse` element.\n- drop the `.collapsed` class from the `.accordion-button` element and set its `aria-expanded` attribute to `true`.\n\n\u003CExample code={`\u003Cdiv class=\"accordion\" id=\"accordionExample\">\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        Accordion Item #1\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"collapseOne\" class=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n      \u003Cdiv class=\"accordion-body\">\n        \u003Cstrong>This is the first item's accordion body.\u003C/strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \u003Ccode>.accordion-body\u003C/code>, though the transition does limit overflow.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n        Accordion Item #2\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n      \u003Cdiv class=\"accordion-body\">\n        \u003Cstrong>This is the second item's accordion body.\u003C/strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \u003Ccode>.accordion-body\u003C/code>, though the transition does limit overflow.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n        Accordion Item #3\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n      \u003Cdiv class=\"accordion-body\">\n        \u003Cstrong>This is the third item's accordion body.\u003C/strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \u003Ccode>.accordion-body\u003C/code>, though the transition does limit overflow.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Flush\n\nAdd `.accordion-flush` to remove some borders and rounded corners to render accordions edge-to-edge with their parent container.\n\n\u003CExample class=\"bg-body-secondary\" code={`\u003Cdiv class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n        Accordion Item #1\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\n      \u003Cdiv class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the \u003Ccode>.accordion-flush\u003C/code> class. This is the first item's accordion body.\u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n        Accordion Item #2\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\n      \u003Cdiv class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the \u003Ccode>.accordion-flush\u003C/code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.\u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n        Accordion Item #3\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\n      \u003Cdiv class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the \u003Ccode>.accordion-flush\u003C/code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Always open\n\nOmit the `data-bs-parent` attribute on each `.accordion-collapse` to make accordion items stay open when another item is opened.\n\n\u003CExample code={`\u003Cdiv class=\"accordion\" id=\"accordionPanelsStayOpenExample\">\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\n        Accordion Item #1\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"panelsStayOpen-collapseOne\" class=\"accordion-collapse collapse show\">\n      \u003Cdiv class=\"accordion-body\">\n        \u003Cstrong>This is the first item's accordion body.\u003C/strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \u003Ccode>.accordion-body\u003C/code>, though the transition does limit overflow.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\n        Accordion Item #2\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"panelsStayOpen-collapseTwo\" class=\"accordion-collapse collapse\">\n      \u003Cdiv class=\"accordion-body\">\n        \u003Cstrong>This is the second item's accordion body.\u003C/strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \u003Ccode>.accordion-body\u003C/code>, though the transition does limit overflow.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"accordion-item\">\n    \u003Ch2 class=\"accordion-header\">\n      \u003Cbutton class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\n        Accordion Item #3\n      \u003C/button>\n    \u003C/h2>\n    \u003Cdiv id=\"panelsStayOpen-collapseThree\" class=\"accordion-collapse collapse\">\n      \u003Cdiv class=\"accordion-body\">\n        \u003Cstrong>This is the third item's accordion body.\u003C/strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \u003Ccode>.accordion-body\u003C/code>, though the transition does limit overflow.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Accessibility\n\nPlease read the [collapse accessibility section]([[docsref:/components/collapse#accessibility]]) for more information.\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, accordions now use local CSS variables on `.accordion` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"accordion-css-vars\" file=\"scss/_accordion.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"accordion-variables\" file=\"scss/_variables.scss\" />","src/content/docs/components/accordion.mdx","d2692cb45f0d0aa5","components/accordion.mdx","components/breadcrumb",{"id":377,"data":379,"body":382,"filePath":383,"digest":384,"legacyId":385,"deferredRender":139},{"description":380,"title":381,"toc":139},"Indicate the current page's location within a navigational hierarchy that automatically adds separators via CSS.","Breadcrumb","## Example\n\nUse an ordered or unordered list with linked list items to create a minimally styled breadcrumb. Use our utilities to add additional styles as desired.\n\n\u003CExample code={`\u003Cnav aria-label=\"breadcrumb\">\n  \u003Col class=\"breadcrumb\">\n    \u003Cli class=\"breadcrumb-item active\" aria-current=\"page\">Home\u003C/li>\n  \u003C/ol>\n\u003C/nav>\n\n\u003Cnav aria-label=\"breadcrumb\">\n  \u003Col class=\"breadcrumb\">\n    \u003Cli class=\"breadcrumb-item\">\u003Ca href=\"#\">Home\u003C/a>\u003C/li>\n    \u003Cli class=\"breadcrumb-item active\" aria-current=\"page\">Library\u003C/li>\n  \u003C/ol>\n\u003C/nav>\n\n\u003Cnav aria-label=\"breadcrumb\">\n  \u003Col class=\"breadcrumb\">\n    \u003Cli class=\"breadcrumb-item\">\u003Ca href=\"#\">Home\u003C/a>\u003C/li>\n    \u003Cli class=\"breadcrumb-item\">\u003Ca href=\"#\">Library\u003C/a>\u003C/li>\n    \u003Cli class=\"breadcrumb-item active\" aria-current=\"page\">Data\u003C/li>\n  \u003C/ol>\n\u003C/nav>`} />\n\n## Dividers\n\nDividers are automatically added in CSS through [`::before`](https://developer.mozilla.org/en-US/docs/Web/CSS/::before) and [`content`](https://developer.mozilla.org/en-US/docs/Web/CSS/content). They can be changed by modifying a local CSS custom property `--bs-breadcrumb-divider`, or through the `$breadcrumb-divider` Sass variable — and `$breadcrumb-divider-flipped` for its RTL counterpart, if needed. We default to our Sass variable, which is set as a fallback to the custom property. This way, you get a global divider that you can override without recompiling CSS at any time.\n\n\u003CExample code={`\u003Cnav style=\"--bs-breadcrumb-divider: '>';\" aria-label=\"breadcrumb\">\n  \u003Col class=\"breadcrumb\">\n    \u003Cli class=\"breadcrumb-item\">\u003Ca href=\"#\">Home\u003C/a>\u003C/li>\n    \u003Cli class=\"breadcrumb-item active\" aria-current=\"page\">Library\u003C/li>\n  \u003C/ol>\n\u003C/nav>`} />\n\nWhen modifying via Sass, the [quote](https://sass-lang.com/documentation/modules/string/#quote) function is required to generate the quotes around a string. For example, using `>` as the divider, you can use this:\n\n```scss\n$breadcrumb-divider: quote(\">\");\n```\n\nIt's also possible to use an **embedded SVG icon**. Apply it via our CSS custom property, or use the Sass variable.\n\n\u003CCallout>\n**Inlined SVG requires properly escaped characters.** Some reserved characters, such as `\u003C`, `>` and `#`, must be URL-encoded or escaped. We do this with the `$breadcrumb-divider` variable using our [`escape-svg()` Sass function]([[docsref:/customize/sass#escape-svg]]). When customizing the CSS variable, you must handle this yourself. Read [Kevin Weber's explanations on CodePen](https://codepen.io/kevinweber/pen/dXWoRw ) for more info.\n\u003C/Callout>\n\n\u003CExample code={`\u003Cnav style=\"--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);\" aria-label=\"breadcrumb\">\n  \u003Col class=\"breadcrumb\">\n    \u003Cli class=\"breadcrumb-item\">\u003Ca href=\"#\">Home\u003C/a>\u003C/li>\n    \u003Cli class=\"breadcrumb-item active\" aria-current=\"page\">Library\u003C/li>\n  \u003C/ol>\n\u003C/nav>`} />\n\n```scss\n$breadcrumb-divider: url(\"data:image/svg+xml,\u003Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'>\u003Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='#{$breadcrumb-divider-color}'/>\u003C/svg>\");\n```\n\nYou can also remove the divider setting `--bs-breadcrumb-divider: '';` (empty strings in CSS custom properties counts as a value), or setting the Sass variable to `$breadcrumb-divider: none;`.\n\n\u003CExample code={`\u003Cnav style=\"--bs-breadcrumb-divider: '';\" aria-label=\"breadcrumb\">\n  \u003Col class=\"breadcrumb\">\n    \u003Cli class=\"breadcrumb-item\">\u003Ca href=\"#\">Home\u003C/a>\u003C/li>\n    \u003Cli class=\"breadcrumb-item active\" aria-current=\"page\">Library\u003C/li>\n  \u003C/ol>\n\u003C/nav>`} />\n\n\n```scss\n$breadcrumb-divider: none;\n```\n\n## Accessibility\n\nSince breadcrumbs provide a navigation, it's a good idea to add a meaningful label such as `aria-label=\"breadcrumb\"` to describe the type of navigation provided in the `\u003Cnav>` element, as well as applying an `aria-current=\"page\"` to the last item of the set to indicate that it represents the current page.\n\nFor more information, see the [ARIA Authoring Practices Guide breadcrumb pattern](https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/).\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, breadcrumbs now use local CSS variables on `.breadcrumb` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"breadcrumb-css-vars\" file=\"scss/_breadcrumb.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"breadcrumb-variables\" file=\"scss/_variables.scss\" />","src/content/docs/components/breadcrumb.mdx","f74a76757713e11b","components/breadcrumb.mdx","components/close-button",{"id":386,"data":388,"body":391,"filePath":392,"digest":393,"legacyId":394,"deferredRender":139},{"description":389,"title":390,"toc":139},"A generic close button for dismissing content like modals and alerts.","Close button","## Example\n\nProvide an option to dismiss or close a component with `.btn-close`. Default styling is limited, but highly customizable. Modify the Sass variables to replace the default `background-image`. **Be sure to include text for screen readers**, as we've done with `aria-label`.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn-close\" aria-label=\"Close\">\u003C/button>`} />\n\n## Disabled state\n\nDisabled close buttons change their `opacity`. We've also applied `pointer-events: none` and `user-select: none` to preventing hover and active states from triggering.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn-close\" disabled aria-label=\"Close\">\u003C/button>`} />\n\n## Dark variant\n\n\u003CDeprecatedIn version=\"5.3.0\" />\n\n\u003CCallout type=\"warning\">\n**Heads up!** As of v5.3.0, the `.btn-close-white` class is deprecated. Instead, use `data-bs-theme=\"dark\"` to change the color mode of the close button.\n\u003C/Callout>\n\nAdd `data-bs-theme=\"dark\"` to the `.btn-close`, or to its parent element, to invert the close button. This uses the `filter` property to invert the `background-image` without overriding its value.\n\n\u003CExample class=\"bg-dark\" code={`\u003Cdiv data-bs-theme=\"dark\">\n  \u003Cbutton type=\"button\" class=\"btn-close\" aria-label=\"Close\">\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn-close\" disabled aria-label=\"Close\">\u003C/button>\n\u003C/div>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.3.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, close button now uses local CSS variables on `.btn-close` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"close-css-vars\" file=\"scss/_close.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"close-variables\" file=\"scss/_variables.scss\" />","src/content/docs/components/close-button.mdx","b8e90b732d1b18d5","components/close-button.mdx","components/buttons",{"id":395,"data":397,"body":400,"filePath":401,"digest":402,"legacyId":403,"deferredRender":139},{"description":398,"title":399,"toc":139},"Use Bootstrap's custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.","Buttons","import { getData } from '@libs/data'\n\n## Base class\n\nBootstrap has a base `.btn` class that sets up basic styles such as padding and content alignment. By default, `.btn` controls have a transparent border and background color, and lack any explicit focus and hover styles.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn\">Base class\u003C/button>`} />\n\nThe `.btn` class is intended to be used in conjunction with our button variants, or to serve as a basis for your own custom styles.\n\n\u003CCallout type=\"warning\">\nIf you are using the `.btn` class on its own, remember to at least define some explicit `:focus` and/or `:focus-visible` styles.\n\u003C/Callout>\n\n## Variants\n\nBootstrap includes several button variants, each serving its own semantic purpose, with a few extras thrown in for more control.\n\n\u003CExample code={[...getData('theme-colors').map((themeColor) => `\u003Cbutton type=\"button\" class=\"btn btn-${themeColor.name}\">${themeColor.title}\u003C/button>`), `\n\u003Cbutton type=\"button\" class=\"btn btn-link\">Link\u003C/button>`]} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## Disable text wrapping\n\nIf you don't want the button text to wrap, you can add the `.text-nowrap` class to the button. In Sass, you can set `$btn-white-space: nowrap` to disable text wrapping for each button.\n\n## Button tags\n\nThe `.btn` classes are designed to be used with the `\u003Cbutton>` element. However, you can also use these classes on `\u003Ca>` or `\u003Cinput>` elements (though some browsers may apply a slightly different rendering).\n\nWhen using button classes on `\u003Ca>` elements that are used to trigger in-page functionality (like collapsing content), rather than linking to new pages or sections within the current page, these links should be given a `role=\"button\"` to appropriately convey their purpose to assistive technologies such as screen readers.\n\n\u003CExample code={`\u003Ca class=\"btn btn-primary\" href=\"#\" role=\"button\">Link\u003C/a>\n\u003Cbutton class=\"btn btn-primary\" type=\"submit\">Button\u003C/button>\n\u003Cinput class=\"btn btn-primary\" type=\"button\" value=\"Input\">\n\u003Cinput class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n\u003Cinput class=\"btn btn-primary\" type=\"reset\" value=\"Reset\">`} />\n\n## Outline buttons\n\nIn need of a button, but not the hefty background colors they bring? Replace the default modifier classes with the `.btn-outline-*` ones to remove all background images and colors on any button.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cbutton type=\"button\" class=\"btn btn-outline-${themeColor.name}\">${themeColor.name}\u003C/button>`)} />\n\n\u003CCallout>\nSome of the button styles use a relatively light foreground color, and should only be used on a dark background in order to have sufficient contrast.\n\u003C/Callout>\n\n## Sizes\n\nFancy larger or smaller buttons? Add `.btn-lg` or `.btn-sm` for additional sizes.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary btn-lg\">Large button\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary btn-lg\">Large button\u003C/button>`} />\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary btn-sm\">Small button\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary btn-sm\">Small button\u003C/button>`} />\n\nYou can even roll your own custom sizing with CSS variables:\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary\"\n        style=\"--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .5rem; --bs-btn-font-size: .75rem;\">\n  Custom button\n\u003C/button>`} />\n\n## Disabled state\n\nMake buttons look inactive by adding the `disabled` boolean attribute to any `\u003Cbutton>` element. Disabled buttons have `pointer-events: none` applied to, preventing hover and active states from triggering.\n\n\u003CExample code={`\u003Cbutton type=\"button\" class=\"btn btn-primary\" disabled>Primary button\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" disabled>Button\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-outline-primary\" disabled>Primary button\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\" disabled>Button\u003C/button>`} />\n\nDisabled buttons using the `\u003Ca>` element behave a bit different:\n\n- `\u003Ca>`s don't support the `disabled` attribute, so you must add the `.disabled` class to make it visually appear disabled.\n- Some future-friendly styles are included to disable all `pointer-events` on anchor buttons.\n- Disabled buttons using `\u003Ca>` should include the `aria-disabled=\"true\"` attribute to indicate the state of the element to assistive technologies.\n- Disabled buttons using `\u003Ca>` *should not* include the `href` attribute.\n\n\u003CExample code={`\u003Ca class=\"btn btn-primary disabled\" role=\"button\" aria-disabled=\"true\">Primary link\u003C/a>\n\u003Ca class=\"btn btn-secondary disabled\" role=\"button\" aria-disabled=\"true\">Link\u003C/a>`} />\n\n### Link functionality caveat\n\nTo cover cases where you have to keep the `href` attribute on a disabled link, the `.disabled` class uses `pointer-events: none` to try to disable the link functionality of `\u003Ca>`s. Note that this CSS property is not yet standardized for HTML, but all modern browsers support it. In addition, even in browsers that do support `pointer-events: none`, keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, in addition to `aria-disabled=\"true\"`, also include a `tabindex=\"-1\"` attribute on these links to prevent them from receiving keyboard focus, and use custom JavaScript to disable their functionality altogether.\n\n\u003CExample code={`\u003Ca href=\"#\" class=\"btn btn-primary disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Primary link\u003C/a>\n\u003Ca href=\"#\" class=\"btn btn-secondary disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Link\u003C/a>`} />\n\n## Block buttons\n\nCreate responsive stacks of full-width, \"block buttons\" like those in Bootstrap 4 with a mix of our display and gap utilities. By using utilities instead of button-specific classes, we have much greater control over spacing, alignment, and responsive behaviors.\n\n\u003CExample code={`\u003Cdiv class=\"d-grid gap-2\">\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n\u003C/div>`} />\n\nHere we create a responsive variation, starting with vertically stacked buttons until the `md` breakpoint, where `.d-md-block` replaces the `.d-grid` class, thus nullifying the `gap-2` utility. Resize your browser to see them change.\n\n\u003CExample code={`\u003Cdiv class=\"d-grid gap-2 d-md-block\">\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n\u003C/div>`} />\n\nYou can adjust the width of your block buttons with grid column width classes. For example, for a half-width \"block button\", use `.col-6`. Center it horizontally with `.mx-auto`, too.\n\n\u003CExample code={`\u003Cdiv class=\"d-grid gap-2 col-6 mx-auto\">\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n\u003C/div>`} />\n\nAdditional utilities can be used to adjust the alignment of buttons when horizontal. Here we've taken our previous responsive example and added some flex utilities and a margin utility on the button to right-align the buttons when they're no longer stacked.\n\n\u003CExample code={`\u003Cdiv class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n  \u003Cbutton class=\"btn btn-primary me-md-2\" type=\"button\">Button\u003C/button>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\">Button\u003C/button>\n\u003C/div>`} />\n\n## Button plugin\n\nThe button plugin allows you to create simple on/off toggle buttons.\n\n\u003CCallout>\nVisually, these toggle buttons are identical to the [checkbox toggle buttons]([[docsref:/forms/checks-radios#checkbox-toggle-buttons]]). However, they are conveyed differently by assistive technologies: the checkbox toggles will be announced by screen readers as \"checked\"/\"not checked\" (since, despite their appearance, they are fundamentally still checkboxes), whereas these toggle buttons will be announced as \"button\"/\"button pressed\". The choice between these two approaches will depend on the type of toggle you are creating, and whether or not the toggle will make sense to users when announced as a checkbox or as an actual button.\n\u003C/Callout>\n\n### Toggle states\n\nAdd `data-bs-toggle=\"button\"` to toggle a button's `active` state. If you're pre-toggling a button, you must manually add the `.active` class **and** `aria-pressed=\"true\"` to ensure that it is conveyed appropriately to assistive technologies.\n\n\u003CExample code={`\u003Cp class=\"d-inline-flex gap-1\">\n  \u003Cbutton type=\"button\" class=\"btn\" data-bs-toggle=\"button\">Toggle button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn active\" data-bs-toggle=\"button\" aria-pressed=\"true\">Active toggle button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn\" disabled data-bs-toggle=\"button\">Disabled toggle button\u003C/button>\n\u003C/p>\n\u003Cp class=\"d-inline-flex gap-1\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"button\">Toggle button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary active\" data-bs-toggle=\"button\" aria-pressed=\"true\">Active toggle button\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" disabled data-bs-toggle=\"button\">Disabled toggle button\u003C/button>\n\u003C/p>`} />\n\n\u003CExample code={`\u003Cp class=\"d-inline-flex gap-1\">\n  \u003Ca href=\"#\" class=\"btn\" role=\"button\" data-bs-toggle=\"button\">Toggle link\u003C/a>\n  \u003Ca href=\"#\" class=\"btn active\" role=\"button\" data-bs-toggle=\"button\" aria-pressed=\"true\">Active toggle link\u003C/a>\n  \u003Ca class=\"btn disabled\" aria-disabled=\"true\" role=\"button\" data-bs-toggle=\"button\">Disabled toggle link\u003C/a>\n\u003C/p>\n\u003Cp class=\"d-inline-flex gap-1\">\n  \u003Ca href=\"#\" class=\"btn btn-primary\" role=\"button\" data-bs-toggle=\"button\">Toggle link\u003C/a>\n  \u003Ca href=\"#\" class=\"btn btn-primary active\" role=\"button\" data-bs-toggle=\"button\" aria-pressed=\"true\">Active toggle link\u003C/a>\n  \u003Ca class=\"btn btn-primary disabled\" aria-disabled=\"true\" role=\"button\" data-bs-toggle=\"button\">Disabled toggle link\u003C/a>\n\u003C/p>`} />\n\n### Methods\n\nYou can create a button instance with the button constructor, for example:\n\n```js\nconst bsButton = new bootstrap.Button('#myButton')\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's button. (Removes stored data on the DOM element) |\n| `getInstance` | Static method which allows you to get the button instance associated with a DOM element, you can use it like this: `bootstrap.Button.getInstance(element)`. |\n| `getOrCreateInstance` | Static method which returns a button instance associated with a DOM element or creates a new one in case it wasn't initialized. You can use it like this: `bootstrap.Button.getOrCreateInstance(element)`. |\n| `toggle` | Toggles push state. Gives the button the appearance that it has been activated. |\n\u003C/BsTable>\n\nFor example, to toggle all buttons\n\n```js\ndocument.querySelectorAll('.btn').forEach(buttonElement => {\n  const button = bootstrap.Button.getOrCreateInstance(buttonElement)\n  button.toggle()\n})\n```\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, buttons now use local CSS variables on `.btn` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"btn-css-vars\" file=\"scss/_buttons.scss\" />\n\nEach `.btn-*` modifier class updates the appropriate CSS variables to minimize additional CSS rules with our `button-variant()`, `button-outline-variant()`, and `button-size()` mixins.\n\nHere's an example of building a custom `.btn-*` modifier class as we do for the buttons unique to our docs by reassigning Bootstrap's CSS variables with a mixture of our own CSS and Sass variables.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-bd-primary\">Custom button\u003C/button>\n\u003C/div>\n\n\u003CScssDocs name=\"btn-css-vars-example\" file=\"site/src/scss/_buttons.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"btn-variables\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\nThere are three mixins for buttons: button and button outline variant mixins (both based on `$theme-colors`), plus a button size mixin.\n\n\u003CScssDocs name=\"btn-variant-mixin\" file=\"scss/mixins/_buttons.scss\" />\n\n\u003CScssDocs name=\"btn-outline-variant-mixin\" file=\"scss/mixins/_buttons.scss\" />\n\n\u003CScssDocs name=\"btn-size-mixin\" file=\"scss/mixins/_buttons.scss\" />\n\n### Sass loops\n\nButton variants (for regular and outline buttons) use their respective mixins with our `$theme-colors` map to generate the modifier classes in `scss/_buttons.scss`.\n\n\u003CScssDocs name=\"btn-variant-loops\" file=\"scss/_buttons.scss\" />","src/content/docs/components/buttons.mdx","c617334b57f91df8","components/buttons.mdx","components/carousel",{"id":404,"data":406,"body":409,"filePath":410,"digest":411,"legacyId":412,"deferredRender":139},{"description":407,"title":408,"toc":139},"A slideshow component for cycling through elements—images or slides of text—like a carousel.","Carousel","## How it works\n\n- The carousel is a slideshow for cycling through a series of content, built with CSS 3D transforms and a bit of JavaScript. It works with a series of images, text, or custom markup. It also includes support for previous/next controls and indicators.\n\n- For performance reasons, **carousels must be manually initialized** using the [carousel constructor method](#methods). Without initialization, some of the event listeners (specifically, the events needed touch/swipe support) will not be registered until a user has explicitly activated a control or indicator.\n\n  The only exception are [autoplaying carousels](#autoplaying-carousels) with the `data-bs-ride=\"carousel\"` attribute as these are initialized automatically on page load. If you're using autoplaying carousels with the data attribute, **don't explicitly initialize the same carousels with the constructor method.**\n\n- Nested carousels are not supported. You should also be aware that carousels in general can often cause usability and accessibility challenges.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Basic examples\n\nHere is a basic example of a carousel with three slides. Note the previous/next controls. We recommend using `\u003Cbutton>` elements, but you can also use `\u003Ca>` elements with `role=\"button\"`.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExample\" class=\"carousel slide\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\nCarousels don't automatically normalize slide dimensions. As such, you may need to use additional utilities or custom styles to appropriately size content. While carousels support previous/next controls and indicators, they're not explicitly required. Add and customize as you see fit.\n\n**You must add the `.active` class to one of the slides**, otherwise the carousel will not be visible. Also be sure to set a unique `id` on the `.carousel` for optional controls, especially if you're using multiple carousels on a single page. Control and indicator elements must have a `data-bs-target` attribute (or `href` for links) that matches the `id` of the `.carousel` element.\n\n### Indicators\n\nYou can add indicators to the carousel, alongside the previous/next controls. The indicators let users jump directly to a particular slide.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleIndicators\" class=\"carousel slide\">\n  \u003Cdiv class=\"carousel-indicators\">\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\">\u003C/button>\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\">\u003C/button>\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n### Captions\n\nYou can add captions to your slides with the `.carousel-caption` element within any `.carousel-item`. They can be easily hidden on smaller viewports, as shown below, with optional [display utilities]([[docsref:/utilities/display]]). We hide them initially with `.d-none` and bring them back on medium-sized devices with `.d-md-block`.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleCaptions\" class=\"carousel slide\">\n  \u003Cdiv class=\"carousel-indicators\">\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\">\u003C/button>\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\">\u003C/button>\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n      \u003Cdiv class=\"carousel-caption d-none d-md-block\">\n        \u003Ch5>First slide label\u003C/h5>\n        \u003Cp>Some representative placeholder content for the first slide.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n      \u003Cdiv class=\"carousel-caption d-none d-md-block\">\n        \u003Ch5>Second slide label\u003C/h5>\n        \u003Cp>Some representative placeholder content for the second slide.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n      \u003Cdiv class=\"carousel-caption d-none d-md-block\">\n        \u003Ch5>Third slide label\u003C/h5>\n        \u003Cp>Some representative placeholder content for the third slide.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n### Crossfade\n\nAdd `.carousel-fade` to your carousel to animate slides with a fade transition instead of a slide. Depending on your carousel content (e.g., text only slides), you may want to add `.bg-body` or some custom CSS to the `.carousel-item`s for proper crossfading.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleFade\" class=\"carousel slide carousel-fade\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleFade\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleFade\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n## Autoplaying carousels\n\nYou can make your carousels autoplay on page load by setting the `ride` option to `carousel`. Autoplaying carousels automatically pause while hovered with the mouse. This behavior can be controlled with the `pause` option. In browsers that support the [Page Visibility API](https://www.w3.org/TR/page-visibility/), the carousel will stop cycling when the webpage is not visible to the user (such as when the browser tab is inactive, or when the browser window is minimized).\n\n\u003CCallout>\nFor accessibility reasons, we recommend avoiding the use of autoplaying carousels. If your page does include an autoplaying carousel, we recommend providing an additional button or control to explicitly pause/stop the carousel.\n\nSee [WCAG 2.2 Success Criterion 2.2.2 Pause, Stop, Hide](https://www.w3.org/TR/WCAG/#pause-stop-hide).\n\u003C/Callout>\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleAutoplaying\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleAutoplaying\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleAutoplaying\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\nWhen the `ride` option is set to `true`, rather than `carousel`, the carousel won't automatically start to cycle on page load. Instead, it will only start after the first user interaction.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleRide\" class=\"carousel slide\" data-bs-ride=\"true\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleRide\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleRide\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n### Individual `.carousel-item` interval\n\nAdd `data-bs-interval=\"\"` to a `.carousel-item` to change the amount of time to delay between automatically cycling to the next item.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleInterval\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\" data-bs-interval=\"10000\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\" data-bs-interval=\"2000\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n### Autoplaying carousels without controls\n\nHere's a carousel with slides only. Note the presence of the `.d-block` and `.w-100` on carousel images to prevent browser default image alignment.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleSlidesOnly\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Disable touch swiping\n\nCarousels support swiping left/right on touchscreen devices to move between slides. This can be disabled by setting the `touch` option to `false`.\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleControlsNoTouching\" class=\"carousel slide\" data-bs-touch=\"false\">\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#555\" background=\"#777\" text=\"First slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#444\" background=\"#666\" text=\"Second slide\" />\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#333\" background=\"#555\" text=\"Third slide\" />\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControlsNoTouching\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControlsNoTouching\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n## Dark variant\n\n\u003CDeprecatedIn version=\"5.3.0\" />\n\nAdd `.carousel-dark` to the `.carousel` for darker controls, indicators, and captions. Controls are inverted compared to their default white fill with the `filter` CSS property. Captions and controls have additional Sass variables that customize the `color` and `background-color`.\n\n\u003CCalloutDeprecatedDarkVariants component=\"carousel\" />\n\n\u003CExample code={`\u003Cdiv id=\"carouselExampleDark\" class=\"carousel carousel-dark slide\">\n  \u003Cdiv class=\"carousel-indicators\">\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\">\u003C/button>\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\">\u003C/button>\n    \u003Cbutton type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"carousel-inner\">\n    \u003Cdiv class=\"carousel-item active\" data-bs-interval=\"10000\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#aaa\" background=\"#f5f5f5\" text=\"First slide\" />\n      \u003Cdiv class=\"carousel-caption d-none d-md-block\">\n        \u003Ch5>First slide label\u003C/h5>\n        \u003Cp>Some representative placeholder content for the first slide.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\" data-bs-interval=\"2000\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#bbb\" background=\"#eee\" text=\"Second slide\" />\n      \u003Cdiv class=\"carousel-caption d-none d-md-block\">\n        \u003Ch5>Second slide label\u003C/h5>\n        \u003Cp>Some representative placeholder content for the second slide.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"carousel-item\">\n      \u003CPlaceholder width=\"800\" height=\"400\" class=\"bd-placeholder-img-lg d-block w-100\" color=\"#999\" background=\"#e5e5e5\" text=\"Third slide\" />\n      \u003Cdiv class=\"carousel-caption d-none d-md-block\">\n        \u003Ch5>Third slide label\u003C/h5>\n        \u003Cp>Some representative placeholder content for the third slide.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide=\"prev\">\n    \u003Cspan class=\"carousel-control-prev-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Previous\u003C/span>\n  \u003C/button>\n  \u003Cbutton class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide=\"next\">\n    \u003Cspan class=\"carousel-control-next-icon\" aria-hidden=\"true\">\u003C/span>\n    \u003Cspan class=\"visually-hidden\">Next\u003C/span>\n  \u003C/button>\n\u003C/div>`} />\n\n## Custom transition\n\nThe transition duration of `.carousel-item` can be changed with the `$carousel-transition-duration` Sass variable before compiling or custom styles if you're using the compiled CSS. If multiple transitions are applied, make sure the transform transition is defined first (e.g. `transition: transform 2s ease, opacity .5s ease-out`).\n\n## CSS\n\n### Sass variables\n\nVariables for all carousels:\n\n\u003CScssDocs name=\"carousel-variables\" file=\"scss/_variables.scss\" />\n\nVariables for the [dark carousel](#dark-variant):\n\n\u003CScssDocs name=\"carousel-dark-variables\" file=\"scss/_variables.scss\" />\n\n## Usage\n\n### Via data attributes\n\nUse data attributes to easily control the position of the carousel. `data-bs-slide` accepts the keywords `prev` or `next`, which alters the slide position relative to its current position. Alternatively, use `data-bs-slide-to` to pass a raw slide index to the carousel `data-bs-slide-to=\"2\"`, which shifts the slide position to a particular index beginning with `0`.\n\n### Via JavaScript\n\nCall carousel manually with:\n\n```js\nconst carousel = new bootstrap.Carousel('#myCarousel')\n```\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `interval` | number | `5000` | The amount of time to delay between automatically cycling an item. |\n| `keyboard` | boolean | `true` | Whether the carousel should react to keyboard events. |\n| `pause` | string, boolean | `\"hover\"` | If set to `\"hover\"`, pauses the cycling of the carousel on `mouseenter` and resumes the cycling of the carousel on `mouseleave`. If set to `false`, hovering over the carousel won't pause it. On touch-enabled devices, when set to `\"hover\"`, cycling will pause on `touchend` (once the user finished interacting with the carousel) for two intervals, before automatically resuming. This is in addition to the mouse behavior. |\n| `ride` | string, boolean | `false` | If set to `true`, autoplays the carousel after the user manually cycles the first item. If set to `\"carousel\"`, autoplays the carousel on load. |\n| `touch` | boolean | `true` | Whether the carousel should support left/right swipe interactions on touchscreen devices. |\n| `wrap` | boolean | `true` | Whether the carousel should cycle continuously or have hard stops. |\n\u003C/BsTable>\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\nYou can create a carousel instance with the carousel constructor, and pass on any additional options. For example, to manually initialize an autoplaying carousel (assuming you're not using the `data-bs-ride=\"carousel\"` attribute in the markup itself) with a specific interval and with touch support disabled, you can use:\n\n```js\nconst myCarouselElement = document.querySelector('#myCarousel')\n\nconst carousel = new bootstrap.Carousel(myCarouselElement, {\n  interval: 2000,\n  touch: false\n})\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `cycle` | Starts cycling through the carousel items from left to right. |\n| `dispose` | Destroys an element's carousel. (Removes stored data on the DOM element) |\n| `getInstance` | Static method which allows you to get the carousel instance associated to a DOM element. You can use it like this: `bootstrap.Carousel.getInstance(element)`. |\n| `getOrCreateInstance` | Static method which returns a carousel instance associated to a DOM element, or creates a new one in case it wasn't initialized. You can use it like this: `bootstrap.Carousel.getOrCreateInstance(element)`. |\n| `next` | Cycles to the next item. **Returns to the caller before the next item has been shown** (e.g., before the `slid.bs.carousel` event occurs). |\n| `nextWhenVisible` | Don't cycle carousel to next when the page, the carousel, or the carousel's parent aren't visible. **Returns to the caller before the target item has been shown**. |\n| `pause` | Stops the carousel from cycling through items. |\n| `prev` | Cycles to the previous item. **Returns to the caller before the previous item has been shown** (e.g., before the `slid.bs.carousel` event occurs). |\n| `to` | Cycles the carousel to a particular frame (0 based, similar to an array). **Returns to the caller before the target item has been shown** (e.g., before the `slid.bs.carousel` event occurs). |\n\u003C/BsTable>\n\n### Events\n\nBootstrap's carousel class exposes two events for hooking into carousel functionality. Both events have the following additional properties:\n\n- `direction`: The direction in which the carousel is sliding (either `\"left\"` or `\"right\"`).\n- `relatedTarget`: The DOM element that is being slid into place as the active item.\n- `from`: The index of the current item\n- `to`: The index of the next item\n\nAll carousel events are fired at the carousel itself (i.e. at the `\u003Cdiv class=\"carousel\">`).\n\n\u003CBsTable>\n| Event type | Description |\n| --- | --- |\n| `slid.bs.carousel` | Fired when the carousel has completed its slide transition. |\n| `slide.bs.carousel` | Fires immediately when the `slide` instance method is invoked. |\n\u003C/BsTable>\n\n```js\nconst myCarousel = document.getElementById('myCarousel')\n\nmyCarousel.addEventListener('slide.bs.carousel', event => {\n  // do something...\n})\n```","src/content/docs/components/carousel.mdx","2873ba5c11474379","components/carousel.mdx","components/card",{"id":413,"data":415,"body":418,"filePath":419,"digest":420,"legacyId":421,"deferredRender":139},{"description":416,"title":417,"toc":139},"Bootstrap's cards provide a flexible and extensible content container with multiple variants and options.","Cards","import { getData } from '@libs/data'\n\n## About\n\nA **card** is a flexible and extensible content container. It includes options for headers and footers, a wide variety of content, contextual background colors, and powerful display options. If you're familiar with Bootstrap 3, cards replace our old panels, wells, and thumbnails. Similar functionality to those components is available as modifier classes for cards.\n\n## Example\n\nCards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components. They have no `margin` by default, so use [spacing utilities]([[docsref:/utilities/spacing]]) as needed.\n\nBelow is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they'll naturally fill the full width of its parent element. This is easily customized with our various [sizing options](#sizing).\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n## Content types\n\nCards support a wide variety of content, including images, text, list groups, links, and more. Below are examples of what's supported.\n\n### Body\n\nThe building block of a card is the `.card-body`. Use it whenever you need a padded section within a card.\n\n\u003CExample code={`\u003Cdiv class=\"card\">\n  \u003Cdiv class=\"card-body\">\n    This is some text within a card body.\n  \u003C/div>\n\u003C/div>`} />\n\n### Titles, text, and links\n\nCard titles are used by adding `.card-title` to a `\u003Ch*>` tag. In the same way, links are added and placed next to each other by adding `.card-link` to an `\u003Ca>` tag.\n\nSubtitles are used by adding a `.card-subtitle` to a `\u003Ch*>` tag. If the `.card-title` and the `.card-subtitle` items are placed in a `.card-body` item, the card title and subtitle are aligned nicely.\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Ch6 class=\"card-subtitle mb-2 text-body-secondary\">Card subtitle\u003C/h6>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n    \u003Ca href=\"#\" class=\"card-link\">Card link\u003C/a>\n    \u003Ca href=\"#\" class=\"card-link\">Another link\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n### Images\n\n`.card-img-top` and `.card-img-bottom` respectively set the top and bottom corners rounded to match the card's borders. With `.card-text`, text can be added to the card. Text within `.card-text` can also be styled with the standard HTML tags.\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n\u003C/div>`} />\n\n### List groups\n\nCreate lists of content in a card with a flush list group.\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003Cul class=\"list-group list-group-flush\">\n    \u003Cli class=\"list-group-item\">An item\u003C/li>\n    \u003Cli class=\"list-group-item\">A second item\u003C/li>\n    \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003Cdiv class=\"card-header\">\n    Featured\n  \u003C/div>\n  \u003Cul class=\"list-group list-group-flush\">\n    \u003Cli class=\"list-group-item\">An item\u003C/li>\n    \u003Cli class=\"list-group-item\">A second item\u003C/li>\n    \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003Cul class=\"list-group list-group-flush\">\n    \u003Cli class=\"list-group-item\">An item\u003C/li>\n    \u003Cli class=\"list-group-item\">A second item\u003C/li>\n    \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003C/ul>\n  \u003Cdiv class=\"card-footer\">\n    Card footer\n  \u003C/div>\n\u003C/div>`} />\n\n### Kitchen sink\n\nMix and match multiple content types to create the card you need, or throw everything in there. Shown below are image styles, blocks, text styles, and a list group—all wrapped in a fixed-width card.\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n  \u003Cul class=\"list-group list-group-flush\">\n    \u003Cli class=\"list-group-item\">An item\u003C/li>\n    \u003Cli class=\"list-group-item\">A second item\u003C/li>\n    \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003C/ul>\n  \u003Cdiv class=\"card-body\">\n    \u003Ca href=\"#\" class=\"card-link\">Card link\u003C/a>\n    \u003Ca href=\"#\" class=\"card-link\">Another link\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n### Header and footer\n\nAdd an optional header and/or footer within a card.\n\n\u003CExample code={`\u003Cdiv class=\"card\">\n  \u003Cdiv class=\"card-header\">\n    Featured\n  \u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\nCard headers can be styled by adding `.card-header` to `\u003Ch*>` elements.\n\n\u003CExample code={`\u003Cdiv class=\"card\">\n  \u003Ch5 class=\"card-header\">Featured\u003C/h5>\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"card\">\n  \u003Cdiv class=\"card-header\">\n    Quote\n  \u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Cblockquote class=\"blockquote mb-0\">\n      \u003Cp>A well-known quote, contained in a blockquote element.\u003C/p>\n      \u003Cfooter class=\"blockquote-footer\">Someone famous in \u003Ccite title=\"Source Title\">Source Title\u003C/cite>\u003C/footer>\n    \u003C/blockquote>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"card text-center\">\n  \u003Cdiv class=\"card-header\">\n    Featured\n  \u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n  \u003Cdiv class=\"card-footer text-body-secondary\">\n    2 days ago\n  \u003C/div>\n\u003C/div>`} />\n\n## Sizing\n\nCards assume no specific `width` to start, so they'll be 100% wide unless otherwise stated. You can change this as needed with custom CSS, grid classes, grid Sass mixins, or utilities.\n\n### Using grid markup\n\nUsing the grid, wrap cards in columns and rows as needed.\n\n\u003CExample code={`\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col-sm-6 mb-3 mb-sm-0\">\n    \u003Cdiv class=\"card\">\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n        \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n        \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-sm-6\">\n    \u003Cdiv class=\"card\">\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n        \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n        \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Using utilities\n\nUse our handful of [available sizing utilities]([[docsref:/utilities/sizing]]) to quickly set a card's width.\n\n\u003CExample code={`\u003Cdiv class=\"card w-75 mb-3\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Button\u003C/a>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"card w-50\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Button\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n### Using custom CSS\n\nUse custom CSS in your stylesheets or as inline styles to set a width.\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n## Text alignment\n\nYou can quickly change the text alignment of any card—in its entirety or specific parts—with our [text align classes]([[docsref:/utilities/text#text-alignment]]).\n\n\u003CExample code={`\u003Cdiv class=\"card mb-3\" style=\"width: 18rem;\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"card text-center mb-3\" style=\"width: 18rem;\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"card text-end\" style=\"width: 18rem;\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n## Navigation\n\nAdd some navigation to a card's header (or block) with Bootstrap's [nav components]([[docsref:/components/navs-tabs]]).\n\n\u003CExample code={`\u003Cdiv class=\"card text-center\">\n  \u003Cdiv class=\"card-header\">\n    \u003Cul class=\"nav nav-tabs card-header-tabs\">\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link active\" aria-current=\"true\" href=\"#\">Active\u003C/a>\n      \u003C/li>\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n      \u003C/li>\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n      \u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"card text-center\">\n  \u003Cdiv class=\"card-header\">\n    \u003Cul class=\"nav nav-pills card-header-pills\">\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link active\" href=\"#\">Active\u003C/a>\n      \u003C/li>\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n      \u003C/li>\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n      \u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Special title treatment\u003C/h5>\n    \u003Cp class=\"card-text\">With supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n## Images\n\nCards include a few options for working with images. Choose from appending \"image caps\" at either end of a card, overlaying images with card content, or simply embedding the image in a card.\n\n### Image caps\n\nSimilar to headers and footers, cards can include top and bottom \"image caps\"—images at the top or bottom of a card.\n\n\u003CExample code={`\u003Cdiv class=\"card mb-3\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n    \u003Cp class=\"card-text\">\u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\u003C/p>\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"card\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n    \u003Cp class=\"card-text\">\u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\u003C/p>\n  \u003C/div>\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-bottom\" text=\"Image cap\" />\n\u003C/div>`} />\n\n### Image overlays\n\nTurn an image into a card background and overlay your card's text. Depending on the image, you may or may not need additional styles or utilities.\n\n\u003CExample code={`\u003Cdiv class=\"card text-bg-dark\">\n  \u003CPlaceholder width=\"100%\" height=\"270\" class=\"bd-placeholder-img-lg card-img\" text=\"Card image\" />\n  \u003Cdiv class=\"card-img-overlay\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n    \u003Cp class=\"card-text\">\u003Csmall>Last updated 3 mins ago\u003C/small>\u003C/p>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CCallout>\nNote that content should not be larger than the height of the image. If content is larger than the image the content will be displayed outside the image.\n\u003C/Callout>\n\n## Horizontal\n\nUsing a combination of grid and utility classes, cards can be made horizontal in a mobile-friendly and responsive way. In the example below, we remove the grid gutters with `.g-0` and use `.col-md-*` classes to make the card horizontal at the `md` breakpoint. Further adjustments may be needed depending on your card content.\n\n\u003CExample code={`\u003Cdiv class=\"card mb-3\" style=\"max-width: 540px;\">\n  \u003Cdiv class=\"row g-0\">\n    \u003Cdiv class=\"col-md-4\">\n      \u003CPlaceholder width=\"100%\" height=\"250\" text=\"Image\" class=\"img-fluid rounded-start\" />\n    \u003C/div>\n    \u003Cdiv class=\"col-md-8\">\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n        \u003Cp class=\"card-text\">\u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Card styles\n\nCards include various options for customizing their backgrounds, borders, and color.\n\n### Background and color\n\n\u003CAddedIn version=\"5.2.0\" />\n\nSet a `background-color` with contrasting foreground `color` with [our `.text-bg-{color}` helpers]([[docsref:helpers/color-background]]). Previously it was required to manually pair your choice of [`.text-{color}`]([[docsref:/utilities/colors]]) and [`.bg-{color}`]([[docsref:/utilities/background]]) utilities for styling, which you still may use if you prefer.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"card text-bg-${themeColor.name} mb-3\" style=\"max-width: 18rem;\">\n  \u003Cdiv class=\"card-header\">Header\u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">${themeColor.title} card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n\u003C/div>`)} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n### Border\n\nUse [border utilities]([[docsref:/utilities/borders]]) to change just the `border-color` of a card. Note that you can put `.text-{color}` classes on the parent `.card` or a subset of the card's contents as shown below.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"card border-${themeColor.name} mb-3\" style=\"max-width: 18rem;\">\n  \u003Cdiv class=\"card-header\">Header\u003C/div>\n  \u003Cdiv class=\"card-body${themeColor.contrast_color ? '' : ` text-${themeColor.name}`}\">\n    \u003Ch5 class=\"card-title\">${themeColor.title} card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n\u003C/div>`)} />\n\n### Mixins utilities\n\nYou can also change the borders on the card header and footer as needed, and even remove their `background-color` with `.bg-transparent`.\n\n\u003CExample code={`\u003Cdiv class=\"card border-success mb-3\" style=\"max-width: 18rem;\">\n  \u003Cdiv class=\"card-header bg-transparent border-success\">Header\u003C/div>\n  \u003Cdiv class=\"card-body text-success\">\n    \u003Ch5 class=\"card-title\">Success card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n  \u003Cdiv class=\"card-footer bg-transparent border-success\">Footer\u003C/div>\n\u003C/div>`} />\n\n## Card layout\n\nIn addition to styling the content within cards, Bootstrap includes a few options for laying out series of cards. For the time being, **these layout options are not yet responsive**.\n\n### Card groups\n\nUse card groups to render cards as a single, attached element with equal width and height columns. Card groups start off stacked and use `display: flex;` to become attached with uniform dimensions starting at the `sm` breakpoint.\n\n\u003CExample code={`\u003Cdiv class=\"card-group\">\n  \u003Cdiv class=\"card\">\n    \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n    \u003Cdiv class=\"card-body\">\n      \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n      \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003Cp class=\"card-text\">\u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\u003C/p>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"card\">\n    \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n    \u003Cdiv class=\"card-body\">\n      \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n      \u003Cp class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.\u003C/p>\n      \u003Cp class=\"card-text\">\u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\u003C/p>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"card\">\n    \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n    \u003Cdiv class=\"card-body\">\n      \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n      \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.\u003C/p>\n      \u003Cp class=\"card-text\">\u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nWhen using card groups with footers, their content will automatically line up.\n\n\u003CExample code={`\u003Cdiv class=\"card-group\">\n  \u003Cdiv class=\"card\">\n    \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n    \u003Cdiv class=\"card-body\">\n      \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n      \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"card-footer\">\n      \u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"card\">\n    \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n    \u003Cdiv class=\"card-body\">\n      \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n      \u003Cp class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"card-footer\">\n      \u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"card\">\n    \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n    \u003Cdiv class=\"card-body\">\n      \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n      \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"card-footer\">\n      \u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Grid cards\n\nUse the Bootstrap grid system and its [`.row-cols` classes]([[docsref:/layout/grid#row-columns]]) to control how many grid columns (wrapped around your cards) you show per row. For example, here's `.row-cols-1` laying out the cards on one column, and `.row-cols-md-2` splitting four cards to equal width across multiple rows, from the medium breakpoint up.\n\n\u003CExample code={`\u003Cdiv class=\"row row-cols-1 row-cols-md-2 g-4\">\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nChange it to `.row-cols-3` and you'll see the fourth card wrap.\n\n\u003CExample code={`\u003Cdiv class=\"row row-cols-1 row-cols-md-3 g-4\">\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nWhen you need equal height, add `.h-100` to the cards. If you want equal heights by default, you can set `$card-height: 100%` in Sass.\n\n\u003CExample code={`\u003Cdiv class=\"row row-cols-1 row-cols-md-3 g-4\">\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a short card.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"140\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nJust like with card groups, card footers will automatically line up.\n\n\u003CExample code={`\u003Cdiv class=\"row row-cols-1 row-cols-md-3 g-4\">\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"card-footer\">\n        \u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"card-footer\">\n        \u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"card h-100\">\n      \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text=\"Image cap\" />\n      \u003Cdiv class=\"card-body\">\n        \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n        \u003Cp class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"card-footer\">\n        \u003Csmall class=\"text-body-secondary\">Last updated 3 mins ago\u003C/small>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Masonry\n\nIn `v4` we used a CSS-only technique to mimic the behavior of [Masonry](https://masonry.desandro.com/)-like columns, but this technique came with lots of unpleasant [side effects](https://github.com/twbs/bootstrap/pull/28922). If you want to have this type of layout in `v5`, you can just make use of Masonry plugin. **Masonry is not included in Bootstrap**, but we've made a [demo example]([[docsref:/examples/masonry]]) to help you get started.\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, cards now use local CSS variables on `.card` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"card-css-vars\" file=\"scss/_card.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"card-variables\" file=\"scss/_variables.scss\" />","src/content/docs/components/card.mdx","7a4693fffa649103","components/card.mdx","components/collapse",{"id":422,"data":424,"body":427,"filePath":428,"digest":429,"legacyId":430,"deferredRender":139},{"description":425,"title":426,"toc":139},"Toggle the visibility of content across your project with a few classes and our JavaScript plugins.","Collapse","## How it works\n\nThe collapse JavaScript plugin is used to show and hide content. Buttons or anchors are used as triggers that are mapped to specific elements you toggle. Collapsing an element will animate the `height` from its current value to `0`. Given how CSS handles animations, you cannot use `padding` on a `.collapse` element. Instead, use the class as an independent wrapping element.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Example\n\nClick the buttons below to show and hide another element via class changes:\n\n- `.collapse` hides content\n- `.collapsing` is applied during transitions\n- `.collapse.show` shows content\n\nGenerally, we recommend using a `\u003Cbutton>` with the `data-bs-target` attribute. While not recommended from a semantic point of view, you can also use an `\u003Ca>` link with the `href` attribute (and a `role=\"button\"`). In both cases, the `data-bs-toggle=\"collapse\"` is required.\n\n\u003CExample code={`\u003Cp class=\"d-inline-flex gap-1\">\n  \u003Ca class=\"btn btn-primary\" data-bs-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n    Link with href\n  \u003C/a>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n    Button with data-bs-target\n  \u003C/button>\n\u003C/p>\n\u003Cdiv class=\"collapse\" id=\"collapseExample\">\n  \u003Cdiv class=\"card card-body\">\n    Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.\n  \u003C/div>\n\u003C/div>`} />\n\n## Horizontal\n\nThe collapse plugin supports horizontal collapsing. Add the `.collapse-horizontal` modifier class to transition the `width` instead of `height` and set a `width` on the immediate child element. Feel free to write your own custom Sass, use inline styles, or use our [width utilities]([[docsref:/utilities/sizing]]).\n\n\u003CCallout>\nPlease note that while the example below has a `min-height` set to avoid excessive repaints in our docs, this is not explicitly required. **Only the `width` on the child element is required.**\n\u003C/Callout>\n\n\u003CExample code={`\u003Cp>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseWidthExample\" aria-expanded=\"false\" aria-controls=\"collapseWidthExample\">\n    Toggle width collapse\n  \u003C/button>\n\u003C/p>\n\u003Cdiv style=\"min-height: 120px;\">\n  \u003Cdiv class=\"collapse collapse-horizontal\" id=\"collapseWidthExample\">\n    \u003Cdiv class=\"card card-body\" style=\"width: 300px;\">\n      This is some placeholder content for a horizontal collapse. It's hidden by default and shown when triggered.\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Multiple toggles and targets\n\nA `\u003Cbutton>` or `\u003Ca>` element can show and hide multiple elements by referencing them with a selector in its `data-bs-target` or `href` attribute.\nConversely, multiple `\u003Cbutton>` or `\u003Ca>` elements can show and hide the same element if they each reference it with their `data-bs-target` or `href` attribute.\n\n\u003CExample code={`\u003Cp class=\"d-inline-flex gap-1\">\n  \u003Ca class=\"btn btn-primary\" data-bs-toggle=\"collapse\" href=\"#multiCollapseExample1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1\">Toggle first element\u003C/a>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#multiCollapseExample2\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample2\">Toggle second element\u003C/button>\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\".multi-collapse\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1 multiCollapseExample2\">Toggle both elements\u003C/button>\n\u003C/p>\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"collapse multi-collapse\" id=\"multiCollapseExample1\">\n      \u003Cdiv class=\"card card-body\">\n        Some placeholder content for the first collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cdiv class=\"collapse multi-collapse\" id=\"multiCollapseExample2\">\n      \u003Cdiv class=\"card card-body\">\n        Some placeholder content for the second collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Accessibility\n\nBe sure to add `aria-expanded` to the control element. This attribute explicitly conveys the current state of the collapsible element tied to the control to screen readers and similar assistive technologies. If the collapsible element is closed by default, the attribute on the control element should have a value of `aria-expanded=\"false\"`. If you've set the collapsible element to be open by default using the `show` class, set `aria-expanded=\"true\"` on the control instead. The plugin will automatically toggle this attribute on the control based on whether or not the collapsible element has been opened or closed (via JavaScript, or because the user triggered another control element also tied to the same collapsible element). If the control element's HTML element is not a button (e.g., an `\u003Ca>` or `\u003Cdiv>`), the attribute `role=\"button\"` should be added to the element.\n\nIf your control element is targeting a single collapsible element – i.e. the `data-bs-target` attribute is pointing to an `id` selector – you should add the `aria-controls` attribute to the control element, containing the `id` of the collapsible element. Modern screen readers and similar assistive technologies make use of this attribute to provide users with additional shortcuts to navigate directly to the collapsible element itself.\n\nNote that Bootstrap's current implementation does not cover the various *optional* keyboard interactions described in the [ARIA Authoring Practices Guide accordion pattern](https://www.w3.org/WAI/ARIA/apg/patterns/accordion/) - you will need to include these yourself with custom JavaScript.\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"collapse-transition\" file=\"scss/_variables.scss\" />\n\n### Classes\n\nCollapse transition classes can be found in `scss/_transitions.scss` as these are shared across multiple components (collapse and accordion).\n\n\u003CScssDocs name=\"collapse-classes\" file=\"scss/_transitions.scss\" />\n\n## Usage\n\nThe collapse plugin utilizes a few classes to handle the heavy lifting:\n\n- `.collapse` hides the content\n- `.collapse.show` shows the content\n- `.collapsing` is added when the transition starts, and removed when it finishes\n\nThese classes can be found in `_transitions.scss`.\n\n### Via data attributes\n\nJust add `data-bs-toggle=\"collapse\"` and a `data-bs-target` to the element to automatically assign control of one or more collapsible elements. The `data-bs-target` attribute accepts a CSS selector to apply the collapse to. Be sure to add the class `collapse` to the collapsible element. If you'd like it to default open, add the additional class `show`.\n\nTo add accordion-like group management to a collapsible area, add the data attribute `data-bs-parent=\"#selector\"`. Refer to the [accordion page]([[docsref:/components/accordion]]) for more information.\n\n### Via JavaScript\n\nEnable manually with:\n\n```js\nconst collapseElementList = document.querySelectorAll('.collapse')\nconst collapseList = [...collapseElementList].map(collapseEl => new bootstrap.Collapse(collapseEl))\n```\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n`parent` | selector, DOM element | `null` | If parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown. (similar to traditional accordion behavior - this is dependent on the `card` class). The attribute has to be set on the target collapsible area. |\n`toggle` | boolean | `true` | Toggles the collapsible element on invocation. |\n\u003C/BsTable>\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\nActivates your content as a collapsible element. Accepts an optional options `object`.\n\nYou can create a collapse instance with the constructor, for example:\n\n```js\nconst bsCollapse = new bootstrap.Collapse('#myCollapse', {\n  toggle: false\n})\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's collapse. (Removes stored data on the DOM element) |\n| `getInstance` | Static method which allows you to get the collapse instance associated to a DOM element, you can use it like this: `bootstrap.Collapse.getInstance(element)`. |\n| `getOrCreateInstance` | Static method which returns a collapse instance associated to a DOM element or create a new one in case it wasn't initialized. You can use it like this: `bootstrap.Collapse.getOrCreateInstance(element)`. |\n| `hide` | Hides a collapsible element. **Returns to the caller before the collapsible element has actually been hidden** (e.g., before the `hidden.bs.collapse` event occurs). |\n| `show` | Shows a collapsible element. **Returns to the caller before the collapsible element has actually been shown** (e.g., before the `shown.bs.collapse` event occurs). |\n| `toggle` | Toggles a collapsible element to shown or hidden. **Returns to the caller before the collapsible element has actually been shown or hidden** (i.e. before the `shown.bs.collapse` or `hidden.bs.collapse` event occurs). |\n\u003C/BsTable>\n\n### Events\n\nBootstrap's collapse class exposes a few events for hooking into collapse functionality.\n\n\u003CBsTable>\n| Event type | Description |\n| --- | --- |\n| `hide.bs.collapse` | This event is fired immediately when the `hide` method has been called. |\n| `hidden.bs.collapse` | This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete). |\n| `show.bs.collapse` | This event fires immediately when the `show` instance method is called. |\n| `shown.bs.collapse` | This event is fired when a collapse element has been made visible to the user (will wait for CSS transitions to complete). |\n\u003C/BsTable>\n\n```js\nconst myCollapsible = document.getElementById('myCollapsible')\nmyCollapsible.addEventListener('hidden.bs.collapse', event => {\n  // do something...\n})\n```","src/content/docs/components/collapse.mdx","68f66325b9dcdf7b","components/collapse.mdx","components/list-group",{"id":431,"data":433,"body":436,"filePath":437,"digest":438,"legacyId":439,"deferredRender":139},{"description":434,"title":435,"toc":139},"List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within.","List group","import { getData } from '@libs/data'\n\n## Basic example\n\nThe most basic list group is an unordered list with list items and the proper classes. Build upon it with the options that follow, or with your own CSS as needed.\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item\">An item\u003C/li>\n  \u003Cli class=\"list-group-item\">A second item\u003C/li>\n  \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003Cli class=\"list-group-item\">A fourth item\u003C/li>\n  \u003Cli class=\"list-group-item\">And a fifth one\u003C/li>\n\u003C/ul>`} />\n\n## Active items\n\nAdd `.active` to a `.list-group-item` to indicate the current active selection.\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item active\" aria-current=\"true\">An active item\u003C/li>\n  \u003Cli class=\"list-group-item\">A second item\u003C/li>\n  \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003Cli class=\"list-group-item\">A fourth item\u003C/li>\n  \u003Cli class=\"list-group-item\">And a fifth one\u003C/li>\n\u003C/ul>`} />\n\n## Disabled items\n\nAdd `.disabled` to a `.list-group-item` to make it _appear_ disabled. Note that some elements with `.disabled` will also require custom JavaScript to fully disable their click events (e.g., links).\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item disabled\" aria-disabled=\"true\">A disabled item\u003C/li>\n  \u003Cli class=\"list-group-item\">A second item\u003C/li>\n  \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003Cli class=\"list-group-item\">A fourth item\u003C/li>\n  \u003Cli class=\"list-group-item\">And a fifth one\u003C/li>\n\u003C/ul>`} />\n\n## Links and buttons\n\nUse `\u003Ca>`s or `\u003Cbutton>`s to create _actionable_ list group items with hover, disabled, and active states by adding `.list-group-item-action`. We separate these pseudo-classes to ensure list groups made of non-interactive elements (like `\u003Cli>`s or `\u003Cdiv>`s) don't provide a click or tap affordance.\n\nBe sure to **not use the standard `.btn` classes here**.\n\n\u003CExample code={`\u003Cdiv class=\"list-group\">\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action active\" aria-current=\"true\">\n    The current link item\n  \u003C/a>\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action\">A second link item\u003C/a>\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action\">A third link item\u003C/a>\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action\">A fourth link item\u003C/a>\n  \u003Ca class=\"list-group-item list-group-item-action disabled\" aria-disabled=\"true\">A disabled link item\u003C/a>\n\u003C/div>`} />\n\nWith `\u003Cbutton>`s, you can also make use of the `disabled` attribute instead of the `.disabled` class. Sadly, `\u003Ca>`s don't support the disabled attribute.\n\n\u003CExample code={`\u003Cdiv class=\"list-group\">\n  \u003Cbutton type=\"button\" class=\"list-group-item list-group-item-action active\" aria-current=\"true\">\n    The current button\n  \u003C/button>\n  \u003Cbutton type=\"button\" class=\"list-group-item list-group-item-action\">A second button item\u003C/button>\n  \u003Cbutton type=\"button\" class=\"list-group-item list-group-item-action\">A third button item\u003C/button>\n  \u003Cbutton type=\"button\" class=\"list-group-item list-group-item-action\">A fourth button item\u003C/button>\n  \u003Cbutton type=\"button\" class=\"list-group-item list-group-item-action\" disabled>A disabled button item\u003C/button>\n\u003C/div>`} />\n\n## Flush\n\nAdd `.list-group-flush` to remove some borders and rounded corners to render list group items edge-to-edge in a parent container (e.g., cards).\n\n\u003CExample code={`\u003Cul class=\"list-group list-group-flush\">\n  \u003Cli class=\"list-group-item\">An item\u003C/li>\n  \u003Cli class=\"list-group-item\">A second item\u003C/li>\n  \u003Cli class=\"list-group-item\">A third item\u003C/li>\n  \u003Cli class=\"list-group-item\">A fourth item\u003C/li>\n  \u003Cli class=\"list-group-item\">And a fifth one\u003C/li>\n\u003C/ul>`} />\n\n## Numbered\n\nAdd the `.list-group-numbered` modifier class (and optionally use an `\u003Col>` element) to opt into numbered list group items. Numbers are generated via CSS (as opposed to a `\u003Col>`s default browser styling) for better placement inside list group items and to allow for better customization.\n\nNumbers are generated by `counter-reset` on the `\u003Col>`, and then styled and placed with a `::before` pseudo-element on the `\u003Cli>` with `counter-increment` and `content`.\n\n\u003CExample code={`\u003Col class=\"list-group list-group-numbered\">\n  \u003Cli class=\"list-group-item\">A list item\u003C/li>\n  \u003Cli class=\"list-group-item\">A list item\u003C/li>\n  \u003Cli class=\"list-group-item\">A list item\u003C/li>\n\u003C/ol>`} />\n\nThese work great with custom content as well.\n\n\u003CExample code={`\u003Col class=\"list-group list-group-numbered\">\n  \u003Cli class=\"list-group-item d-flex justify-content-between align-items-start\">\n    \u003Cdiv class=\"ms-2 me-auto\">\n      \u003Cdiv class=\"fw-bold\">Subheading\u003C/div>\n      Content for list item\n    \u003C/div>\n    \u003Cspan class=\"badge text-bg-primary rounded-pill\">14\u003C/span>\n  \u003C/li>\n  \u003Cli class=\"list-group-item d-flex justify-content-between align-items-start\">\n    \u003Cdiv class=\"ms-2 me-auto\">\n      \u003Cdiv class=\"fw-bold\">Subheading\u003C/div>\n      Content for list item\n    \u003C/div>\n    \u003Cspan class=\"badge text-bg-primary rounded-pill\">14\u003C/span>\n  \u003C/li>\n  \u003Cli class=\"list-group-item d-flex justify-content-between align-items-start\">\n    \u003Cdiv class=\"ms-2 me-auto\">\n      \u003Cdiv class=\"fw-bold\">Subheading\u003C/div>\n      Content for list item\n    \u003C/div>\n    \u003Cspan class=\"badge text-bg-primary rounded-pill\">14\u003C/span>\n  \u003C/li>\n\u003C/ol>`} />\n\n## Horizontal\n\nAdd `.list-group-horizontal` to change the layout of list group items from vertical to horizontal across all breakpoints. Alternatively, choose a responsive variant `.list-group-horizontal-{sm|md|lg|xl|xxl}` to make a list group horizontal starting at that breakpoint's `min-width`. Currently **horizontal list groups cannot be combined with flush list groups.**\n\n**ProTip:** Want equal-width list group items when horizontal? Add `.flex-fill` to each list group item.\n\n\u003CExample code={getData('breakpoints').map((breakpoint) => `\u003Cul class=\"list-group list-group-horizontal${breakpoint.abbr}\">\n  \u003Cli class=\"list-group-item\">An item\u003C/li>\n  \u003Cli class=\"list-group-item\">A second item\u003C/li>\n  \u003Cli class=\"list-group-item\">A third item\u003C/li>\n\u003C/ul>`)} />\n\n## Variants\n\n\u003CCallout>\n**Heads up!** As of v5.3.0, the `list-group-item-variant()` Sass mixin is deprecated. List group item variants now have their CSS variables overridden in [a Sass loop](#sass-loops).\n\u003C/Callout>\n\nUse contextual classes to style list items with a stateful background and color.\n\n\u003CExample code={[\n  `\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item\">A simple default list group item\u003C/li>\n  `,\n  ...getData('theme-colors').map((themeColor) => `  \u003Cli class=\"list-group-item list-group-item-${themeColor.name}\">A simple ${themeColor.name} list group item\u003C/li>`),\n  `\u003C/ul>`\n]} />\n\n### For links and buttons\n\nContextual classes also work with `.list-group-item-action` for `\u003Ca>` and `\u003Cbutton>` elements. Note the addition of the hover styles here not present in the previous example. Also supported is the `.active` state; apply it to indicate an active selection on a contextual list group item.\n\n\u003CExample code={[\n  `\u003Cdiv class=\"list-group\">\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action\">A simple default list group item\u003C/a>\n  `,\n  ...getData('theme-colors').map((themeColor) => `  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action list-group-item-${themeColor.name}\">A simple ${themeColor.name} list group item\u003C/a>`),\n  `\u003C/div>`\n]} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## With badges\n\nAdd badges to any list group item to show unread counts, activity, and more with the help of some [utilities]([[docsref:/utilities/flex]]).\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item d-flex justify-content-between align-items-center\">\n    A list item\n    \u003Cspan class=\"badge text-bg-primary rounded-pill\">14\u003C/span>\n  \u003C/li>\n  \u003Cli class=\"list-group-item d-flex justify-content-between align-items-center\">\n    A second list item\n    \u003Cspan class=\"badge text-bg-primary rounded-pill\">2\u003C/span>\n  \u003C/li>\n  \u003Cli class=\"list-group-item d-flex justify-content-between align-items-center\">\n    A third list item\n    \u003Cspan class=\"badge text-bg-primary rounded-pill\">1\u003C/span>\n  \u003C/li>\n\u003C/ul>`} />\n\n## Custom content\n\nAdd nearly any HTML within, even for linked list groups like the one below, with the help of [flexbox utilities]([[docsref:/utilities/flex]]).\n\n\u003CExample code={`\u003Cdiv class=\"list-group\">\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action active\" aria-current=\"true\">\n    \u003Cdiv class=\"d-flex w-100 justify-content-between\">\n      \u003Ch5 class=\"mb-1\">List group item heading\u003C/h5>\n      \u003Csmall>3 days ago\u003C/small>\n    \u003C/div>\n    \u003Cp class=\"mb-1\">Some placeholder content in a paragraph.\u003C/p>\n    \u003Csmall>And some small print.\u003C/small>\n  \u003C/a>\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action\">\n    \u003Cdiv class=\"d-flex w-100 justify-content-between\">\n      \u003Ch5 class=\"mb-1\">List group item heading\u003C/h5>\n      \u003Csmall class=\"text-body-secondary\">3 days ago\u003C/small>\n    \u003C/div>\n    \u003Cp class=\"mb-1\">Some placeholder content in a paragraph.\u003C/p>\n    \u003Csmall class=\"text-body-secondary\">And some muted small print.\u003C/small>\n  \u003C/a>\n  \u003Ca href=\"#\" class=\"list-group-item list-group-item-action\">\n    \u003Cdiv class=\"d-flex w-100 justify-content-between\">\n      \u003Ch5 class=\"mb-1\">List group item heading\u003C/h5>\n      \u003Csmall class=\"text-body-secondary\">3 days ago\u003C/small>\n    \u003C/div>\n    \u003Cp class=\"mb-1\">Some placeholder content in a paragraph.\u003C/p>\n    \u003Csmall class=\"text-body-secondary\">And some muted small print.\u003C/small>\n  \u003C/a>\n\u003C/div>`} />\n\n## Checkboxes and radios\n\nPlace Bootstrap's checkboxes and radios within list group items and customize as needed. You can use them without `\u003Clabel>`s, but please remember to include an `aria-label` attribute and value for accessibility.\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"checkbox\" value=\"\" id=\"firstCheckbox\">\n    \u003Clabel class=\"form-check-label\" for=\"firstCheckbox\">First checkbox\u003C/label>\n  \u003C/li>\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"checkbox\" value=\"\" id=\"secondCheckbox\">\n    \u003Clabel class=\"form-check-label\" for=\"secondCheckbox\">Second checkbox\u003C/label>\n  \u003C/li>\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"checkbox\" value=\"\" id=\"thirdCheckbox\">\n    \u003Clabel class=\"form-check-label\" for=\"thirdCheckbox\">Third checkbox\u003C/label>\n  \u003C/li>\n\u003C/ul>`} />\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value=\"\" id=\"firstRadio\" checked>\n    \u003Clabel class=\"form-check-label\" for=\"firstRadio\">First radio\u003C/label>\n  \u003C/li>\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value=\"\" id=\"secondRadio\">\n    \u003Clabel class=\"form-check-label\" for=\"secondRadio\">Second radio\u003C/label>\n  \u003C/li>\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value=\"\" id=\"thirdRadio\">\n    \u003Clabel class=\"form-check-label\" for=\"thirdRadio\">Third radio\u003C/label>\n  \u003C/li>\n\u003C/ul>`} />\n\nYou can use `.stretched-link` on `\u003Clabel>`s to make the whole list group item clickable.\n\n\u003CExample code={`\u003Cul class=\"list-group\">\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"checkbox\" value=\"\" id=\"firstCheckboxStretched\">\n    \u003Clabel class=\"form-check-label stretched-link\" for=\"firstCheckboxStretched\">First checkbox\u003C/label>\n  \u003C/li>\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"checkbox\" value=\"\" id=\"secondCheckboxStretched\">\n    \u003Clabel class=\"form-check-label stretched-link\" for=\"secondCheckboxStretched\">Second checkbox\u003C/label>\n  \u003C/li>\n  \u003Cli class=\"list-group-item\">\n    \u003Cinput class=\"form-check-input me-1\" type=\"checkbox\" value=\"\" id=\"thirdCheckboxStretched\">\n    \u003Clabel class=\"form-check-label stretched-link\" for=\"thirdCheckboxStretched\">Third checkbox\u003C/label>\n  \u003C/li>\n\u003C/ul>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, list groups now use local CSS variables on `.list-group` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"list-group-css-vars\" file=\"scss/_list-group.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"list-group-variables\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\n\u003CDeprecatedIn version=\"5.3.0\" />\n\n\u003CScssDocs name=\"list-group-mixin\" file=\"scss/mixins/_list-group.scss\" />\n\n### Sass loops\n\nLoop that generates the modifier classes with an overriding of CSS variables.\n\n\u003CScssDocs name=\"list-group-modifiers\" file=\"scss/_list-group.scss\" />\n\n## JavaScript behavior\n\nUse the tab JavaScript plugin—include it individually or through the compiled `bootstrap.js` file—to extend our list group to create tabbable panes of local content.\n\n\u003Cdiv class=\"bd-example\" role=\"tabpanel\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-4\">\n      \u003Cdiv class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n        \u003Ca class=\"list-group-item list-group-item-action active\" id=\"list-home-list\" data-bs-toggle=\"tab\" href=\"#list-home\" role=\"tab\" aria-controls=\"list-home\">Home\u003C/a>\n        \u003Ca class=\"list-group-item list-group-item-action\" id=\"list-profile-list\" data-bs-toggle=\"tab\" href=\"#list-profile\" role=\"tab\" aria-controls=\"list-profile\">Profile\u003C/a>\n        \u003Ca class=\"list-group-item list-group-item-action\" id=\"list-messages-list\" data-bs-toggle=\"tab\" href=\"#list-messages\" role=\"tab\" aria-controls=\"list-messages\">Messages\u003C/a>\n        \u003Ca class=\"list-group-item list-group-item-action\" id=\"list-settings-list\" data-bs-toggle=\"tab\" href=\"#list-settings\" role=\"tab\" aria-controls=\"list-settings\">Settings\u003C/a>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-8\">\n      \u003Cdiv class=\"tab-content\" id=\"nav-tabContent\">\n        \u003Cdiv class=\"tab-pane fade show active\" id=\"list-home\" role=\"tabpanel\" aria-labelledby=\"list-home-list\">\n          \u003Cp>Some placeholder content in a paragraph relating to \"Home\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.\u003C/p>\n        \u003C/div>\n        \u003Cdiv class=\"tab-pane fade\" id=\"list-profile\" role=\"tabpanel\" aria-labelledby=\"list-profile-list\">\n          \u003Cp>Some placeholder content in a paragraph relating to \"Profile\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.\u003C/p>\n        \u003C/div>\n        \u003Cdiv class=\"tab-pane fade\" id=\"list-messages\" role=\"tabpanel\" aria-labelledby=\"list-messages-list\">\n          \u003Cp>Some placeholder content in a paragraph relating to \"Messages\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.\u003C/p>\n        \u003C/div>\n        \u003Cdiv class=\"tab-pane fade\" id=\"list-settings\" role=\"tabpanel\" aria-labelledby=\"list-settings-list\">\n          \u003Cp>Some placeholder content in a paragraph relating to \"Settings\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.\u003C/p>\n        \u003C/div>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col-4\">\n    \u003Cdiv class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n      \u003Ca class=\"list-group-item list-group-item-action active\" id=\"list-home-list\" data-bs-toggle=\"list\" href=\"#list-home\" role=\"tab\" aria-controls=\"list-home\">Home\u003C/a>\n      \u003Ca class=\"list-group-item list-group-item-action\" id=\"list-profile-list\" data-bs-toggle=\"list\" href=\"#list-profile\" role=\"tab\" aria-controls=\"list-profile\">Profile\u003C/a>\n      \u003Ca class=\"list-group-item list-group-item-action\" id=\"list-messages-list\" data-bs-toggle=\"list\" href=\"#list-messages\" role=\"tab\" aria-controls=\"list-messages\">Messages\u003C/a>\n      \u003Ca class=\"list-group-item list-group-item-action\" id=\"list-settings-list\" data-bs-toggle=\"list\" href=\"#list-settings\" role=\"tab\" aria-controls=\"list-settings\">Settings\u003C/a>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-8\">\n    \u003Cdiv class=\"tab-content\" id=\"nav-tabContent\">\n      \u003Cdiv class=\"tab-pane fade show active\" id=\"list-home\" role=\"tabpanel\" aria-labelledby=\"list-home-list\">...\u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"list-profile\" role=\"tabpanel\" aria-labelledby=\"list-profile-list\">...\u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"list-messages\" role=\"tabpanel\" aria-labelledby=\"list-messages-list\">...\u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"list-settings\" role=\"tabpanel\" aria-labelledby=\"list-settings-list\">...\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Using data attributes\n\nYou can activate a list group navigation without writing any JavaScript by simply specifying `data-bs-toggle=\"list\"` or on an element. Use these data attributes on `.list-group-item`.\n\n```html\n\u003Cdiv role=\"tabpanel\">\n  \u003C!-- List group -->\n  \u003Cdiv class=\"list-group\" id=\"myList\" role=\"tablist\">\n    \u003Ca class=\"list-group-item list-group-item-action active\" data-bs-toggle=\"list\" href=\"#home\" role=\"tab\">Home\u003C/a>\n    \u003Ca class=\"list-group-item list-group-item-action\" data-bs-toggle=\"list\" href=\"#profile\" role=\"tab\">Profile\u003C/a>\n    \u003Ca class=\"list-group-item list-group-item-action\" data-bs-toggle=\"list\" href=\"#messages\" role=\"tab\">Messages\u003C/a>\n    \u003Ca class=\"list-group-item list-group-item-action\" data-bs-toggle=\"list\" href=\"#settings\" role=\"tab\">Settings\u003C/a>\n  \u003C/div>\n\n  \u003C!-- Tab panes -->\n  \u003Cdiv class=\"tab-content\">\n    \u003Cdiv class=\"tab-pane active\" id=\"home\" role=\"tabpanel\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane\" id=\"profile\" role=\"tabpanel\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane\" id=\"messages\" role=\"tabpanel\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane\" id=\"settings\" role=\"tabpanel\">...\u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Via JavaScript\n\nEnable tabbable list item via JavaScript (each list item needs to be activated individually):\n\n```js\nconst triggerTabList = document.querySelectorAll('#myTab a')\ntriggerTabList.forEach(triggerEl => {\n  const tabTrigger = new bootstrap.Tab(triggerEl)\n\n  triggerEl.addEventListener('click', event => {\n    event.preventDefault()\n    tabTrigger.show()\n  })\n})\n```\n\nYou can activate individual list item in several ways:\n\n```js\nconst triggerEl = document.querySelector('#myTab a[href=\"#profile\"]')\nbootstrap.Tab.getInstance(triggerEl).show() // Select tab by name\n\nconst triggerFirstTabEl = document.querySelector('#myTab li:first-child a')\nbootstrap.Tab.getInstance(triggerFirstTabEl).show() // Select first tab\n```\n\n### Fade effect\n\nTo make tabs panel fade in, add `.fade` to each `.tab-pane`. The first tab pane must also have `.show` to make the initial content visible.\n\n```html\n\u003Cdiv class=\"tab-content\">\n  \u003Cdiv class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"messages\" role=\"tabpanel\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"settings\" role=\"tabpanel\">...\u003C/div>\n\u003C/div>\n```\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\nActivates your content as a tab element.\n\nYou can create a tab instance with the constructor, for example:\n\n```js\nconst bsTab = new bootstrap.Tab('#myTab')\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's tab. |\n| `getInstance` | Static method which allows you to get the tab instance associated with a DOM element, you can use it like this: `bootstrap.Tab.getInstance(element)`. |\n| `getOrCreateInstance` | Static method which returns a tab instance associated to a DOM element or create a new one in case it wasn't initialized. You can use it like this: `bootstrap.Tab.getOrCreateInstance(element)`. |\n| `show` | Selects the given tab and shows its associated pane. Any other tab that was previously selected becomes unselected and its associated pane is hidden. **Returns to the caller before the tab pane has actually been shown** (i.e. before the `shown.bs.tab` event occurs). |\n\u003C/BsTable>\n\n### Events\n\nWhen showing a new tab, the events fire in the following order:\n\n1. `hide.bs.tab` (on the current active tab)\n2. `show.bs.tab` (on the to-be-shown tab)\n3. `hidden.bs.tab` (on the previous active tab, the same one as for the `hide.bs.tab` event)\n4. `shown.bs.tab` (on the newly-active just-shown tab, the same one as for the `show.bs.tab` event)\n\nIf no tab was already active, then the `hide.bs.tab` and `hidden.bs.tab` events will not be fired.\n\n\u003CBsTable>\n| Event type | Description |\n| --- | --- |\n| `hide.bs.tab` | This event fires when a new tab is to be shown (and thus the previous active tab is to be hidden). Use `event.target` and `event.relatedTarget` to target the current active tab and the new soon-to-be-active tab, respectively. |\n| `hidden.bs.tab` | This event fires after a new tab is shown (and thus the previous active tab is hidden). Use `event.target` and `event.relatedTarget` to target the previous active tab and the new active tab, respectively. |\n| `show.bs.tab` | This event fires on tab show, but before the new tab has been shown. Use `event.target` and `event.relatedTarget` to target the active tab and the previous active tab (if available) respectively. |\n| `shown.bs.tab` | This event fires on tab show after a tab has been shown. Use `event.target` and `event.relatedTarget` to target the active tab and the previous active tab (if available) respectively. |\n\u003C/BsTable>\n\n```js\nconst tabElms = document.querySelectorAll('a[data-bs-toggle=\"list\"]')\ntabElms.forEach(tabElm => {\n  tabElm.addEventListener('shown.bs.tab', event => {\n    event.target // newly activated tab\n    event.relatedTarget // previous active tab\n  })\n})\n```","src/content/docs/components/list-group.mdx","d3920cbcb7808f21","components/list-group.mdx","components/modal",{"id":440,"data":442,"body":445,"filePath":446,"digest":447,"legacyId":448,"deferredRender":139},{"description":443,"title":444,"toc":139},"Use Bootstrap's JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.","Modal","## How it works\n\nBefore getting started with Bootstrap's modal component, be sure to read the following as our menu options have recently changed.\n\n- Modals are built with HTML, CSS, and JavaScript. They're positioned over everything else in the document and remove scroll from the `\u003Cbody>` so that modal content scrolls instead.\n- Clicking on the modal \"backdrop\" will automatically close the modal.\n- Bootstrap only supports one modal window at a time. Nested modals aren't supported as we believe them to be poor user experiences.\n- Modals use `position: fixed`, which can sometimes be a bit particular about its rendering. Whenever possible, place your modal HTML in a top-level position to avoid potential interference from other elements. You'll likely run into issues when nesting a `.modal` within another fixed element.\n- Once again, due to `position: fixed`, there are some caveats with using modals on mobile devices. [See our browser support docs]([[docsref:/getting-started/browsers-devices#modals-and-dropdowns-on-mobile]]) for details.\n- Due to how HTML5 defines its semantics, [the `autofocus` HTML attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-autofocus) has no effect in Bootstrap modals. To achieve the same effect, use some custom JavaScript:\n\n```js\nconst myModal = document.getElementById('myModal')\nconst myInput = document.getElementById('myInput')\n\nmyModal.addEventListener('shown.bs.modal', () => {\n  myInput.focus()\n})\n```\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\nKeep reading for demos and usage guidelines.\n\n## Examples\n\n### Modal components\n\nBelow is a _static_ modal example (meaning its `position` and `display` have been overridden). Included are the modal header, modal body (required for `padding`), and modal footer (optional). We ask that you include modal headers with dismiss actions whenever possible, or provide another explicit dismiss action.\n\n\u003Cdiv class=\"bd-example bg-body-tertiary\">\n  \u003Cdiv class=\"modal position-static d-block\" tabindex=\"-1\">\n    \u003Cdiv class=\"modal-dialog\">\n      \u003Cdiv class=\"modal-content\">\n        \u003Cdiv class=\"modal-header\">\n          \u003Ch5 class=\"modal-title\">Modal title\u003C/h5>\n          \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n        \u003C/div>\n        \u003Cdiv class=\"modal-body\">\n          \u003Cp>Modal body text goes here.\u003C/p>\n        \u003C/div>\n        \u003Cdiv class=\"modal-footer\">\n          \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n          \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n        \u003C/div>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"modal\" tabindex=\"-1\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch5 class=\"modal-title\">Modal title\u003C/h5>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cp>Modal body text goes here.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n\u003CCallout>\nIn the above static example, we use `\u003Ch5>`, to avoid issues with the heading hierarchy in the documentation page. Structurally, however, a modal dialog represents its own separate document/context, so the `.modal-title` should ideally be an `\u003Ch1>`. If necessary, you can use the [font size utilities]([[docsref:/utilities/text#font-size]]) to control the heading's appearance. All the following live examples use this approach.\n\u003C/Callout>\n\n### Live demo\n\nToggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalLive\" tabindex=\"-1\" aria-labelledby=\"exampleModalLiveLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalLiveLabel\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cp>Woo-hoo, you're reading this text in a modal!\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalLive\">\n    Launch demo modal\n  \u003C/button>\n\u003C/div>\n\n```html\n\u003C!-- Button trigger modal -->\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n  Launch demo modal\n\u003C/button>\n\n\u003C!-- Modal -->\n\u003Cdiv class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Static backdrop\n\nWhen backdrop is set to static, the modal will not close when clicking outside of it. Click the button below to try it.\n\n\u003Cdiv class=\"modal fade\" id=\"staticBackdropLive\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLiveLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"staticBackdropLiveLabel\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cp>I will not close if you click outside of me. Don't even try to press escape key.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Understood\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdropLive\">\n    Launch static backdrop modal\n  \u003C/button>\n\u003C/div>\n\n```html\n\u003C!-- Button trigger modal -->\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\n  Launch static backdrop modal\n\u003C/button>\n\n\u003C!-- Modal -->\n\u003Cdiv class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Understood\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Scrolling long content\n\nWhen modals become too long for the user's viewport or device, they scroll independent of the page itself. Try the demo below to see what we mean.\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalLong\" tabindex=\"-1\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalLongTitle\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\" style=\"min-height: 100vh\">\n        \u003Cp>This is some placeholder content to show the scrolling behavior for modals. Instead of repeating the text in the modal, we use an inline style to set a minimum height, thereby extending the length of the overall modal and demonstrating the overflow scrolling. When content becomes longer than the height of the viewport, scrolling will move the modal as needed.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalLong\">\n    Launch demo modal\n  \u003C/button>\n\u003C/div>\n\nYou can also create a scrollable modal that allows scrolling the modal body by adding `.modal-dialog-scrollable` to `.modal-dialog`.\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalScrollable\" tabindex=\"-1\" aria-labelledby=\"exampleModalScrollableTitle\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-dialog-scrollable\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalScrollableTitle\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cp>This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal.\u003C/p>\n        \u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\n        \u003Cp>This content should appear at the bottom after you scroll.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalScrollable\">\n    Launch demo modal\n  \u003C/button>\n\u003C/div>\n\n```html\n\u003C!-- Scrollable modal -->\n\u003Cdiv class=\"modal-dialog modal-dialog-scrollable\">\n  ...\n\u003C/div>\n```\n\n### Vertically centered\n\nAdd `.modal-dialog-centered` to `.modal-dialog` to vertically center the modal.\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-dialog-centered\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalCenterTitle\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cp>This is a vertically centered modal.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalCenteredScrollable\" tabindex=\"-1\" aria-labelledby=\"exampleModalCenteredScrollableTitle\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalCenteredScrollableTitle\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cp>This is some placeholder content to show a vertically centered modal. We've added some extra copy here to show how vertically centering the modal works when combined with scrollable modals. We also use some repeated line breaks to quickly extend the height of the content, thereby triggering the scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal.\u003C/p>\n        \u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\u003Cbr/>\n        \u003Cp>Just like that.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalCenter\">\n    Vertically centered modal\n  \u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalCenteredScrollable\">\n    Vertically centered scrollable modal\n  \u003C/button>\n\u003C/div>\n\n```html\n\u003C!-- Vertically centered modal -->\n\u003Cdiv class=\"modal-dialog modal-dialog-centered\">\n  ...\n\u003C/div>\n\n\u003C!-- Vertically centered scrollable modal -->\n\u003Cdiv class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n  ...\n\u003C/div>\n```\n\n### Tooltips and popovers\n\n[Tooltips]([[docsref:/components/tooltips]]) and [popovers]([[docsref:/components/popovers]]) can be placed within modals as needed. When modals are closed, any tooltips and popovers within are also automatically dismissed.\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalPopovers\" tabindex=\"-1\" aria-labelledby=\"exampleModalPopoversLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalPopoversLabel\">Modal title\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Ch2 class=\"fs-5\">Popover in a modal\u003C/h2>\n        \u003Cp>This \u003Cbutton class=\"btn btn-secondary\" data-bs-toggle=\"popover\" title=\"Popover title\" data-bs-content=\"Popover body content is set in this attribute.\" data-bs-container=\"#exampleModalPopovers\">button\u003C/button> triggers a popover on click.\u003C/p>\n        \u003Chr/>\n        \u003Ch2 class=\"fs-5\">Tooltips in a modal\u003C/h2>\n        \u003Cp>\u003Ca href=\"#\" data-bs-toggle=\"tooltip\" title=\"Tooltip\" data-bs-container=\"#exampleModalPopovers\">This link\u003C/a> and \u003Ca href=\"#\" data-bs-toggle=\"tooltip\" title=\"Tooltip\" data-bs-container=\"#exampleModalPopovers\">that link\u003C/a> have tooltips on hover.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalPopovers\">\n    Launch demo modal\n  \u003C/button>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"modal-body\">\n  \u003Ch2 class=\"fs-5\">Popover in a modal\u003C/h2>\n  \u003Cp>This \u003Cbutton class=\"btn btn-secondary\" data-bs-toggle=\"popover\" title=\"Popover title\" data-bs-content=\"Popover body content is set in this attribute.\">button\u003C/button> triggers a popover on click.\u003C/p>\n  \u003Chr/>\n  \u003Ch2 class=\"fs-5\">Tooltips in a modal\u003C/h2>\n  \u003Cp>\u003Ca href=\"#\" data-bs-toggle=\"tooltip\" title=\"Tooltip\">This link\u003C/a> and \u003Ca href=\"#\" data-bs-toggle=\"tooltip\" title=\"Tooltip\">that link\u003C/a> have tooltips on hover.\u003C/p>\n\u003C/div>\n```\n\n### Using the grid\n\nUtilize the Bootstrap grid system within a modal by nesting `.container-fluid` within the `.modal-body`. Then, use the normal grid system classes as you would anywhere else.\n\n\u003Cdiv class=\"modal fade\" id=\"gridSystemModal\" tabindex=\"-1\" aria-labelledby=\"gridModalLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"gridModalLabel\">Grids in modals\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cdiv class=\"container-fluid bd-example-row\">\n          \u003Cdiv class=\"row\">\n            \u003Cdiv class=\"col-md-4\">.col-md-4\u003C/div>\n            \u003Cdiv class=\"col-md-4 ms-auto\">.col-md-4 .ms-auto\u003C/div>\n          \u003C/div>\n          \u003Cdiv class=\"row\">\n            \u003Cdiv class=\"col-md-3 ms-auto\">.col-md-3 .ms-auto\u003C/div>\n            \u003Cdiv class=\"col-md-2 ms-auto\">.col-md-2 .ms-auto\u003C/div>\n          \u003C/div>\n          \u003Cdiv class=\"row\">\n            \u003Cdiv class=\"col-md-6 ms-auto\">.col-md-6 .ms-auto\u003C/div>\n          \u003C/div>\n          \u003Cdiv class=\"row\">\n            \u003Cdiv class=\"col-sm-9\">\n              Level 1: .col-sm-9\n              \u003Cdiv class=\"row\">\n                \u003Cdiv class=\"col-8 col-sm-6\">\n                  Level 2: .col-8 .col-sm-6\n                \u003C/div>\n                \u003Cdiv class=\"col-4 col-sm-6\">\n                  Level 2: .col-4 .col-sm-6\n                \u003C/div>\n              \u003C/div>\n            \u003C/div>\n          \u003C/div>\n        \u003C/div>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Save changes\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#gridSystemModal\">\n  Launch demo modal\n\u003C/button>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"modal-body\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cdiv class=\"row\">\n      \u003Cdiv class=\"col-md-4\">.col-md-4\u003C/div>\n      \u003Cdiv class=\"col-md-4 ms-auto\">.col-md-4 .ms-auto\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"row\">\n      \u003Cdiv class=\"col-md-3 ms-auto\">.col-md-3 .ms-auto\u003C/div>\n      \u003Cdiv class=\"col-md-2 ms-auto\">.col-md-2 .ms-auto\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"row\">\n      \u003Cdiv class=\"col-md-6 ms-auto\">.col-md-6 .ms-auto\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"row\">\n      \u003Cdiv class=\"col-sm-9\">\n        Level 1: .col-sm-9\n        \u003Cdiv class=\"row\">\n          \u003Cdiv class=\"col-8 col-sm-6\">\n            Level 2: .col-8 .col-sm-6\n          \u003C/div>\n          \u003Cdiv class=\"col-4 col-sm-6\">\n            Level 2: .col-4 .col-sm-6\n          \u003C/div>\n        \u003C/div>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Varying modal content\n\nHave a bunch of buttons that all trigger the same modal with slightly different contents? Use `event.relatedTarget` and [HTML `data-bs-*` attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes) to vary the contents of the modal depending on which button was clicked.\n\nBelow is a live demo followed by example HTML and JavaScript. For more information, [read the modal events docs](#events) for details on `relatedTarget`.\n\n\u003CExample addStackblitzJs code={`\u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@mdo\">Open modal for @mdo\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@fat\">Open modal for @fat\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@getbootstrap\">Open modal for @getbootstrap\u003C/button>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">New message\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        \u003Cform>\n          \u003Cdiv class=\"mb-3\">\n            \u003Clabel for=\"recipient-name\" class=\"col-form-label\">Recipient:\u003C/label>\n            \u003Cinput type=\"text\" class=\"form-control\" id=\"recipient-name\">\n          \u003C/div>\n          \u003Cdiv class=\"mb-3\">\n            \u003Clabel for=\"message-text\" class=\"col-form-label\">Message:\u003C/label>\n            \u003Ctextarea class=\"form-control\" id=\"message-text\">\u003C/textarea>\n          \u003C/div>\n        \u003C/form>\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n        \u003Cbutton type=\"button\" class=\"btn btn-primary\">Send message\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CJsDocs name=\"varying-modal-content\" file=\"site/src/assets/partials/snippets.js\" />\n\n### Toggle between modals\n\nToggle between multiple modals with some clever placement of the `data-bs-target` and `data-bs-toggle` attributes. For example, you could toggle a password reset modal from within an already open sign in modal. **Please note multiple modals cannot be open at the same time**—this method simply toggles between two separate modals.\n\n\u003CExample code={`\u003Cdiv class=\"modal fade\" id=\"exampleModalToggle\" aria-hidden=\"true\" aria-labelledby=\"exampleModalToggleLabel\" tabindex=\"-1\">\n  \u003Cdiv class=\"modal-dialog modal-dialog-centered\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalToggleLabel\">Modal 1\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        Show a second modal and hide this one with the button below.\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton class=\"btn btn-primary\" data-bs-target=\"#exampleModalToggle2\" data-bs-toggle=\"modal\">Open second modal\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"modal fade\" id=\"exampleModalToggle2\" aria-hidden=\"true\" aria-labelledby=\"exampleModalToggleLabel2\" tabindex=\"-1\">\n  \u003Cdiv class=\"modal-dialog modal-dialog-centered\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-5\" id=\"exampleModalToggleLabel2\">Modal 2\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        Hide this modal and show the first with the button below.\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton class=\"btn btn-primary\" data-bs-target=\"#exampleModalToggle\" data-bs-toggle=\"modal\">Back to first\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\u003Cbutton class=\"btn btn-primary\" data-bs-target=\"#exampleModalToggle\" data-bs-toggle=\"modal\">Open first modal\u003C/button>`} />\n\n### Change animation\n\nThe `$modal-fade-transform` variable determines the transform state of `.modal-dialog` before the modal fade-in animation, the `$modal-show-transform` variable determines the transform of `.modal-dialog` at the end of the modal fade-in animation.\n\nIf you want for example a zoom-in animation, you can set `$modal-fade-transform: scale(.8)`.\n\n### Remove animation\n\nFor modals that simply appear rather than fade in to view, remove the `.fade` class from your modal markup.\n\n```html\n\u003Cdiv class=\"modal\" tabindex=\"-1\" aria-labelledby=\"...\" aria-hidden=\"true\">\n  ...\n\u003C/div>\n```\n\n### Dynamic heights\n\nIf the height of a modal changes while it is open, you should call `myModal.handleUpdate()` to readjust the modal's position in case a scrollbar appears.\n\n### Accessibility\n\nBe sure to add `aria-labelledby=\"...\"`, referencing the modal title, to `.modal`. Additionally, you may give a description of your modal dialog with `aria-describedby` on `.modal`. Note that you don't need to add `role=\"dialog\"` since we already add it via JavaScript.\n\n### Embedding YouTube videos\n\nEmbedding YouTube videos in modals requires additional JavaScript not in Bootstrap to automatically stop playback and more. [See this helpful Stack Overflow post](https://stackoverflow.com/questions/18622508/bootstrap-3-and-youtube-in-modal) for more information.\n\n## Optional sizes\n\nModals have three optional sizes, available via modifier classes to be placed on a `.modal-dialog`. These sizes kick in at certain breakpoints to avoid horizontal scrollbars on narrower viewports.\n\n\u003CBsTable>\n| Size | Class | Modal max-width\n| --- | --- | --- |\n| Small | `.modal-sm` | `300px` |\n| Default | \u003Cspan class=\"text-body-secondary\">None\u003C/span> | `500px` |\n| Large | `.modal-lg` | `800px` |\n| Extra large | `.modal-xl` | `1140px` |\n\u003C/BsTable>\n\nOur default modal without modifier class constitutes the \"medium\" size modal.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalXl\">Extra large modal\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalLg\">Large modal\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalSm\">Small modal\u003C/button>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"modal-dialog modal-xl\">...\u003C/div>\n\u003Cdiv class=\"modal-dialog modal-lg\">...\u003C/div>\n\u003Cdiv class=\"modal-dialog modal-sm\">...\u003C/div>\n```\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalXl\" tabindex=\"-1\" aria-labelledby=\"exampleModalXlLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-xl\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalXlLabel\">Extra large modal\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalLg\" tabindex=\"-1\" aria-labelledby=\"exampleModalLgLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-lg\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalLgLabel\">Large modal\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalSm\" tabindex=\"-1\" aria-labelledby=\"exampleModalSmLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-sm\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalSmLabel\">Small modal\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n## Fullscreen Modal\n\nAnother override is the option to pop up a modal that covers the user viewport, available via modifier classes that are placed on a `.modal-dialog`.\n\n\u003CBsTable>\n| Class | Availability |\n| --- | --- |\n| `.modal-fullscreen` | Always |\n| `.modal-fullscreen-sm-down` | `576px` |\n| `.modal-fullscreen-md-down` | `768px` |\n| `.modal-fullscreen-lg-down` | `992px` |\n| `.modal-fullscreen-xl-down` | `1200px` |\n| `.modal-fullscreen-xxl-down` | `1400px` |\n\u003C/BsTable>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalFullscreen\">Full screen\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalFullscreenSm\">Full screen below sm\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalFullscreenMd\">Full screen below md\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalFullscreenLg\">Full screen below lg\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalFullscreenXl\">Full screen below xl\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalFullscreenXxl\">Full screen below xxl\u003C/button>\n\u003C/div>\n\n```html\n\u003C!-- Full screen modal -->\n\u003Cdiv class=\"modal-dialog modal-fullscreen-sm-down\">\n  ...\n\u003C/div>\n```\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalFullscreen\" tabindex=\"-1\" aria-labelledby=\"exampleModalFullscreenLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-fullscreen\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalFullscreenLabel\">Full screen modal\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalFullscreenSm\" tabindex=\"-1\" aria-labelledby=\"exampleModalFullscreenSmLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-fullscreen-sm-down\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalFullscreenSmLabel\">Full screen below sm\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalFullscreenMd\" tabindex=\"-1\" aria-labelledby=\"exampleModalFullscreenMdLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-fullscreen-md-down\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalFullscreenMdLabel\">Full screen below md\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalFullscreenLg\" tabindex=\"-1\" aria-labelledby=\"exampleModalFullscreenLgLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-fullscreen-lg-down\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalFullscreenLgLabel\">Full screen below lg\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalFullscreenXl\" tabindex=\"-1\" aria-labelledby=\"exampleModalFullscreenXlLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-fullscreen-xl-down\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalFullscreenXlLabel\">Full screen below xl\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"modal fade\" id=\"exampleModalFullscreenXxl\" tabindex=\"-1\" aria-labelledby=\"exampleModalFullscreenXxlLabel\" aria-hidden=\"true\">\n  \u003Cdiv class=\"modal-dialog modal-fullscreen-xxl-down\">\n    \u003Cdiv class=\"modal-content\">\n      \u003Cdiv class=\"modal-header\">\n        \u003Ch1 class=\"modal-title fs-4\" id=\"exampleModalFullscreenXxlLabel\">Full screen below xxl\u003C/h1>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"modal-body\">\n        ...\n      \u003C/div>\n      \u003Cdiv class=\"modal-footer\">\n        \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close\u003C/button>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, modals now use local CSS variables on `.modal` and `.modal-backdrop` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"modal-css-vars\" file=\"scss/_modal.scss\" />\n\n\u003CScssDocs name=\"modal-backdrop-css-vars\" file=\"scss/_modal.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"modal-variables\" file=\"scss/_variables.scss\" />\n\n### Sass loops\n\n[Responsive fullscreen modals](#fullscreen-modal) are generated via the `$breakpoints` map and a loop in `scss/_modal.scss`.\n\n\u003CScssDocs name=\"modal-fullscreen-loop\" file=\"scss/_modal.scss\" />\n\n## Usage\n\nThe modal plugin toggles your hidden content on demand, via data attributes or JavaScript. It also overrides default scrolling behavior and generates a `.modal-backdrop` to provide a click area for dismissing shown modals when clicking outside the modal.\n\n### Via data attributes\n\n#### Toggle\n\nActivate a modal without writing JavaScript. Set `data-bs-toggle=\"modal\"` on a controller element, like a button, along with a `data-bs-target=\"#foo\"` or `href=\"#foo\"` to target a specific modal to toggle.\n\n```html\n\u003Cbutton type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\">Launch modal\u003C/button>\n```\n\n#### Dismiss\n\n\u003CJsDismiss name=\"modal\" />\n\n\u003CCallout type=\"warning\">\nWhile both ways to dismiss a modal are supported, keep in mind that dismissing from outside a modal does not match the [ARIA Authoring Practices Guide dialog (modal) pattern](https://www.w3.org/WAI/ARIA/apg/patterns/dialogmodal/). Do this at your own risk.\n\u003C/Callout>\n\n### Via JavaScript\n\nCreate a modal with a single line of JavaScript:\n\n```js\nconst myModal = new bootstrap.Modal(document.getElementById('myModal'), options)\n// or\nconst myModalAlternative = new bootstrap.Modal('#myModal', options)\n```\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `backdrop` | boolean, `'static'` | `true` | Includes a modal-backdrop element. Alternatively, specify `static` for a backdrop which doesn't close the modal when clicked. |\n| `focus` | boolean | `true` | Puts the focus on the modal when initialized. |\n| `keyboard` | boolean | `true` | Closes the modal when escape key is pressed. |\n\u003C/BsTable>\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\n#### Passing options\n\nActivates your content as a modal. Accepts an optional options `object`.\n\n```js\nconst myModal = new bootstrap.Modal('#myModal', {\n  keyboard: false\n})\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's modal. (Removes stored data on the DOM element) |\n| `getInstance` | _Static_ method which allows you to get the modal instance associated with a DOM element. |\n| `getOrCreateInstance` | _Static_ method which allows you to get the modal instance associated with a DOM element, or create a new one in case it wasn't initialized. |\n| `handleUpdate` | Manually readjust the modal's position if the height of a modal changes while it is open (i.e. in case a scrollbar appears). |\n| `hide` | Manually hides a modal. **Returns to the caller before the modal has actually been hidden** (i.e. before the `hidden.bs.modal` event occurs). |\n| `show` | Manually opens a modal. **Returns to the caller before the modal has actually been shown** (i.e. before the `shown.bs.modal` event occurs). Also, you can pass a DOM element as an argument that can be received in the modal events (as the `relatedTarget` property). (i.e. `const modalToggle = document.getElementById('toggleMyModal'); myModal.show(modalToggle)`. |\n| `toggle` | Manually toggles a modal. **Returns to the caller before the modal has actually been shown or hidden** (i.e. before the `shown.bs.modal` or `hidden.bs.modal` event occurs). |\n\u003C/BsTable>\n\n### Events\n\nBootstrap's modal class exposes a few events for hooking into modal functionality. All modal events are fired at the modal itself (i.e. at the `\u003Cdiv class=\"modal\">`).\n\n\u003CBsTable>\n| Event | Description |\n| --- | --- |\n| `hide.bs.modal` | This event is fired immediately when the `hide` instance method has been called. Can be prevented by calling `event.preventDefault()`. See [JavaScript events documentation]([[docsref:/getting-started/javascript#events]]) for more details on event prevention. |\n| `hidden.bs.modal` | This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete). |\n| `hidePrevented.bs.modal` | This event is fired when the modal is shown, its backdrop is `static` and a click outside of the modal is performed. The event is also fired when the escape key is pressed and the `keyboard` option is set to `false`. |\n| `show.bs.modal` | This event fires immediately when the `show` instance method is called. If caused by a click, the clicked element is available as the `relatedTarget` property of the event. |\n| `shown.bs.modal` | This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete). If caused by a click, the clicked element is available as the `relatedTarget` property of the event. |\n\u003C/BsTable>\n\n```js\nconst myModalEl = document.getElementById('myModal')\nmyModalEl.addEventListener('hidden.bs.modal', event => {\n  // do something...\n})\n```","src/content/docs/components/modal.mdx","df206e57d0aaba9c","components/modal.mdx","components/dropdowns",{"id":449,"data":451,"body":454,"filePath":455,"digest":456,"legacyId":457,"deferredRender":139},{"description":452,"title":453,"toc":139},"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin.","Dropdowns","## Overview\n\nDropdowns are toggleable, contextual overlays for displaying lists of links and more. They're made interactive with the included Bootstrap dropdown JavaScript plugin. They're toggled by clicking, not by hovering; this is [an intentional design decision](https://markdotto.com/blog/bootstrap-explained-dropdowns/).\n\nDropdowns are built on a third party library, [Popper](https://popper.js.org/docs/v2/), which provides dynamic positioning and viewport detection. Be sure to include [popper.min.js]([[config:cdn.popper]]) before Bootstrap's JavaScript or use `bootstrap.bundle.min.js` / `bootstrap.bundle.js` which contains Popper. Popper isn't used to position dropdowns in navbars though as dynamic positioning isn't required.\n\n## Accessibility\n\nThe [\u003Cabbr title=\"Web Accessibility Initiative\">WAI\u003C/abbr> \u003Cabbr title=\"Accessible Rich Internet Applications\">ARIA\u003C/abbr>](https://www.w3.org/TR/wai-aria/) standard defines an actual [`role=\"menu\"` widget](https://www.w3.org/TR/wai-aria/#menu), but this is specific to application-like menus which trigger actions or functions. \u003Cabbr title=\"Accessible Rich Internet Applications\">ARIA\u003C/abbr> menus can only contain menu items, checkbox menu items, radio button menu items, radio button groups, and sub-menus.\n\nBootstrap's dropdowns, on the other hand, are designed to be generic and applicable to a variety of situations and markup structures. For instance, it is possible to create dropdowns that contain additional inputs and form controls, such as search fields or login forms. For this reason, Bootstrap does not expect (nor automatically add) any of the `role` and `aria-` attributes required for true \u003Cabbr title=\"Accessible Rich Internet Applications\">ARIA\u003C/abbr> menus. Authors will have to include these more specific attributes themselves.\n\nHowever, Bootstrap does add built-in support for most standard keyboard menu interactions, such as the ability to move through individual `.dropdown-item` elements using the cursor keys and close the menu with the \u003Ckbd>Esc\u003C/kbd> key.\n\n## Examples\n\nWrap the dropdown's toggle (your button or link) and the dropdown menu within `.dropdown`, or another element that declares `position: relative;`. Ideally, you should use a `\u003Cbutton>` element as the dropdown trigger, but the plugin will work with `\u003Ca>` elements as well. The examples shown here use semantic `\u003Cul>` elements where appropriate, but custom markup is supported.\n\n### Single button\n\nAny single `.btn` can be turned into a dropdown toggle with some markup changes. Here's how you can put them to work with `\u003Cbutton>` elements:\n\n\u003CExample code={`\u003Cdiv class=\"dropdown\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown button\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\nWhile `\u003Cbutton>` is the recommended control for a dropdown toggle, there might be situations where you have to use an `\u003Ca>` element. If you do, we recommend adding a `role=\"button\"` attribute to appropriately convey control's purpose to assistive technologies such as screen readers.\n\n\u003CExample code={`\u003Cdiv class=\"dropdown\">\n  \u003Ca class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown link\n  \u003C/a>\n\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\nThe best part is you can do this with any button variant, too:\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Primary\u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Secondary\u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Success\u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-info dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Info\u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-warning dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Warning\u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-danger dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Danger\u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003C!-- Example single danger button -->\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-danger dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Danger\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n```\n\n### Split button\n\nSimilarly, create split button dropdowns with virtually the same markup as single button dropdowns, but with the addition of `.dropdown-toggle-split` for proper spacing around the dropdown caret.\n\nWe use this extra class to reduce the horizontal `padding` on either side of the caret by 25% and remove the `margin-left` that's added for regular button dropdowns. Those extra changes keep the caret centered in the split button and provide a more appropriately sized hit area next to the main button.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-primary\">Primary\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">Secondary\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-success\">Success\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-success dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-info\">Info\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-info dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-warning\">Warning\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-warning dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-danger\">Danger\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-danger dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003C!-- Example split danger button -->\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-danger\">Danger\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-danger dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n```\n\n## Sizing\n\nButton dropdowns work with buttons of all sizes, including default and split dropdown buttons.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton class=\"btn btn-secondary btn-lg dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Large button\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-lg btn-secondary\">Large split button\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003C!-- Large button groups (default and split) -->\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary btn-lg dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Large button\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    ...\n  \u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary btn-lg\" type=\"button\">\n    Large split button\n  \u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    ...\n  \u003C/ul>\n\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton class=\"btn btn-secondary btn-sm dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Small button\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-sm btn-secondary\">Small split button\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary btn-sm dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Small button\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    ...\n  \u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary btn-sm\" type=\"button\">\n    Small split button\n  \u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    ...\n  \u003C/ul>\n\u003C/div>\n```\n\n## Dark dropdowns\n\n\u003CDeprecatedIn version=\"5.3.0\" />\n\nOpt into darker dropdowns to match a dark navbar or custom style by adding `.dropdown-menu-dark` onto an existing `.dropdown-menu`. No changes are required to the dropdown items.\n\n\u003CCalloutDeprecatedDarkVariants component=\"dropdown-menu\" />\n\n\u003CExample code={`\u003Cdiv class=\"dropdown\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown button\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-dark\">\n    \u003Cli>\u003Ca class=\"dropdown-item active\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\nAnd putting it to use in a navbar:\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDarkDropdown\" aria-controls=\"navbarNavDarkDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\n      \u003Cul class=\"navbar-nav\">\n        \u003Cli class=\"nav-item dropdown\">\n          \u003Cbutton class=\"btn btn-dark dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Dropdown\n          \u003C/button>\n          \u003Cul class=\"dropdown-menu dropdown-menu-dark\">\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n          \u003C/ul>\n        \u003C/li>\n      \u003C/ul>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\n## Directions\n\n\u003CCallout>\n**Directions are flipped in RTL mode.** As such, `.dropstart` will appear on the right side.\n\u003C/Callout>\n\n### Centered\n\nMake the dropdown menu centered below the toggle with `.dropdown-center` on the parent element.\n\n\u003CExample code={`\u003Cdiv class=\"dropdown-center\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Centered dropdown\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action two\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action three\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n### Dropup\n\nTrigger dropdown menus above elements by adding `.dropup` to the parent element.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group dropup\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropup\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group dropup\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">\n      Split dropup\n    \u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003C!-- Default dropup button -->\n\u003Cdiv class=\"btn-group dropup\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropup\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003C!-- Dropdown menu links -->\n  \u003C/ul>\n\u003C/div>\n\n\u003C!-- Split dropup button -->\n\u003Cdiv class=\"btn-group dropup\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary\">\n    Split dropup\n  \u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003C!-- Dropdown menu links -->\n  \u003C/ul>\n\u003C/div>\n```\n\n### Dropup centered\n\nMake the dropup menu centered above the toggle with `.dropup-center` on the parent element.\n\n\u003CExample code={`\u003Cdiv class=\"dropup-center dropup\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Centered dropup\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action two\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action three\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n### Dropend\n\nTrigger dropdown menus at the right of the elements by adding `.dropend` to the parent element.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group dropend\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropend\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group dropend\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">\n      Split dropend\n    \u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropend\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003C!-- Default dropend button -->\n\u003Cdiv class=\"btn-group dropend\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropend\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003C!-- Dropdown menu links -->\n  \u003C/ul>\n\u003C/div>\n\n\u003C!-- Split dropend button -->\n\u003Cdiv class=\"btn-group dropend\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary\">\n    Split dropend\n  \u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropend\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003C!-- Dropdown menu links -->\n  \u003C/ul>\n\u003C/div>\n```\n\n### Dropstart\n\nTrigger dropdown menus at the left of the elements by adding `.dropstart` to the parent element.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"btn-group dropstart\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      Dropstart\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group dropstart\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropstart\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">\n      Split dropstart\n    \u003C/button>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003C!-- Default dropstart button -->\n\u003Cdiv class=\"btn-group dropstart\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropstart\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003C!-- Dropdown menu links -->\n  \u003C/ul>\n\u003C/div>\n\n\u003C!-- Split dropstart button -->\n\u003Cdiv class=\"btn-group dropstart\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropstart\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003C!-- Dropdown menu links -->\n  \u003C/ul>\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary\">\n    Split dropstart\n  \u003C/button>\n\u003C/div>\n```\n\n## Menu items\n\nYou can use `\u003Ca>` or `\u003Cbutton>` elements as dropdown items.\n\n\u003CExample code={`\u003Cdiv class=\"dropdown\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Another action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Something else here\u003C/button>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\nYou can also create non-interactive dropdown items with `.dropdown-item-text`. Feel free to style further with custom CSS or text utilities.\n\n\u003CExample code={`\u003Cul class=\"dropdown-menu\">\n  \u003Cli>\u003Cspan class=\"dropdown-item-text\">Dropdown item text\u003C/span>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n\u003C/ul>`} />\n\n### Active\n\nAdd `.active` to items in the dropdown to **style them as active**. To convey the active state to assistive technologies, use the `aria-current` attribute — using the `page` value for the current page, or `true` for the current item in a set.\n\n\u003CExample code={`\u003Cul class=\"dropdown-menu\">\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Regular link\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item active\" href=\"#\" aria-current=\"true\">Active link\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another link\u003C/a>\u003C/li>\n\u003C/ul>`} />\n\n### Disabled\n\nAdd `.disabled` to items in the dropdown to **style them as disabled**.\n\n\u003CExample code={`\u003Cul class=\"dropdown-menu\">\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Regular link\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item disabled\" aria-disabled=\"true\">Disabled link\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another link\u003C/a>\u003C/li>\n\u003C/ul>`} />\n\n## Menu alignment\n\nBy default, a dropdown menu is automatically positioned 100% from the top and along the left side of its parent. You can change this with the directional `.drop*` classes, but you can also control them with additional modifier classes.\n\nAdd `.dropdown-menu-end` to a `.dropdown-menu` to right align the dropdown menu. Directions are mirrored when using Bootstrap in RTL, meaning `.dropdown-menu-end` will appear on the left side.\n\n\u003CCallout>\n**Heads up!** Dropdowns are positioned thanks to Popper except when they are contained in a navbar.\n\u003C/Callout>\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Right-aligned menu example\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end\">\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Another action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Something else here\u003C/button>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n### Responsive alignment\n\nIf you want to use responsive alignment, disable dynamic positioning by adding the `data-bs-display=\"static\"` attribute and use the responsive variation classes.\n\nTo align **right** the dropdown menu with the given breakpoint or larger, add `.dropdown-menu{-sm|-md|-lg|-xl|-xxl}-end`.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\" aria-expanded=\"false\">\n    Left-aligned but right aligned when large screen\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-lg-end\">\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Another action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Something else here\u003C/button>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\nTo align **left** the dropdown menu with the given breakpoint or larger, add `.dropdown-menu-end` and `.dropdown-menu{-sm|-md|-lg|-xl|-xxl}-start`.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\" aria-expanded=\"false\">\n    Right-aligned but left aligned when large screen\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start\">\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Another action\u003C/button>\u003C/li>\n    \u003Cli>\u003Cbutton class=\"dropdown-item\" type=\"button\">Something else here\u003C/button>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\nNote that you don't need to add a `data-bs-display=\"static\"` attribute to dropdown buttons in navbars, since Popper isn't used in navbars.\n\n### Alignment options\n\nTaking most of the options shown above, here's a small kitchen sink demo of various dropdown alignment options in one place.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Right-aligned menu\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\" aria-expanded=\"false\">\n    Left-aligned, right-aligned lg\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-lg-end\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\" aria-expanded=\"false\">\n    Right-aligned, left-aligned lg\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group dropstart\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropstart\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group dropend\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropend\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group dropup\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropup\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n## Menu content\n\n### Headers\n\nAdd a header to label sections of actions in any dropdown menu.\n\n\u003CExample code={`\u003Cul class=\"dropdown-menu\">\n  \u003Cli>\u003Ch6 class=\"dropdown-header\">Dropdown header\u003C/h6>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n\u003C/ul>`} />\n\n### Dividers\n\nSeparate groups of related menu items with a divider.\n\n\u003CExample code={`\u003Cul class=\"dropdown-menu\">\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n  \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n  \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n\u003C/ul>`} />\n\n### Text\n\nPlace any freeform text within a dropdown menu with text and use [spacing utilities]([[docsref:/utilities/spacing]]). Note that you'll likely need additional sizing styles to constrain the menu width.\n\n\u003CExample code={`\u003Cdiv class=\"dropdown-menu p-4 text-body-secondary\" style=\"max-width: 200px;\">\n  \u003Cp>\n    Some example text that's free-flowing within the dropdown menu.\n  \u003C/p>\n  \u003Cp class=\"mb-0\">\n    And this is more example text.\n  \u003C/p>\n\u003C/div>`} />\n\n### Forms\n\nPut a form within a dropdown menu, or make it into a dropdown menu, and use [margin or padding utilities]([[docsref:/utilities/spacing]]) to give it the negative space you require.\n\n\u003CExample code={`\u003Cdiv class=\"dropdown-menu\">\n  \u003Cform class=\"px-4 py-3\">\n    \u003Cdiv class=\"mb-3\">\n      \u003Clabel for=\"exampleDropdownFormEmail1\" class=\"form-label\">Email address\u003C/label>\n      \u003Cinput type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail1\" placeholder=\"email@example.com\">\n    \u003C/div>\n    \u003Cdiv class=\"mb-3\">\n      \u003Clabel for=\"exampleDropdownFormPassword1\" class=\"form-label\">Password\u003C/label>\n      \u003Cinput type=\"password\" class=\"form-control\" id=\"exampleDropdownFormPassword1\" placeholder=\"Password\">\n    \u003C/div>\n    \u003Cdiv class=\"mb-3\">\n      \u003Cdiv class=\"form-check\">\n        \u003Cinput type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck\">\n        \u003Clabel class=\"form-check-label\" for=\"dropdownCheck\">\n          Remember me\n        \u003C/label>\n      \u003C/div>\n    \u003C/div>\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Sign in\u003C/button>\n  \u003C/form>\n  \u003Cdiv class=\"dropdown-divider\">\u003C/div>\n  \u003Ca class=\"dropdown-item\" href=\"#\">New around here? Sign up\u003C/a>\n  \u003Ca class=\"dropdown-item\" href=\"#\">Forgot password?\u003C/a>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"dropdown\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" data-bs-auto-close=\"outside\">\n    Dropdown form\n  \u003C/button>\n  \u003Cform class=\"dropdown-menu p-4\">\n    \u003Cdiv class=\"mb-3\">\n      \u003Clabel for=\"exampleDropdownFormEmail2\" class=\"form-label\">Email address\u003C/label>\n      \u003Cinput type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"email@example.com\">\n    \u003C/div>\n    \u003Cdiv class=\"mb-3\">\n      \u003Clabel for=\"exampleDropdownFormPassword2\" class=\"form-label\">Password\u003C/label>\n      \u003Cinput type=\"password\" class=\"form-control\" id=\"exampleDropdownFormPassword2\" placeholder=\"Password\">\n    \u003C/div>\n    \u003Cdiv class=\"mb-3\">\n      \u003Cdiv class=\"form-check\">\n        \u003Cinput type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck2\">\n        \u003Clabel class=\"form-check-label\" for=\"dropdownCheck2\">\n          Remember me\n        \u003C/label>\n      \u003C/div>\n    \u003C/div>\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Sign in\u003C/button>\n  \u003C/form>\n\u003C/div>`} />\n\n## Dropdown options\n\nUse `data-bs-offset` or `data-bs-reference` to change the location of the dropdown.\n\n\u003CExample code={`\u003Cdiv class=\"d-flex\">\n  \u003Cdiv class=\"dropdown me-1\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" data-bs-offset=\"10,20\">\n      Offset\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n  \u003Cdiv class=\"btn-group\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\">Reference\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" data-bs-reference=\"parent\">\n      \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n    \u003C/button>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/div>`} />\n\n### Auto close behavior\n\nBy default, the dropdown menu is closed when clicking inside or outside the dropdown menu. You can use the `autoClose` option to change this behavior of the dropdown.\n\n\u003CExample code={`\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" data-bs-auto-close=\"true\" aria-expanded=\"false\">\n    Default dropdown\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" data-bs-auto-close=\"inside\" aria-expanded=\"false\">\n    Clickable inside\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" data-bs-auto-close=\"outside\" aria-expanded=\"false\">\n    Clickable outside\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"btn-group\">\n  \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" data-bs-auto-close=\"false\" aria-expanded=\"false\">\n    Manual close\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Menu item\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, dropdowns now use local CSS variables on `.dropdown-menu` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"dropdown-css-vars\" file=\"scss/_dropdown.scss\" />\n\n\u003CCallout>\nDropdown items include at least one variable that is not set on `.dropdown`. This allows you to provide a new value while Bootstrap defaults to a fallback value.\n\n- `--bs-dropdown-item-border-radius`\n\u003C/Callout>\n\nCustomization through CSS variables can be seen on the `.dropdown-menu-dark` class where we override specific values without adding duplicate CSS selectors.\n\n\u003CScssDocs name=\"dropdown-dark-css-vars\" file=\"scss/_dropdown.scss\" />\n\n### Sass variables\n\nVariables for all dropdowns:\n\n\u003CScssDocs name=\"dropdown-variables\" file=\"scss/_variables.scss\" />\n\nVariables for the [dark dropdown](#dark-dropdowns):\n\n\u003CScssDocs name=\"dropdown-dark-variables\" file=\"scss/_variables.scss\" />\n\nVariables for the CSS-based carets that indicate a dropdown's interactivity:\n\n\u003CScssDocs name=\"caret-variables\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\nMixins are used to generate the CSS-based carets and can be found in `scss/mixins/_caret.scss`.\n\n\u003CScssDocs name=\"caret-mixins\" file=\"scss/mixins/_caret.scss\" />\n\n## Usage\n\nVia data attributes or JavaScript, the dropdown plugin toggles hidden content (dropdown menus) by toggling the `.show` class on the parent `.dropdown-menu`. The `data-bs-toggle=\"dropdown\"` attribute is relied on for closing dropdown menus at an application level, so it's a good idea to always use it.\n\n\u003CCallout>\nOn touch-enabled devices, opening a dropdown adds empty `mouseover` handlers to the immediate children of the `\u003Cbody>` element. This admittedly ugly hack is necessary to work around a [quirk in iOS' event delegation](https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html), which would otherwise prevent a tap anywhere outside of the dropdown from triggering the code that closes the dropdown. Once the dropdown is closed, these additional empty `mouseover` handlers are removed.\n\u003C/Callout>\n\n### Via data attributes\n\nAdd `data-bs-toggle=\"dropdown\"` to a link or button to toggle a dropdown.\n\n```html\n\u003Cdiv class=\"dropdown\">\n  \u003Cbutton type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown trigger\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    ...\n  \u003C/ul>\n\u003C/div>\n```\n\n### Via JavaScript\n\n\u003CCallout type=\"warning\">\nDropdowns must have `data-bs-toggle=\"dropdown\"` on their trigger element, regardless of whether you call your dropdown via JavaScript or use the data-api.\n\u003C/Callout>\n\nCall the dropdowns via JavaScript:\n\n```js\nconst dropdownElementList = document.querySelectorAll('.dropdown-toggle')\nconst dropdownList = [...dropdownElementList].map(dropdownToggleEl => new bootstrap.Dropdown(dropdownToggleEl))\n```\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `autoClose` | boolean, string | `true` | Configure the auto close behavior of the dropdown: \u003Cul class=\"my-2\">\u003Cli>`true` - the dropdown will be closed by clicking outside or inside the dropdown menu.\u003C/li>\u003Cli>`false` - the dropdown will be closed by clicking the toggle button and manually calling `hide` or `toggle` method. (Also will not be closed by pressing \u003Ckbd>Esc\u003C/kbd> key)\u003C/li>\u003Cli>`'inside'` - the dropdown will be closed (only) by clicking inside the dropdown menu.\u003C/li> \u003Cli>`'outside'` - the dropdown will be closed (only) by clicking outside the dropdown menu.\u003C/li>\u003C/ul> Note: the dropdown can always be closed with the \u003Ckbd>Esc\u003C/kbd> key. |\n| `boundary` | string, element | `'clippingParents'` | Overflow constraint boundary of the dropdown menu (applies only to Popper's preventOverflow modifier). By default it's `clippingParents` and can accept an HTMLElement reference (via JavaScript only). For more information refer to Popper's [detectOverflow docs](https://popper.js.org/docs/v2/utils/detect-overflow/#boundary). |\n| `display` | string | `'dynamic'` | By default, we use Popper for dynamic positioning. Disable this with `static`. |\n| `offset` | array, string, function | `[0, 2]` | Offset of the dropdown relative to its target. You can pass a string in data attributes with comma separated values like: `data-bs-offset=\"10,20\"`. When a function is used to determine the offset, it is called with an object containing the popper placement, the reference, and popper rects as its first argument. The triggering element DOM node is passed as the second argument. The function must return an array with two numbers: [skidding](https://popper.js.org/docs/v2/modifiers/offset/#skidding-1), [distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1). For more information refer to Popper's [offset docs](https://popper.js.org/docs/v2/modifiers/offset/#options). |\n| `popperConfig` | null, object, function | `null` | To change Bootstrap's default Popper config, see [Popper's configuration](https://popper.js.org/docs/v2/constructors/#options). When a function is used to create the Popper configuration, it's called with an object that contains the Bootstrap's default Popper configuration. It helps you use and merge the default with your own configuration. The function must return a configuration object for Popper. |\n| `reference` | string, element, object | `'toggle'` | Reference element of the dropdown menu. Accepts the values of `'toggle'`, `'parent'`, an HTMLElement reference or an object providing `getBoundingClientRect`. For more information refer to Popper's [constructor docs](https://popper.js.org/docs/v2/constructors/#createpopper) and [virtual element docs](https://popper.js.org/docs/v2/virtual-elements/). |\n\u003C/BsTable>\n\n#### Using function with `popperConfig`\n\n```js\nconst dropdown = new bootstrap.Dropdown(element, {\n  popperConfig(defaultBsPopperConfig) {\n    // const newPopperConfig = {...}\n    // use defaultBsPopperConfig if needed...\n    // return newPopperConfig\n  }\n})\n```\n\n### Methods\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's dropdown. (Removes stored data on the DOM element) |\n| `getInstance` | Static method which allows you to get the dropdown instance associated to a DOM element, you can use it like this: `bootstrap.Dropdown.getInstance(element)`. |\n| `getOrCreateInstance` | Static method which returns a dropdown instance associated to a DOM element or create a new one in case it wasn't initialized. You can use it like this: `bootstrap.Dropdown.getOrCreateInstance(element)`. |\n| `hide` | Hides the dropdown menu of a given navbar or tabbed navigation. |\n| `show` | Shows the dropdown menu of a given navbar or tabbed navigation. |\n| `toggle` | Toggles the dropdown menu of a given navbar or tabbed navigation. |\n| `update` | Updates the position of an element's dropdown. |\n\u003C/BsTable>\n\n### Events\n\nAll dropdown events are fired at the toggling element and then bubbled up. So you can also add event listeners on the `.dropdown-menu`'s parent element. `hide.bs.dropdown` and `hidden.bs.dropdown` events have a `clickEvent` property (only when the original Event type is `click`) that contains an Event Object for the click event.\n\n\u003CBsTable>\n| Event type | Description |\n| --- | --- |\n| `hide.bs.dropdown` | Fires immediately when the `hide` instance method has been called. |\n| `hidden.bs.dropdown` | Fired when the dropdown has finished being hidden from the user and CSS transitions have completed. |\n| `show.bs.dropdown` | Fires immediately when the `show` instance method is called. |\n| `shown.bs.dropdown` | Fired when the dropdown has been made visible to the user and CSS transitions have completed. |\n\u003C/BsTable>\n\n```js\nconst myDropdown = document.getElementById('myDropdown')\nmyDropdown.addEventListener('show.bs.dropdown', event => {\n  // do something...\n})\n```","src/content/docs/components/dropdowns.mdx","937818bbfbc24683","components/dropdowns.mdx","components/offcanvas",{"id":458,"data":460,"body":463,"filePath":464,"digest":465,"legacyId":466,"deferredRender":139},{"description":461,"title":462,"toc":139},"Build hidden sidebars into your project for navigation, shopping carts, and more with a few classes and our JavaScript plugin.","Offcanvas","## How it works\n\nOffcanvas is a sidebar component that can be toggled via JavaScript to appear from the left, right, top, or bottom edge of the viewport. Buttons or anchors are used as triggers that are attached to specific elements you toggle, and `data` attributes are used to invoke our JavaScript.\n\n- Offcanvas shares some of the same JavaScript code as modals. Conceptually, they are quite similar, but they are separate plugins.\n- Similarly, some [source Sass](#sass-variables) variables for offcanvas's styles and dimensions are inherited from the modal's variables.\n- When shown, offcanvas includes a default backdrop that can be clicked to hide the offcanvas.\n- Similar to modals, only one offcanvas can be shown at a time.\n\n**Heads up!** Given how CSS handles animations, you cannot use `margin` or `translate` on an `.offcanvas` element. Instead, use the class as an independent wrapping element.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Examples\n\n### Offcanvas components\n\nBelow is an offcanvas example that is shown by default (via `.show` on `.offcanvas`). Offcanvas includes support for a header with a close button and an optional body class for some initial `padding`. We suggest that you include offcanvas headers with dismiss actions whenever possible, or provide an explicit dismiss action.\n\n\u003CExample class=\"bd-example-offcanvas p-0 bg-body-tertiary overflow-hidden\" code={`\u003Cdiv class=\"offcanvas offcanvas-start show\" tabindex=\"-1\" id=\"offcanvas\" aria-labelledby=\"offcanvasLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasLabel\">Offcanvas\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    Content for the offcanvas goes here. You can place just about any Bootstrap component or custom elements here.\n  \u003C/div>\n\u003C/div>`} />\n\n### Live demo\n\nUse the buttons below to show and hide an offcanvas element via JavaScript that toggles the `.show` class on an element with the `.offcanvas` class.\n\n- `.offcanvas` hides content (default)\n- `.offcanvas.show` shows content\n\nYou can use a link with the `href` attribute, or a button with the `data-bs-target` attribute. In both cases, the `data-bs-toggle=\"offcanvas\"` is required.\n\n\u003CExample code={`\u003Ca class=\"btn btn-primary\" data-bs-toggle=\"offcanvas\" href=\"#offcanvasExample\" role=\"button\" aria-controls=\"offcanvasExample\">\n  Link with href\n\u003C/a>\n\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasExample\" aria-controls=\"offcanvasExample\">\n  Button with data-bs-target\n\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-start\" tabindex=\"-1\" id=\"offcanvasExample\" aria-labelledby=\"offcanvasExampleLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">Offcanvas\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    \u003Cdiv class=\"\">\n      Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\n    \u003C/div>\n    \u003Cdiv class=\"dropdown mt-3\">\n      \u003Cbutton class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n        Dropdown button\n      \u003C/button>\n      \u003Cul class=\"dropdown-menu\">\n        \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n        \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n        \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003C/ul>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Body scrolling\n\nScrolling the `\u003Cbody>` element is disabled when an offcanvas and its backdrop are visible. Use the `data-bs-scroll` attribute to enable `\u003Cbody>` scrolling.\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasScrolling\" aria-controls=\"offcanvasScrolling\">Enable body scrolling\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-start\" data-bs-scroll=\"true\" data-bs-backdrop=\"false\" tabindex=\"-1\" id=\"offcanvasScrolling\" aria-labelledby=\"offcanvasScrollingLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasScrollingLabel\">Offcanvas with body scrolling\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    \u003Cp>Try scrolling the rest of the page to see this option in action.\u003C/p>\n  \u003C/div>\n\u003C/div>`} />\n\n### Body scrolling and backdrop\n\nYou can also enable `\u003Cbody>` scrolling with a visible backdrop.\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasWithBothOptions\" aria-controls=\"offcanvasWithBothOptions\">Enable both scrolling & backdrop\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-start\" data-bs-scroll=\"true\" tabindex=\"-1\" id=\"offcanvasWithBothOptions\" aria-labelledby=\"offcanvasWithBothOptionsLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasWithBothOptionsLabel\">Backdrop with scrolling\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    \u003Cp>Try scrolling the rest of the page to see this option in action.\u003C/p>\n  \u003C/div>\n\u003C/div>`} />\n\n### Static backdrop\n\nWhen backdrop is set to static, the offcanvas will not close when clicking outside of it.\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#staticBackdrop\" aria-controls=\"staticBackdrop\">\n  Toggle static offcanvas\n\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-start\" data-bs-backdrop=\"static\" tabindex=\"-1\" id=\"staticBackdrop\" aria-labelledby=\"staticBackdropLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"staticBackdropLabel\">Offcanvas\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    \u003Cdiv>\n      I will not close if you click outside of me.\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Dark offcanvas\n\n\u003CDeprecatedIn version=\"5.3.0\" /> \u003CAddedIn version=\"5.2.0\" />\n\nChange the appearance of offcanvases with utilities to better match them to different contexts like dark navbars. Here we add `.text-bg-dark` to the `.offcanvas` and `.btn-close-white` to `.btn-close` for proper styling with a dark offcanvas. If you have dropdowns within, consider also adding `.dropdown-menu-dark` to `.dropdown-menu`.\n\n\u003CCallout type=\"warning\">\n**Heads up!** Dark variants for components were deprecated in v5.3.0 with the introduction of color modes. Instead of manually adding classes mentioned above, set `data-bs-theme=\"dark\"` on the root element, a parent wrapper, or the component itself.\n\u003C/Callout>\n\n\u003CExample class=\"bd-example-offcanvas p-0 bg-body-secondary overflow-hidden\" code={`\u003Cdiv class=\"offcanvas offcanvas-start show text-bg-dark\" tabindex=\"-1\" id=\"offcanvasDark\" aria-labelledby=\"offcanvasDarkLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasDarkLabel\">Offcanvas\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvasDark\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    \u003Cp>Place offcanvas content here.\u003C/p>\n  \u003C/div>\n\u003C/div>`} />\n\n## Responsive\n\n\u003CAddedIn version=\"5.2.0\" />\n\nResponsive offcanvas classes hide content outside the viewport from a specified breakpoint and down. Above that breakpoint, the contents within will behave as usual. For example, `.offcanvas-lg` hides content in an offcanvas below the `lg` breakpoint, but shows the content above the `lg` breakpoint.\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary d-lg-none\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasResponsive\" aria-controls=\"offcanvasResponsive\">Toggle offcanvas\u003C/button>\n\n\u003Cdiv class=\"alert alert-info d-none d-lg-block\">Resize your browser to show the responsive offcanvas toggle.\u003C/div>\n\n\u003Cdiv class=\"offcanvas-lg offcanvas-end\" tabindex=\"-1\" id=\"offcanvasResponsive\" aria-labelledby=\"offcanvasResponsiveLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasResponsiveLabel\">Responsive offcanvas\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" data-bs-target=\"#offcanvasResponsive\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    \u003Cp class=\"mb-0\">This is content within an \u003Ccode>.offcanvas-lg\u003C/code>.\u003C/p>\n  \u003C/div>\n\u003C/div>`} />\n\nResponsive offcanvas classes are available across for each breakpoint.\n\n- `.offcanvas`\n- `.offcanvas-sm`\n- `.offcanvas-md`\n- `.offcanvas-lg`\n- `.offcanvas-xl`\n- `.offcanvas-xxl`\n\n## Placement\n\nThere's no default placement for offcanvas components, so you must add one of the modifier classes below.\n\n- `.offcanvas-start` places offcanvas on the left of the viewport (shown above)\n- `.offcanvas-end` places offcanvas on the right of the viewport\n- `.offcanvas-top` places offcanvas on the top of the viewport\n- `.offcanvas-bottom` places offcanvas on the bottom of the viewport\n\nTry the top, right, and bottom examples out below.\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasTop\" aria-controls=\"offcanvasTop\">Toggle top offcanvas\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-top\" tabindex=\"-1\" id=\"offcanvasTop\" aria-labelledby=\"offcanvasTopLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasTopLabel\">Offcanvas top\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    ...\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">Toggle right offcanvas\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasRightLabel\">Offcanvas right\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body\">\n    ...\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasBottom\" aria-controls=\"offcanvasBottom\">Toggle bottom offcanvas\u003C/button>\n\n\u003Cdiv class=\"offcanvas offcanvas-bottom\" tabindex=\"-1\" id=\"offcanvasBottom\" aria-labelledby=\"offcanvasBottomLabel\">\n  \u003Cdiv class=\"offcanvas-header\">\n    \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasBottomLabel\">Offcanvas bottom\u003C/h5>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"offcanvas-body small\">\n    ...\n  \u003C/div>\n\u003C/div>`} />\n\n## Accessibility\n\nSince the offcanvas panel is conceptually a modal dialog, be sure to add `aria-labelledby=\"...\"`—referencing the offcanvas title—to `.offcanvas`. Note that you don’t need to add `role=\"dialog\"` since we already add it via JavaScript.\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, offcanvas now uses local CSS variables on `.offcanvas` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"offcanvas-css-vars\" file=\"scss/_offcanvas.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"offcanvas-variables\" file=\"scss/_variables.scss\" />\n\n## Usage\n\nThe offcanvas plugin utilizes a few classes and attributes to handle the heavy lifting:\n\n- `.offcanvas` hides the content\n- `.offcanvas.show` shows the content\n- `.offcanvas-start` hides the offcanvas on the left\n- `.offcanvas-end` hides the offcanvas on the right\n- `.offcanvas-top` hides the offcanvas on the top\n- `.offcanvas-bottom` hides the offcanvas on the bottom\n\nAdd a dismiss button with the `data-bs-dismiss=\"offcanvas\"` attribute, which triggers the JavaScript functionality. Be sure to use the `\u003Cbutton>` element with it for proper behavior across all devices.\n\n### Via data attributes\n\n#### Toggle\n\nAdd `data-bs-toggle=\"offcanvas\"` and a `data-bs-target` or `href` to the element to automatically assign control of one offcanvas element. The `data-bs-target` attribute accepts a CSS selector to apply the offcanvas to. Be sure to add the class `offcanvas` to the offcanvas element. If you'd like it to default open, add the additional class `show`.\n\n#### Dismiss\n\n\u003CJsDismiss name=\"offcanvas\" />\n\n\u003CCallout type=\"warning\">\nWhile both ways to dismiss an offcanvas are supported, keep in mind that dismissing from outside an offcanvas does not match the [ARIA Authoring Practices Guide dialog (modal) pattern](https://www.w3.org/WAI/ARIA/apg/patterns/dialogmodal/). Do this at your own risk.\n\u003C/Callout>\n\n### Via JavaScript\n\nEnable manually with:\n\n```js\nconst offcanvasElementList = document.querySelectorAll('.offcanvas')\nconst offcanvasList = [...offcanvasElementList].map(offcanvasEl => new bootstrap.Offcanvas(offcanvasEl))\n```\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `backdrop` | boolean or the string `static` | `true` | Apply a backdrop on body while offcanvas is open. Alternatively, specify `static` for a backdrop which doesn't close the offcanvas when clicked. |\n| `keyboard` | boolean | `true` | Closes the offcanvas when escape key is pressed. |\n| `scroll` | boolean | `false` | Allow body scrolling while offcanvas is open. |\n\u003C/BsTable>\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\nActivates your content as an offcanvas element. Accepts an optional options `object`.\n\nYou can create an offcanvas instance with the constructor, for example:\n\n```js\nconst bsOffcanvas = new bootstrap.Offcanvas('#myOffcanvas')\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's offcanvas. |\n| `getInstance` | *Static* method which allows you to get the offcanvas instance associated with a DOM element. |\n| `getOrCreateInstance` | *Static* method which allows you to get the offcanvas instance associated with a DOM element, or create a new one in case it wasn't initialized. |\n| `hide` | Hides an offcanvas element. **Returns to the caller before the offcanvas element has actually been hidden** (i.e. before the `hidden.bs.offcanvas` event occurs). |\n| `show` | Shows an offcanvas element. **Returns to the caller before the offcanvas element has actually been shown** (i.e. before the `shown.bs.offcanvas` event occurs). |\n| `toggle` | Toggles an offcanvas element to shown or hidden. **Returns to the caller before the offcanvas element has actually been shown or hidden** (i.e. before the `shown.bs.offcanvas` or `hidden.bs.offcanvas` event occurs). |\n\u003C/BsTable>\n\n### Events\n\nBootstrap's offcanvas class exposes a few events for hooking into offcanvas functionality.\n\n\u003CBsTable>\n| Event type | Description |\n| --- | --- |\n| `hide.bs.offcanvas` | This event is fired immediately when the `hide` method has been called. |\n| `hidden.bs.offcanvas` | This event is fired when an offcanvas element has been hidden from the user (will wait for CSS transitions to complete). |\n| `hidePrevented.bs.offcanvas` | This event is fired when the offcanvas is shown, its backdrop is `static` and a click outside of the offcanvas is performed. The event is also fired when the escape key is pressed and the `keyboard` option is set to `false`. |\n| `show.bs.offcanvas` | This event fires immediately when the `show` instance method is called. |\n| `shown.bs.offcanvas` | This event is fired when an offcanvas element has been made visible to the user (will wait for CSS transitions to complete). |\n\u003C/BsTable>\n\n```js\nconst myOffcanvas = document.getElementById('myOffcanvas')\nmyOffcanvas.addEventListener('hidden.bs.offcanvas', event => {\n  // do something...\n})\n```","src/content/docs/components/offcanvas.mdx","ef2abe219c2c85c2","components/offcanvas.mdx","components/navs-tabs",{"id":467,"data":469,"body":473,"filePath":474,"digest":475,"legacyId":476,"deferredRender":139},{"aliases":470,"description":471,"title":472,"toc":139},"/docs/[[config:docs_version]]/components/navs/","Documentation and examples for how to use Bootstrap's included navigation components.","Navs and tabs","## Base nav\n\nNavigation available in Bootstrap share general markup and styles, from the base `.nav` class to the active and disabled states. Swap modifier classes to switch between each style.\n\nThe base `.nav` component is built with flexbox and provide a strong foundation for building all types of navigation components. It includes some style overrides (for working with lists), some link padding for larger hit areas, and basic disabled styling.\n\n\u003CCallout>\nThe base `.nav` component does not include any `.active` state. The following examples include the class, mainly to demonstrate that this particular class does not trigger any special styling.\n\nTo convey the active state to assistive technologies, use the `aria-current` attribute — using the `page` value for current page, or `true` for the current item in a set.\n\u003C/Callout>\n\n\u003CExample code={`\u003Cul class=\"nav\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\nClasses are used throughout, so your markup can be super flexible. Use `\u003Cul>`s like above, `\u003Col>` if the order of your items is important, or roll your own with a `\u003Cnav>` element. Because the `.nav` uses `display: flex`, the nav links behave the same as nav items would, but without the extra markup.\n\n\u003CExample code={`\u003Cnav class=\"nav\">\n  \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n\u003C/nav>`} />\n\n## Available styles\n\nChange the style of `.nav`s component with modifiers and utilities. Mix and match as needed, or build your own.\n\n### Horizontal alignment\n\nChange the horizontal alignment of your nav with [flexbox utilities]([[docsref:/utilities/flex#justify-content]]). By default, navs are left-aligned, but you can easily change them to center or right-aligned.\n\nCentered with `.justify-content-center`:\n\n\u003CExample code={`\u003Cul class=\"nav justify-content-center\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\nRight-aligned with `.justify-content-end`:\n\n\u003CExample code={`\u003Cul class=\"nav justify-content-end\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\n### Vertical\n\nStack your navigation by changing the flex item direction with the `.flex-column` utility. Need to stack them on some viewports but not others? Use the responsive versions (e.g., `.flex-sm-column`).\n\n\u003CExample code={`\u003Cul class=\"nav flex-column\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\nAs always, vertical navigation is possible without `\u003Cul>`s, too.\n\n\u003CExample code={`\u003Cnav class=\"nav flex-column\">\n  \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n\u003C/nav>`} />\n\n### Tabs\n\nTakes the basic nav from above and adds the `.nav-tabs` class to generate a tabbed interface. Use them to create tabbable regions with our [tab JavaScript plugin](#javascript-behavior).\n\n\u003CExample code={`\u003Cul class=\"nav nav-tabs\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\n### Pills\n\nTake that same HTML, but use `.nav-pills` instead:\n\n\u003CExample code={`\u003Cul class=\"nav nav-pills\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\n### Underline\n\nTake that same HTML, but use `.nav-underline` instead:\n\n\u003CExample code={`\u003Cul class=\"nav nav-underline\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\n### Fill and justify\n\nForce your `.nav`'s contents to extend the full available width with one of two modifier classes. To proportionately fill all available space with your `.nav-item`s, use `.nav-fill`. Notice that all horizontal space is occupied, but not every nav item has the same width.\n\n\u003CExample code={`\u003Cul class=\"nav nav-pills nav-fill\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Much longer nav link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\nWhen using a `\u003Cnav>`-based navigation, you can safely omit `.nav-item` as only `.nav-link` is required for styling `\u003Ca>` elements.\n\n\u003CExample code={`\u003Cnav class=\"nav nav-pills nav-fill\">\n  \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Much longer nav link\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n\u003C/nav>`} />\n\nFor equal-width elements, use `.nav-justified`. All horizontal space will be occupied by nav links, but unlike the `.nav-fill` above, every nav item will be the same width.\n\n\u003CExample code={`\u003Cul class=\"nav nav-pills nav-justified\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Much longer nav link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\nSimilar to the `.nav-fill` example using a `\u003Cnav>`-based navigation.\n\n\u003CExample code={`\u003Cnav class=\"nav nav-pills nav-justified\">\n  \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Much longer nav link\u003C/a>\n  \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n\u003C/nav>\n`} />\n## Working with flex utilities\n\nIf you need responsive nav variations, consider using a series of [flexbox utilities]([[docsref:/utilities/flex]]). While more verbose, these utilities offer greater customization across responsive breakpoints. In the example below, our nav will be stacked on the lowest breakpoint, then adapt to a horizontal layout that fills the available width starting from the small breakpoint.\n\n\u003CExample code={`\u003Cnav class=\"nav nav-pills flex-column flex-sm-row\">\n  \u003Ca class=\"flex-sm-fill text-sm-center nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003Ca class=\"flex-sm-fill text-sm-center nav-link\" href=\"#\">Longer nav link\u003C/a>\n  \u003Ca class=\"flex-sm-fill text-sm-center nav-link\" href=\"#\">Link\u003C/a>\n  \u003Ca class=\"flex-sm-fill text-sm-center nav-link disabled\">Disabled\u003C/a>\n\u003C/nav>`} />\n\n## Regarding accessibility\n\nIf you're using navs to provide a navigation bar, be sure to add a `role=\"navigation\"` to the most logical parent container of the `\u003Cul>`, or wrap a `\u003Cnav>` element around the whole navigation. Do not add the role to the `\u003Cul>` itself, as this would prevent it from being announced as an actual list by assistive technologies.\n\nNote that navigation bars, even if visually styled as tabs with the `.nav-tabs` class, should **not** be given `role=\"tablist\"`, `role=\"tab\"` or `role=\"tabpanel\"` attributes. These are only appropriate for dynamic tabbed interfaces, as described in the [ARIA Authoring Practices Guide tabs pattern](https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/). See [JavaScript behavior](#javascript-behavior) for dynamic tabbed interfaces in this section for an example. The `aria-current` attribute is not necessary on dynamic tabbed interfaces since our JavaScript handles the selected state by adding `aria-selected=\"true\"` on the active tab.\n\n## Using dropdowns\n\nAdd dropdown menus with a little extra HTML and the [dropdowns JavaScript plugin]([[docsref:/components/dropdowns#usage]]).\n\n### Tabs with dropdowns\n\n\u003CExample code={`\u003Cul class=\"nav nav-tabs\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item dropdown\">\n    \u003Ca class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">Dropdown\u003C/a>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\n### Pills with dropdowns\n\n\u003CExample code={`\u003Cul class=\"nav nav-pills\">\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item dropdown\">\n    \u003Ca class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">Dropdown\u003C/a>\n    \u003Cul class=\"dropdown-menu\">\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n      \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n      \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n    \u003C/ul>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n  \u003C/li>\n  \u003Cli class=\"nav-item\">\n    \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n  \u003C/li>\n\u003C/ul>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, navs now use local CSS variables on `.nav`, `.nav-tabs`, and `.nav-pills` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\nOn the `.nav` base class:\n\n\u003CScssDocs name=\"nav-css-vars\" file=\"scss/_nav.scss\" />\n\nOn the `.nav-tabs` modifier class:\n\n\u003CScssDocs name=\"nav-tabs-css-vars\" file=\"scss/_nav.scss\" />\n\nOn the `.nav-pills` modifier class:\n\n\u003CScssDocs name=\"nav-pills-css-vars\" file=\"scss/_nav.scss\" />\n\n\u003CAddedIn version=\"5.3.0\" />\n\nOn the `.nav-underline` modifier class:\n\n\u003CScssDocs name=\"nav-underline-css-vars\" file=\"scss/_nav.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"nav-variables\" file=\"scss/_variables.scss\" />\n\n## JavaScript behavior\n\nUse the tab JavaScript plugin—include it individually or through the compiled `bootstrap.js` file—to extend our navigational tabs and pills to create tabbable panes of local content.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cul class=\"nav nav-tabs mb-3\" id=\"myTab\" role=\"tablist\">\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"home-tab-pane\" aria-selected=\"true\">Home\u003C/button>\n    \u003C/li>\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"profile-tab-pane\" aria-selected=\"false\">Profile\u003C/button>\n    \u003C/li>\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#contact-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"contact-tab-pane\" aria-selected=\"false\">Contact\u003C/button>\n    \u003C/li>\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link\" id=\"disabled-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#disabled-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"disabled-tab-pane\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n    \u003C/li>\n  \u003C/ul>\n  \u003Cdiv class=\"tab-content\" id=\"myTabContent\">\n    \u003Cdiv class=\"tab-pane fade show active\" id=\"home-tab-pane\" role=\"tabpanel\" aria-labelledby=\"home-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Home tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"profile-tab-pane\" role=\"tabpanel\" aria-labelledby=\"profile-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Profile tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"contact-tab-pane\" role=\"tabpanel\" aria-labelledby=\"contact-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Contact tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"disabled-tab-pane\" role=\"tabpanel\" aria-labelledby=\"disabled-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Disabled tab's\u003C/strong> associated content.\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"home-tab-pane\" aria-selected=\"true\">Home\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"profile-tab-pane\" aria-selected=\"false\">Profile\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#contact-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"contact-tab-pane\" aria-selected=\"false\">Contact\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"disabled-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#disabled-tab-pane\" type=\"button\" role=\"tab\" aria-controls=\"disabled-tab-pane\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n  \u003C/li>\n\u003C/ul>\n\u003Cdiv class=\"tab-content\" id=\"myTabContent\">\n  \u003Cdiv class=\"tab-pane fade show active\" id=\"home-tab-pane\" role=\"tabpanel\" aria-labelledby=\"home-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"profile-tab-pane\" role=\"tabpanel\" aria-labelledby=\"profile-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"contact-tab-pane\" role=\"tabpanel\" aria-labelledby=\"contact-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"disabled-tab-pane\" role=\"tabpanel\" aria-labelledby=\"disabled-tab\" tabindex=\"0\">...\u003C/div>\n\u003C/div>\n```\n\nTo help fit your needs, this works with `\u003Cul>`-based markup, as shown above, or with any arbitrary \"roll your own\" markup. Note that if you're using `\u003Cnav>`, you shouldn't add `role=\"tablist\"` directly to it, as this would override the element's native role as a navigation landmark. Instead, switch to an alternative element (in the example below, a simple `\u003Cdiv>`) and wrap the `\u003Cnav>` around it.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cnav>\n    \u003Cdiv class=\"nav nav-tabs mb-3\" id=\"nav-tab\" role=\"tablist\">\n      \u003Cbutton class=\"nav-link active\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\" type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Home\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Profile\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"nav-contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\" type=\"button\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Contact\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"nav-disabled-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-disabled\" type=\"button\" role=\"tab\" aria-controls=\"nav-disabled\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n    \u003C/div>\n  \u003C/nav>\n  \u003Cdiv class=\"tab-content\" id=\"nav-tabContent\">\n    \u003Cdiv class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Home tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Profile tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Contact tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"nav-disabled\" role=\"tabpanel\" aria-labelledby=\"nav-disabled-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Disabled tab's\u003C/strong> associated content.\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cnav>\n  \u003Cdiv class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n    \u003Cbutton class=\"nav-link active\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\" type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Home\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Profile\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"nav-contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\" type=\"button\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Contact\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"nav-disabled-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-disabled\" type=\"button\" role=\"tab\" aria-controls=\"nav-disabled\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n  \u003C/div>\n\u003C/nav>\n\u003Cdiv class=\"tab-content\" id=\"nav-tabContent\">\n  \u003Cdiv class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"nav-disabled\" role=\"tabpanel\" aria-labelledby=\"nav-disabled-tab\" tabindex=\"0\">...\u003C/div>\n\u003C/div>\n```\n\nThe tabs plugin also works with pills.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link active\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">Home\u003C/button>\n    \u003C/li>\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Profile\u003C/button>\n    \u003C/li>\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link\" id=\"pills-contact-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-contact\" type=\"button\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\">Contact\u003C/button>\n    \u003C/li>\n    \u003Cli class=\"nav-item\" role=\"presentation\">\n      \u003Cbutton class=\"nav-link\" id=\"pills-disabled-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-disabled\" type=\"button\" role=\"tab\" aria-controls=\"pills-disabled\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n    \u003C/li>\n  \u003C/ul>\n  \u003Cdiv class=\"tab-content\" id=\"pills-tabContent\">\n    \u003Cdiv class=\"tab-pane fade show active\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Home tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Profile tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Contact tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n    \u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"pills-disabled\" role=\"tabpanel\" aria-labelledby=\"pills-disabled-tab\" tabindex=\"0\">\n      \u003Cp>This is some placeholder content the \u003Cstrong>Disabled tab's\u003C/strong> associated content.\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link active\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">Home\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Profile\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"pills-contact-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-contact\" type=\"button\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\">Contact\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"pills-disabled-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-disabled\" type=\"button\" role=\"tab\" aria-controls=\"pills-disabled\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n  \u003C/li>\n\u003C/ul>\n\u003Cdiv class=\"tab-content\" id=\"pills-tabContent\">\n  \u003Cdiv class=\"tab-pane fade show active\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"pills-disabled\" role=\"tabpanel\" aria-labelledby=\"pills-disabled-tab\" tabindex=\"0\">...\u003C/div>\n\u003C/div>\n```\n\nAnd with vertical pills. Ideally, for vertical tabs, you should also add `aria-orientation=\"vertical\"` to the tab list container.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"d-flex align-items-start\">\n    \u003Cdiv class=\"nav flex-column nav-pills me-3\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n      \u003Cbutton class=\"nav-link active\" id=\"v-pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-home\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">Home\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"v-pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Profile\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"v-pills-disabled-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-disabled\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-disabled\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"v-pills-messages-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-messages\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">Messages\u003C/button>\n      \u003Cbutton class=\"nav-link\" id=\"v-pills-settings-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-settings\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-settings\" aria-selected=\"false\">Settings\u003C/button>\n    \u003C/div>\n    \u003Cdiv class=\"tab-content\" id=\"v-pills-tabContent\">\n      \u003Cdiv class=\"tab-pane fade show active\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\" tabindex=\"0\">\n        \u003Cp>This is some placeholder content the \u003Cstrong>Home tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\" tabindex=\"0\">\n        \u003Cp>This is some placeholder content the \u003Cstrong>Profile tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-disabled\" role=\"tabpanel\" aria-labelledby=\"v-pills-disabled-tab\" tabindex=\"0\">\n        \u003Cp>This is some placeholder content the \u003Cstrong>Disabled tab's\u003C/strong> associated content.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-messages\" role=\"tabpanel\" aria-labelledby=\"v-pills-messages-tab\" tabindex=\"0\">\n        \u003Cp>This is some placeholder content the \u003Cstrong>Messages tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n      \u003C/div>\n      \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-settings\" role=\"tabpanel\" aria-labelledby=\"v-pills-settings-tab\" tabindex=\"0\">\n        \u003Cp>This is some placeholder content the \u003Cstrong>Settings tab's\u003C/strong> associated content. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other \u003Ccode>.nav\u003C/code>-powered navigation.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-items-start\">\n  \u003Cdiv class=\"nav flex-column nav-pills me-3\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n    \u003Cbutton class=\"nav-link active\" id=\"v-pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-home\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">Home\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"v-pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Profile\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"v-pills-disabled-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-disabled\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-disabled\" aria-selected=\"false\" disabled>Disabled\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"v-pills-messages-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-messages\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">Messages\u003C/button>\n    \u003Cbutton class=\"nav-link\" id=\"v-pills-settings-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-settings\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-settings\" aria-selected=\"false\">Settings\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"tab-content\" id=\"v-pills-tabContent\">\n    \u003Cdiv class=\"tab-pane fade show active\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\" tabindex=\"0\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\" tabindex=\"0\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-disabled\" role=\"tabpanel\" aria-labelledby=\"v-pills-disabled-tab\" tabindex=\"0\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-messages\" role=\"tabpanel\" aria-labelledby=\"v-pills-messages-tab\" tabindex=\"0\">...\u003C/div>\n    \u003Cdiv class=\"tab-pane fade\" id=\"v-pills-settings\" role=\"tabpanel\" aria-labelledby=\"v-pills-settings-tab\" tabindex=\"0\">...\u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Accessibility\n\nDynamic tabbed interfaces, as described in the [ARIA Authoring Practices Guide tabs pattern](https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/), require `role=\"tablist\"`, `role=\"tab\"`, `role=\"tabpanel\"`, and additional `aria-` attributes in order to convey their structure, functionality, and current state to users of assistive technologies (such as screen readers). As a best practice, we recommend using `\u003Cbutton>` elements for the tabs, as these are controls that trigger a dynamic change, rather than links that navigate to a new page or location.\n\nIn line with the ARIA Authoring Practices pattern, only the currently active tab receives keyboard focus. When the JavaScript plugin is initialized, it will set `tabindex=\"-1\"` on all inactive tab controls. Once the currently active tab has focus, the cursor keys activate the previous/next tab. The \u003Ckbd>Home\u003C/kbd> and \u003Ckbd>End\u003C/kbd> keys activate the first and last tabs, respectively. The plugin will change the [roving `tabindex`](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/) accordingly. However, note that the JavaScript plugin does not distinguish between horizontal and vertical tab lists when it comes to cursor key interactions: regardless of the tab list's orientation, both the up *and* left cursor go to the previous tab, and down *and* right cursor go to the next tab.\n\n\u003CCallout type=\"warning\">\nIn general, to facilitate keyboard navigation, it's recommended to make the tab panels themselves focusable as well, unless the first element containing meaningful content inside the tab panel is already focusable. The JavaScript plugin does not try to handle this aspect—where appropriate, you'll need to explicitly make your tab panels focusable by adding `tabindex=\"0\"` in your markup.\n\u003C/Callout>\n\n\u003CCallout type=\"danger\">\nThe tab JavaScript plugin **does not** support tabbed interfaces that contain dropdown menus, as these cause both usability and accessibility issues. From a usability perspective, the fact that the currently displayed tab's trigger element is not immediately visible (as it's inside the closed dropdown menu) can cause confusion. From an accessibility point of view, there is currently no sensible way to map this sort of construct to a standard WAI ARIA pattern, meaning that it cannot be easily made understandable to users of assistive technologies.\n\u003C/Callout>\n\n### Using data attributes\n\nYou can activate a tab or pill navigation without writing any JavaScript by simply specifying `data-bs-toggle=\"tab\"` or `data-bs-toggle=\"pill\"` on an element. Use these data attributes on `.nav-tabs` or `.nav-pills`.\n\n```html\n\u003C!-- Nav tabs -->\n\u003Cul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Home\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Profile\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"messages-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#messages\" type=\"button\" role=\"tab\" aria-controls=\"messages\" aria-selected=\"false\">Messages\u003C/button>\n  \u003C/li>\n  \u003Cli class=\"nav-item\" role=\"presentation\">\n    \u003Cbutton class=\"nav-link\" id=\"settings-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#settings\" type=\"button\" role=\"tab\" aria-controls=\"settings\" aria-selected=\"false\">Settings\u003C/button>\n  \u003C/li>\n\u003C/ul>\n\n\u003C!-- Tab panes -->\n\u003Cdiv class=\"tab-content\">\n  \u003Cdiv class=\"tab-pane active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane\" id=\"messages\" role=\"tabpanel\" aria-labelledby=\"messages-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane\" id=\"settings\" role=\"tabpanel\" aria-labelledby=\"settings-tab\" tabindex=\"0\">...\u003C/div>\n\u003C/div>\n```\n\n### Via JavaScript\n\nEnable tabbable tabs via JavaScript (each tab needs to be activated individually):\n\n```js\nconst triggerTabList = document.querySelectorAll('#myTab button')\ntriggerTabList.forEach(triggerEl => {\n  const tabTrigger = new bootstrap.Tab(triggerEl)\n\n  triggerEl.addEventListener('click', event => {\n    event.preventDefault()\n    tabTrigger.show()\n  })\n})\n```\n\nYou can activate individual tabs in several ways:\n\n```js\nconst triggerEl = document.querySelector('#myTab button[data-bs-target=\"#profile\"]')\nbootstrap.Tab.getInstance(triggerEl).show() // Select tab by name\n\nconst triggerFirstTabEl = document.querySelector('#myTab li:first-child button')\nbootstrap.Tab.getInstance(triggerFirstTabEl).show() // Select first tab\n```\n\n### Fade effect\n\nTo make tabs fade in, add `.fade` to each `.tab-pane`. The first tab pane must also have `.show` to make the initial content visible.\n\n```html\n\u003Cdiv class=\"tab-content\">\n  \u003Cdiv class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"messages\" role=\"tabpanel\" aria-labelledby=\"messages-tab\" tabindex=\"0\">...\u003C/div>\n  \u003Cdiv class=\"tab-pane fade\" id=\"settings\" role=\"tabpanel\" aria-labelledby=\"settings-tab\" tabindex=\"0\">...\u003C/div>\n\u003C/div>\n```\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\nActivates your content as a tab element.\n\nYou can create a tab instance with the constructor, for example:\n\n```js\nconst bsTab = new bootstrap.Tab('#myTab')\n```\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's tab. |\n| `getInstance` | Static method which allows you to get the tab instance associated with a DOM element, you can use it like this: `bootstrap.Tab.getInstance(element)`. |\n| `getOrCreateInstance` | Static method which returns a tab instance associated to a DOM element or create a new one in case it wasn't initialized. You can use it like this: `bootstrap.Tab.getOrCreateInstance(element)`. |\n| `show` | Selects the given tab and shows its associated pane. Any other tab that was previously selected becomes unselected and its associated pane is hidden. **Returns to the caller before the tab pane has actually been shown** (i.e. before the `shown.bs.tab` event occurs). |\n\u003C/BsTable>\n\n### Events\n\nWhen showing a new tab, the events fire in the following order:\n\n1. `hide.bs.tab` (on the current active tab)\n2. `show.bs.tab` (on the to-be-shown tab)\n3. `hidden.bs.tab` (on the previous active tab, the same one as for the `hide.bs.tab` event)\n4. `shown.bs.tab` (on the newly-active just-shown tab, the same one as for the `show.bs.tab` event)\n\nIf no tab was already active, then the `hide.bs.tab` and `hidden.bs.tab` events will not be fired.\n\n\u003CBsTable>\n| Event type | Description |\n| --- | --- |\n| `hide.bs.tab` | This event fires when a new tab is to be shown (and thus the previous active tab is to be hidden). Use `event.target` and `event.relatedTarget` to target the current active tab and the new soon-to-be-active tab, respectively. |\n| `hidden.bs.tab` | This event fires after a new tab is shown (and thus the previous active tab is hidden). Use `event.target` and `event.relatedTarget` to target the previous active tab and the new active tab, respectively. |\n| `show.bs.tab` | This event fires on tab show, but before the new tab has been shown. Use `event.target` and `event.relatedTarget` to target the active tab and the previous active tab (if available) respectively. |\n| `shown.bs.tab` | This event fires on tab show after a tab has been shown. Use `event.target` and `event.relatedTarget` to target the active tab and the previous active tab (if available) respectively. |\n\u003C/BsTable>\n\n```js\nconst tabEl = document.querySelector('button[data-bs-toggle=\"tab\"]')\ntabEl.addEventListener('shown.bs.tab', event => {\n  event.target // newly activated tab\n  event.relatedTarget // previous active tab\n})\n```","src/content/docs/components/navs-tabs.mdx","fa41b7164104bf9c","components/navs-tabs.mdx","components/navbar",{"id":477,"data":479,"body":482,"filePath":483,"digest":484,"legacyId":485,"deferredRender":139},{"description":480,"title":481,"toc":139},"Documentation and examples for Bootstrap's powerful, responsive navigation header, the navbar. Includes support for branding, navigation, and more, including support for our collapse plugin.","Navbar","import { getConfig } from '@libs/config'\n\n## How it works\n\nHere's what you need to know before getting started with the navbar:\n\n- Navbars require a wrapping `.navbar` with `.navbar-expand{-sm|-md|-lg|-xl|-xxl}` for responsive collapsing and [color scheme](#color-schemes) classes.\n- Navbars and their contents are fluid by default. Change the [container](#containers) to limit their horizontal width in different ways.\n- Use our [spacing]([[docsref:/utilities/spacing]]) and [flex]([[docsref:/utilities/flex]]) utility classes for controlling spacing and alignment within navbars.\n- Navbars are responsive by default, but you can easily modify them to change that. Responsive behavior depends on our Collapse JavaScript plugin.\n- Ensure accessibility by using a `\u003Cnav>` element or, if using a more generic element such as a `\u003Cdiv>`, add a `role=\"navigation\"` to every navbar to explicitly identify it as a landmark region for users of assistive technologies.\n- Indicate the current item by using `aria-current=\"page\"` for the current page or `aria-current=\"true\"` for the current item in a set.\n- **New in v5.2.0:** Navbars can be themed with CSS variables that are scoped to the `.navbar` base class. `.navbar-light` has been deprecated and `.navbar-dark` has been rewritten to override CSS variables instead of adding additional styles.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Supported content\n\nNavbars come with built-in support for a handful of sub-components. Choose from the following as needed:\n\n- `.navbar-brand` for your company, product, or project name.\n- `.navbar-nav` for a full-height and lightweight navigation (including support for dropdowns).\n- `.navbar-toggler` for use with our collapse plugin and other [navigation toggling](#responsive-behaviors) behaviors.\n- Flex and spacing utilities for any form controls and actions.\n- `.navbar-text` for adding vertically centered strings of text.\n- `.collapse.navbar-collapse` for grouping and hiding navbar contents by a parent breakpoint.\n- Add an optional `.navbar-scroll` to set a `max-height` and [scroll expanded navbar content](#scrolling).\n\nHere's an example of all the sub-components included in a responsive light-themed navbar that automatically collapses at the `lg` (large) breakpoint.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item dropdown\">\n          \u003Ca class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Dropdown\n          \u003C/a>\n          \u003Cul class=\"dropdown-menu\">\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n            \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n          \u003C/ul>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n      \u003Cform class=\"d-flex\" role=\"search\">\n        \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n      \u003C/form>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\nThis example uses [background]([[docsref:/utilities/background]]) (`bg-body-tertiary`) and [spacing]([[docsref:/utilities/spacing]]) (`me-auto`, `mb-2`, `mb-lg-0`, `me-2`) utility classes.\n\n### Brand\n\nThe `.navbar-brand` can be applied to most elements, but an anchor works best, as some elements might require utility classes or custom styles.\n\n#### Text\n\nAdd your text within an element with the `.navbar-brand` class.\n\n\u003CExample code={`\u003C!-- As a link -->\n\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n  \u003C/div>\n\u003C/nav>\n\n\u003C!-- As a heading -->\n\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cspan class=\"navbar-brand mb-0 h1\">Navbar\u003C/span>\n  \u003C/div>\n\u003C/nav>`} />\n\n#### Image\n\nYou can replace the text within the `.navbar-brand` with an `\u003Cimg>`.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">\n      \u003Cimg src=\"/docs/${getConfig().docs_version}/assets/brand/bootstrap-logo.svg\" alt=\"Bootstrap\" width=\"30\" height=\"24\">\n    \u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n#### Image and text\n\nYou can also make use of some additional utilities to add an image and text at the same time. Note the addition of `.d-inline-block` and `.align-text-top` on the `\u003Cimg>`.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">\n      \u003Cimg src=\"/docs/${getConfig().docs_version}/assets/brand/bootstrap-logo.svg\" alt=\"Logo\" width=\"30\" height=\"24\" class=\"d-inline-block align-text-top\">\n      Bootstrap\n    \u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n### Nav\n\nNavbar navigation links build on our `.nav` options with their own modifier class and require the use of [toggler classes](#toggler) for proper responsive styling. **Navigation in navbars will also grow to occupy as much horizontal space as possible** to keep your navbar contents securely aligned.\n\nAdd the `.active` class on `.nav-link` to indicate the current page.\n\nPlease note that you should also add the `aria-current` attribute on the active `.nav-link`.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      \u003Cul class=\"navbar-nav\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\nAnd because we use classes for our navs, you can avoid the list-based approach entirely if you like.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      \u003Cdiv class=\"navbar-nav\">\n        \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n        \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n        \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\nYou can also use dropdowns in your navbar. Dropdown menus require a wrapping element for positioning, so be sure to use separate and nested elements for `.nav-item` and `.nav-link` as shown below.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n      \u003Cul class=\"navbar-nav\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item dropdown\">\n          \u003Ca class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Dropdown link\n          \u003C/a>\n          \u003Cul class=\"dropdown-menu\">\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n          \u003C/ul>\n        \u003C/li>\n      \u003C/ul>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\n### Forms\n\nPlace various form controls and components within a navbar:\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cform class=\"d-flex\" role=\"search\">\n      \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n      \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n    \u003C/form>\n  \u003C/div>\n\u003C/nav>`} />\n\nImmediate child elements of `.navbar` use flex layout and will default to `justify-content: space-between`. Use additional [flex utilities]([[docsref:/utilities/flex]]) as needed to adjust this behavior.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\">Navbar\u003C/a>\n    \u003Cform class=\"d-flex\" role=\"search\">\n      \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n      \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n    \u003C/form>\n  \u003C/div>\n\u003C/nav>`} />\n\nInput groups work, too. If your navbar is an entire form, or mostly a form, you can use the `\u003Cform>` element as the container and save some HTML.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cform class=\"container-fluid\">\n    \u003Cdiv class=\"input-group\">\n      \u003Cspan class=\"input-group-text\" id=\"basic-addon1\">@\u003C/span>\n      \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\n    \u003C/div>\n  \u003C/form>\n\u003C/nav>`} />\n\nVarious buttons are supported as part of these navbar forms, too. This is also a great reminder that vertical alignment utilities can be used to align different sized elements.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cform class=\"container-fluid justify-content-start\">\n    \u003Cbutton class=\"btn btn-outline-success me-2\" type=\"button\">Main button\u003C/button>\n    \u003Cbutton class=\"btn btn-sm btn-outline-secondary\" type=\"button\">Smaller button\u003C/button>\n  \u003C/form>\n\u003C/nav>`} />\n\n### Text\n\nNavbars may contain bits of text with the help of `.navbar-text`. This class adjusts vertical alignment and horizontal spacing for strings of text.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cspan class=\"navbar-text\">\n      Navbar text with an inline element\n    \u003C/span>\n  \u003C/div>\n\u003C/nav>`} />\n\nMix and match with other components and utilities as needed.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar w/ text\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarText\">\n      \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n      \u003Cspan class=\"navbar-text\">\n        Navbar text with an inline element\n      \u003C/span>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\n## Color schemes\n\n\u003CCallout type=\"warning\">\n**New dark navbars in v5.3.0 —** We've deprecated `.navbar-dark` in favor of the new `data-bs-theme=\"dark\"`. Add `data-bs-theme=\"dark\"` to the `.navbar` to enable a component-specific color mode. [Learn more about our color modes.]([[docsref:/customize/color-modes]])\n\n---\n\n**New in v5.2.0  —** Navbar theming is now powered by CSS variables and `.navbar-light` has been deprecated. CSS variables are applied to `.navbar`, defaulting to the \"light\" appearance, and can be overridden with `.navbar-dark`.\n\u003C/Callout>\n\nNavbar themes are easier than ever thanks to Bootstrap's combination of Sass and CSS variables. The default is our \"light navbar\" for use with light background colors, but you can also apply `data-bs-theme=\"dark\"` to the `.navbar` parent for dark background colors. Then, customize with `.bg-*` and additional utilities.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cnav class=\"navbar navbar-expand-lg bg-dark border-bottom border-body\" data-bs-theme=\"dark\">\n    \u003Cdiv class=\"container-fluid\">\n      \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n      \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n      \u003C/button>\n      \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n        \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">About\u003C/a>\n          \u003C/li>\n        \u003C/ul>\n        \u003Cform class=\"d-flex\" role=\"search\">\n          \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          \u003Cbutton class=\"btn btn-outline-light\" type=\"submit\">Search\u003C/button>\n        \u003C/form>\n      \u003C/div>\n    \u003C/div>\n  \u003C/nav>\n\n  \u003Cnav class=\"navbar navbar-expand-lg bg-primary\" data-bs-theme=\"dark\">\n    \u003Cdiv class=\"container-fluid\">\n      \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n      \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n      \u003C/button>\n      \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n        \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">About\u003C/a>\n          \u003C/li>\n        \u003C/ul>\n        \u003Cform class=\"d-flex\" role=\"search\">\n          \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          \u003Cbutton class=\"btn btn-outline-light\" type=\"submit\">Search\u003C/button>\n        \u003C/form>\n      \u003C/div>\n    \u003C/div>\n  \u003C/nav>\n\n  \u003Cnav class=\"navbar navbar-expand-lg\" style=\"background-color: #e3f2fd;\" data-bs-theme=\"light\">\n    \u003Cdiv class=\"container-fluid\">\n      \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n      \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n      \u003C/button>\n      \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarColor03\">\n        \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Features\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Pricing\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">About\u003C/a>\n          \u003C/li>\n        \u003C/ul>\n        \u003Cform class=\"d-flex\" role=\"search\">\n          \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          \u003Cbutton class=\"btn btn-outline-primary\" type=\"submit\">Search\u003C/button>\n        \u003C/form>\n      \u003C/div>\n    \u003C/div>\n  \u003C/nav>\n\u003C/div>\n\n```html\n\u003Cnav class=\"navbar bg-dark border-bottom border-body\" data-bs-theme=\"dark\">\n  \u003C!-- Navbar content -->\n\u003C/nav>\n\n\u003Cnav class=\"navbar bg-primary\" data-bs-theme=\"dark\">\n  \u003C!-- Navbar content -->\n\u003C/nav>\n\n\u003Cnav class=\"navbar\" style=\"background-color: #e3f2fd;\" data-bs-theme=\"light\">\n  \u003C!-- Navbar content -->\n\u003C/nav>\n```\n\n## Containers\n\nAlthough it's not required, you can wrap a navbar in a `.container` to center it on a page–though note that an inner container is still required. Or you can add a container inside the `.navbar` to only center the contents of a [fixed or static top navbar](#placement).\n\n\u003CExample code={`\u003Cdiv class=\"container\">\n  \u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n    \u003Cdiv class=\"container-fluid\">\n      \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003C/div>\n  \u003C/nav>\n\u003C/div>`} />\n\nUse any of the responsive containers to change how wide the content in your navbar is presented.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-md\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n  \u003C/div>\n\u003C/nav>\n`} />\n\n## Placement\n\nUse our [position utilities]([[docsref:/utilities/position]]) to place navbars in non-static positions. Choose from fixed to the top, fixed to the bottom, stickied to the top (scrolls with the page until it reaches the top, then stays there), or stickied to the bottom (scrolls with the page until it reaches the bottom, then stays there).\n\nFixed navbars use `position: fixed`, meaning they're pulled from the normal flow of the DOM and may require custom CSS (e.g., `padding-top` on the `\u003Cbody>`) to prevent overlap with other elements.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Default\u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n\u003CExample code={`\u003Cnav class=\"navbar fixed-top bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Fixed top\u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n\u003CExample code={`\u003Cnav class=\"navbar fixed-bottom bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Fixed bottom\u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n\u003CExample code={`\u003Cnav class=\"navbar sticky-top bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Sticky top\u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n\u003CExample code={`\u003Cnav class=\"navbar sticky-bottom bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Sticky bottom\u003C/a>\n  \u003C/div>\n\u003C/nav>`} />\n\n## Scrolling\n\nAdd `.navbar-nav-scroll` to a `.navbar-nav` (or other navbar sub-component) to enable vertical scrolling within the toggleable contents of a collapsed navbar. By default, scrolling kicks in at `75vh` (or 75% of the viewport height), but you can override that with the local CSS custom property `--bs-navbar-height` or custom styles. At larger viewports when the navbar is expanded, content will appear as it does in a default navbar.\n\nPlease note that this behavior comes with a potential drawback of `overflow`—when setting `overflow-y: auto` (required to scroll the content here), `overflow-x` is the equivalent of `auto`, which will crop some horizontal content.\n\nHere's an example navbar using `.navbar-nav-scroll` with `style=\"--bs-scroll-height: 100px;\"`, with some extra margin utilities for optimum spacing.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar scroll\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarScroll\">\n      \u003Cul class=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" style=\"--bs-scroll-height: 100px;\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item dropdown\">\n          \u003Ca class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Link\n          \u003C/a>\n          \u003Cul class=\"dropdown-menu\">\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n            \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n            \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n          \u003C/ul>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Link\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n      \u003Cform class=\"d-flex\" role=\"search\">\n        \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n      \u003C/form>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\n## Responsive behaviors\n\nNavbars can use `.navbar-toggler`, `.navbar-collapse`, and `.navbar-expand{-sm|-md|-lg|-xl|-xxl}` classes to determine when their content collapses behind a button. In combination with other utilities, you can easily choose when to show or hide particular elements.\n\nFor navbars that never collapse, add the `.navbar-expand` class on the navbar. For navbars that always collapse, don't add any `.navbar-expand` class.\n\n### Toggler\n\nNavbar togglers are left-aligned by default, but should they follow a sibling element like a `.navbar-brand`, they'll automatically be aligned to the far right. Reversing your markup will reverse the placement of the toggler. Below are examples of different toggle styles.\n\nWith no `.navbar-brand` shown at the smallest breakpoint:\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n      \u003Ca class=\"navbar-brand\" href=\"#\">Hidden brand\u003C/a>\n      \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n      \u003Cform class=\"d-flex\" role=\"search\">\n        \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n      \u003C/form>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\nWith a brand name shown on the left and toggler on the right:\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n      \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n      \u003Cform class=\"d-flex\" role=\"search\">\n        \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n      \u003C/form>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\nWith a toggler on the left and brand name on the right:\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cdiv class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n      \u003Cul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n        \u003C/li>\n        \u003Cli class=\"nav-item\">\n          \u003Ca class=\"nav-link disabled\" aria-disabled=\"true\">Disabled\u003C/a>\n        \u003C/li>\n      \u003C/ul>\n      \u003Cform class=\"d-flex\" role=\"search\">\n        \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n      \u003C/form>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\n### External content\n\nSometimes you want to use the collapse plugin to trigger a container element for content that structurally sits outside of the `.navbar` . Because our plugin works on the `id` and `data-bs-target` matching, that's easily done!\n\n\u003CExample code={`\u003Cdiv class=\"collapse\" id=\"navbarToggleExternalContent\" data-bs-theme=\"dark\">\n  \u003Cdiv class=\"bg-dark p-4\">\n    \u003Ch5 class=\"text-body-emphasis h4\">Collapsed content\u003C/h5>\n    \u003Cspan class=\"text-body-secondary\">Toggleable via the navbar brand.\u003C/span>\n  \u003C/div>\n\u003C/div>\n\u003Cnav class=\"navbar navbar-dark bg-dark\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n  \u003C/div>\n\u003C/nav>`} />\n\nWhen you do this, we recommend including additional JavaScript to move the focus programmatically to the container when it is opened. Otherwise, keyboard users and users of assistive technologies will likely have a hard time finding the newly revealed content - particularly if the container that was opened comes *before* the toggler in the document's structure. We also recommend making sure that the toggler has the `aria-controls` attribute, pointing to the `id` of the content container. In theory, this allows assistive technology users to jump directly from the toggler to the container it controls–but support for this is currently quite patchy.\n\n### Offcanvas\n\nTransform your expanding and collapsing navbar into an offcanvas drawer with the [offcanvas component]([[docsref:/components/offcanvas]]). We extend both the offcanvas default styles and use our `.navbar-expand-*` classes to create a dynamic and flexible navigation sidebar.\n\nIn the example below, to create an offcanvas navbar that is always collapsed across all breakpoints, omit the `.navbar-expand-*` class entirely.\n\n\u003CExample code={`\u003Cnav class=\"navbar bg-body-tertiary fixed-top\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Offcanvas navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\n      \u003Cdiv class=\"offcanvas-header\">\n        \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Offcanvas\u003C/h5>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"offcanvas-body\">\n        \u003Cul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item dropdown\">\n            \u003Ca class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Dropdown\n            \u003C/a>\n            \u003Cul class=\"dropdown-menu\">\n              \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n              \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n              \u003Cli>\n                \u003Chr class=\"dropdown-divider\">\n              \u003C/li>\n              \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n            \u003C/ul>\n          \u003C/li>\n        \u003C/ul>\n        \u003Cform class=\"d-flex mt-3\" role=\"search\">\n          \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          \u003Cbutton class=\"btn btn-outline-success\" type=\"submit\">Search\u003C/button>\n        \u003C/form>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\nTo create an offcanvas navbar that expands into a normal navbar at a specific breakpoint like `lg`, use `.navbar-expand-lg`.\n\n```html\n\u003Cnav class=\"navbar navbar-expand-lg bg-body-tertiary fixed-top\">\n  \u003Ca class=\"navbar-brand\" href=\"#\">Offcanvas navbar\u003C/a>\n  \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#navbarOffcanvasLg\" aria-controls=\"navbarOffcanvasLg\" aria-label=\"Toggle navigation\">\n    \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n  \u003C/button>\n  \u003Cdiv class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"navbarOffcanvasLg\" aria-labelledby=\"navbarOffcanvasLgLabel\">\n    ...\n  \u003C/div>\n\u003C/nav>\n```\n\nWhen using offcanvas in a dark navbar, be aware that you may need to have a dark background on the offcanvas content to avoid the text becoming illegible. In the example below, we add `.navbar-dark` and `.bg-dark` to the `.navbar`, `.text-bg-dark` to the `.offcanvas`, `.dropdown-menu-dark` to `.dropdown-menu`, and `.btn-close-white` to `.btn-close` for proper styling with a dark offcanvas.\n\n\u003CExample code={`\u003Cnav class=\"navbar navbar-dark bg-dark fixed-top\">\n  \u003Cdiv class=\"container-fluid\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Offcanvas dark navbar\u003C/a>\n    \u003Cbutton class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasDarkNavbar\" aria-controls=\"offcanvasDarkNavbar\" aria-label=\"Toggle navigation\">\n      \u003Cspan class=\"navbar-toggler-icon\">\u003C/span>\n    \u003C/button>\n    \u003Cdiv class=\"offcanvas offcanvas-end text-bg-dark\" tabindex=\"-1\" id=\"offcanvasDarkNavbar\" aria-labelledby=\"offcanvasDarkNavbarLabel\">\n      \u003Cdiv class=\"offcanvas-header\">\n        \u003Ch5 class=\"offcanvas-title\" id=\"offcanvasDarkNavbarLabel\">Dark offcanvas\u003C/h5>\n        \u003Cbutton type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"offcanvas-body\">\n        \u003Cul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item\">\n            \u003Ca class=\"nav-link\" href=\"#\">Link\u003C/a>\n          \u003C/li>\n          \u003Cli class=\"nav-item dropdown\">\n            \u003Ca class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Dropdown\n            \u003C/a>\n            \u003Cul class=\"dropdown-menu dropdown-menu-dark\">\n              \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n              \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n              \u003Cli>\n                \u003Chr class=\"dropdown-divider\">\n              \u003C/li>\n              \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n            \u003C/ul>\n          \u003C/li>\n        \u003C/ul>\n        \u003Cform class=\"d-flex mt-3\" role=\"search\">\n          \u003Cinput class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          \u003Cbutton class=\"btn btn-success\" type=\"submit\">Search\u003C/button>\n        \u003C/form>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/nav>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, navbars now use local CSS variables on `.navbar` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"navbar-css-vars\" file=\"scss/_navbar.scss\" />\n\nSome additional CSS variables are also present on `.navbar-nav`:\n\n\u003CScssDocs name=\"navbar-nav-css-vars\" file=\"scss/_navbar.scss\" />\n\nCustomization through CSS variables can be seen on the `.navbar-dark` class where we override specific values without adding duplicate CSS selectors.\n\n\u003CScssDocs name=\"navbar-dark-css-vars\" file=\"scss/_navbar.scss\" />\n\n### Sass variables\n\nVariables for all navbars:\n\n\u003CScssDocs name=\"navbar-variables\" file=\"scss/_variables.scss\" />\n\nVariables for the [dark navbar](#color-schemes):\n\n\u003CScssDocs name=\"navbar-dark-variables\" file=\"scss/_variables.scss\" />\n\n### Sass loops\n\n[Responsive navbar expand/collapse classes](#responsive-behaviors) (e.g., `.navbar-expand-lg`) are combined with the `$breakpoints` map and generated through a loop in `scss/_navbar.scss`.\n\n\u003CScssDocs name=\"navbar-expand-loop\" file=\"scss/_navbar.scss\" />","src/content/docs/components/navbar.mdx","97f16c3a269185a4","components/navbar.mdx","components/pagination",{"id":486,"data":488,"body":491,"filePath":492,"digest":493,"legacyId":494,"deferredRender":139},{"description":489,"title":490,"toc":139},"Documentation and examples for showing pagination to indicate a series of related content exists across multiple pages.","Pagination","## Overview\n\nWe use a large block of connected links for our pagination, making links hard to miss and easily scalable—all while providing large hit areas. Pagination is built with list HTML elements so screen readers can announce the number of available links. Use a wrapping `\u003Cnav>` element to identify it as a navigation section to screen readers and other assistive technologies.\n\nIn addition, as pages likely have more than one such navigation section, it's advisable to provide a descriptive `aria-label` for the `\u003Cnav>` to reflect its purpose. For example, if the pagination component is used to navigate between a set of search results, an appropriate label could be `aria-label=\"Search results pages\"`.\n\n\u003CExample code={`\u003Cnav aria-label=\"Page navigation example\">\n  \u003Cul class=\"pagination\">\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">Previous\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">1\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">Next\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\n## Working with icons\n\nLooking to use an icon or symbol in place of text for some pagination links? Be sure to provide proper screen reader support with `aria` attributes.\n\n\u003CExample code={`\u003Cnav aria-label=\"Page navigation example\">\n  \u003Cul class=\"pagination\">\n    \u003Cli class=\"page-item\">\n      \u003Ca class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n        \u003Cspan aria-hidden=\"true\">&laquo;\u003C/span>\n      \u003C/a>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">1\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\n      \u003Ca class=\"page-link\" href=\"#\" aria-label=\"Next\">\n        \u003Cspan aria-hidden=\"true\">&raquo;\u003C/span>\n      \u003C/a>\n    \u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\n## Disabled and active states\n\nPagination links are customizable for different circumstances. Use `.disabled` for links that appear un-clickable and `.active` to indicate the current page.\n\nWhile the `.disabled` class uses `pointer-events: none` to _try_ to disable the link functionality of `\u003Ca>`s, that CSS property is not yet standardized and doesn't account for keyboard navigation. As such, you should always add `tabindex=\"-1\"` on disabled links and use custom JavaScript to fully disable their functionality.\n\n\u003CExample code={`\u003Cnav aria-label=\"...\">\n  \u003Cul class=\"pagination\">\n    \u003Cli class=\"page-item disabled\">\n      \u003Ca class=\"page-link\">Previous\u003C/a>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">1\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item active\" aria-current=\"page\">\n      \u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\n      \u003Ca class=\"page-link\" href=\"#\">Next\u003C/a>\n    \u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\nYou can optionally swap out active or disabled anchors for `\u003Cspan>`, or omit the anchor in the case of the prev/next arrows, to remove click functionality and prevent keyboard focus while retaining intended styles.\n\n\u003CExample code={`\u003Cnav aria-label=\"...\">\n  \u003Cul class=\"pagination\">\n    \u003Cli class=\"page-item disabled\">\n      \u003Cspan class=\"page-link\">Previous\u003C/span>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">1\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item active\" aria-current=\"page\">\n      \u003Cspan class=\"page-link\">2\u003C/span>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\n      \u003Ca class=\"page-link\" href=\"#\">Next\u003C/a>\n    \u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\n## Sizing\n\nFancy larger or smaller pagination? Add `.pagination-lg` or `.pagination-sm` for additional sizes.\n\n\u003CExample code={`\u003Cnav aria-label=\"...\">\n  \u003Cul class=\"pagination pagination-lg\">\n    \u003Cli class=\"page-item active\" aria-current=\"page\">\n      \u003Cspan class=\"page-link\">1\u003C/span>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\n\u003CExample code={`\u003Cnav aria-label=\"...\">\n  \u003Cul class=\"pagination pagination-sm\">\n    \u003Cli class=\"page-item active\" aria-current=\"page\">\n      \u003Cspan class=\"page-link\">1\u003C/span>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\n## Alignment\n\nChange the alignment of pagination components with [flexbox utilities]([[docsref:/utilities/flex]]). For example, with `.justify-content-center`:\n\n\u003CExample code={`\u003Cnav aria-label=\"Page navigation example\">\n  \u003Cul class=\"pagination justify-content-center\">\n    \u003Cli class=\"page-item disabled\">\n      \u003Ca class=\"page-link\">Previous\u003C/a>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">1\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\n      \u003Ca class=\"page-link\" href=\"#\">Next\u003C/a>\n    \u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\nOr with `.justify-content-end`:\n\n\u003CExample code={`\u003Cnav aria-label=\"Page navigation example\">\n  \u003Cul class=\"pagination justify-content-end\">\n    \u003Cli class=\"page-item disabled\">\n      \u003Ca class=\"page-link\">Previous\u003C/a>\n    \u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">1\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">2\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\u003Ca class=\"page-link\" href=\"#\">3\u003C/a>\u003C/li>\n    \u003Cli class=\"page-item\">\n      \u003Ca class=\"page-link\" href=\"#\">Next\u003C/a>\n    \u003C/li>\n  \u003C/ul>\n\u003C/nav>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, pagination now uses local CSS variables on `.pagination` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"pagination-css-vars\" file=\"scss/_pagination.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"pagination-variables\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\n\u003CScssDocs name=\"pagination-mixin\" file=\"scss/mixins/_pagination.scss\" />","src/content/docs/components/pagination.mdx","4ae6699d1ffa4c25","components/pagination.mdx","components/placeholders",{"id":495,"data":497,"body":502,"filePath":503,"digest":504,"legacyId":505,"deferredRender":139},{"added":498,"description":500,"title":501,"toc":139},{"version":499},"5.1","Use loading placeholders for your components or pages to indicate something may still be loading.","Placeholders","import { getData } from '@libs/data'\n\n## About\n\nPlaceholders can be used to enhance the experience of your application. They're built only with HTML and CSS, meaning you don't need any JavaScript to create them. You will, however, need some custom JavaScript to toggle their visibility. Their appearance, color, and sizing can be easily customized with our utility classes.\n\n## Example\n\nIn the example below, we take a typical card component and recreate it with placeholders applied to create a \"loading card\". Size and proportions are the same between the two.\n\n\u003Cdiv class=\"bd-example bd-example-placeholder-cards d-flex justify-content-around\">\n\u003Cdiv class=\"card\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text={false} background=\"#20c997\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"card\" aria-hidden=\"true\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text={false} />\n  \u003Cdiv class=\"card-body\">\n    \u003Cdiv class=\"h5 card-title placeholder-glow\">\n      \u003Cspan class=\"placeholder col-6\">\u003C/span>\n    \u003C/div>\n    \u003Cp class=\"card-text placeholder-glow\">\n      \u003Cspan class=\"placeholder col-7\">\u003C/span>\n      \u003Cspan class=\"placeholder col-4\">\u003C/span>\n      \u003Cspan class=\"placeholder col-4\">\u003C/span>\n      \u003Cspan class=\"placeholder col-6\">\u003C/span>\n      \u003Cspan class=\"placeholder col-8\">\u003C/span>\n    \u003C/p>\n    \u003Ca class=\"btn btn-primary disabled placeholder col-6\" aria-disabled=\"true\">\u003C/a>\n  \u003C/div>\n\u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"card\">\n  \u003Cimg src=\"...\" class=\"card-img-top\" alt=\"...\">\n\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card title\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"card\" aria-hidden=\"true\">\n  \u003Cimg src=\"...\" class=\"card-img-top\" alt=\"...\">\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title placeholder-glow\">\n      \u003Cspan class=\"placeholder col-6\">\u003C/span>\n    \u003C/h5>\n    \u003Cp class=\"card-text placeholder-glow\">\n      \u003Cspan class=\"placeholder col-7\">\u003C/span>\n      \u003Cspan class=\"placeholder col-4\">\u003C/span>\n      \u003Cspan class=\"placeholder col-4\">\u003C/span>\n      \u003Cspan class=\"placeholder col-6\">\u003C/span>\n      \u003Cspan class=\"placeholder col-8\">\u003C/span>\n    \u003C/p>\n    \u003Ca class=\"btn btn-primary disabled placeholder col-6\" aria-disabled=\"true\">\u003C/a>\n  \u003C/div>\n\u003C/div>\n```\n\n## How it works\n\nCreate placeholders with the `.placeholder` class and a grid column class (e.g., `.col-6`) to set the `width`. They can replace the text inside an element or be added as a modifier class to an existing component.\n\nWe apply additional styling to `.btn`s via `::before` to ensure the `height` is respected. You may extend this pattern for other situations as needed, or add a `&nbsp;` within the element to reflect the height when actual text is rendered in its place.\n\n\u003CExample code={`\u003Cp aria-hidden=\"true\">\n  \u003Cspan class=\"placeholder col-6\">\u003C/span>\n\u003C/p>\n\n\u003Ca class=\"btn btn-primary disabled placeholder col-4\" aria-disabled=\"true\">\u003C/a>`} />\n\n\u003CCallout>\nThe use of `aria-hidden=\"true\"` only indicates that the element should be hidden to screen readers. The *loading* behavior of the placeholder depends on how authors will actually use the placeholder styles, how they plan to update things, etc. Some JavaScript code may be needed to *swap* the state of the placeholder and inform AT users of the update.\n\u003C/Callout>\n\n### Width\n\nYou can change the `width` through grid column classes, width utilities, or inline styles.\n\n\u003CExample code={`\u003Cspan class=\"placeholder col-6\">\u003C/span>\n\u003Cspan class=\"placeholder w-75\">\u003C/span>\n\u003Cspan class=\"placeholder\" style=\"width: 25%;\">\u003C/span>`} />\n\n### Color\n\nBy default, the `placeholder` uses `currentColor`. This can be overridden with a custom color or utility class.\n\n\u003CExample code={[\n  `\u003Cspan class=\"placeholder col-12\">\u003C/span>\n  `,\n  ...getData('theme-colors').map((themeColor) => `\u003Cspan class=\"placeholder col-12 bg-${themeColor.name}\">\u003C/span>`)\n]} />\n\n### Sizing\n\nThe size of `.placeholder`s are based on the typographic style of the parent element. Customize them with sizing modifiers: `.placeholder-lg`, `.placeholder-sm`, or `.placeholder-xs`.\n\n\u003CExample code={`\u003Cspan class=\"placeholder col-12 placeholder-lg\">\u003C/span>\n\u003Cspan class=\"placeholder col-12\">\u003C/span>\n\u003Cspan class=\"placeholder col-12 placeholder-sm\">\u003C/span>\n\u003Cspan class=\"placeholder col-12 placeholder-xs\">\u003C/span>`} />\n\n### Animation\n\nAnimate placeholders with `.placeholder-glow` or `.placeholder-wave` to better convey the perception of something being *actively* loaded.\n\n\u003CExample code={`\u003Cp class=\"placeholder-glow\">\n  \u003Cspan class=\"placeholder col-12\">\u003C/span>\n\u003C/p>\n\n\u003Cp class=\"placeholder-wave\">\n  \u003Cspan class=\"placeholder col-12\">\u003C/span>\n\u003C/p>`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"placeholders\" file=\"scss/_variables.scss\" />","src/content/docs/components/placeholders.mdx","56d3913eae45f526","components/placeholders.mdx","components/progress",{"id":506,"data":508,"body":511,"filePath":512,"digest":513,"legacyId":514,"deferredRender":139},{"description":509,"title":510,"toc":139},"Documentation and examples for using Bootstrap custom progress bars featuring support for stacked bars, animated backgrounds, and text labels.","Progress","\u003CCallout>\n**New markup in v5.3.0 —** We've deprecated the previous HTML structure for progress bars and replaced it with a more accessible one. The previous structure will continue to work until v6. [See what's changed in our migration guide.]([[docsref:/migration#improved-markup-for-progress-bars]])\n\u003C/Callout>\n\n## How it works\n\nProgress components are built with two HTML elements, some CSS to set the width, and a few attributes. We don't use [the HTML5 `\u003Cprogress>` element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress), ensuring you can stack progress bars, animate them, and place text labels over them.\n\n- We use the `.progress` as a wrapper to indicate the max value of the progress bar.\n- The `.progress` wrapper also requires a `role=\"progressbar\"` and `aria` attributes to make it accessible, including an accessible name (using `aria-label`, `aria-labelledby`, or similar).\n- We use the inner `.progress-bar` purely for the visual bar and label.\n- The `.progress-bar` requires an inline style, utility class, or custom CSS to set its width.\n- We provide a special `.progress-stacked` class to create multiple/stacked progress bars.\n\nPut that all together, and you have the following examples.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 0%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 25%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 50%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 75%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 100%\">\u003C/div>\n\u003C/div>`} />\n\n## Bar sizing\n\n### Width\n\nBootstrap provides a handful of [utilities for setting width]([[docsref:/utilities/sizing]]). Depending on your needs, these may help with quickly configuring the width of the `.progress-bar`.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar w-75\">\u003C/div>\n\u003C/div>`} />\n\n### Height\n\nYou only set a `height` value on the `.progress` container, so if you change that value, the inner `.progress-bar` will automatically resize accordingly.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Example 1px high\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"height: 1px\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 25%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Example 20px high\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"height: 20px\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 25%\">\u003C/div>\n\u003C/div>`} />\n\n## Labels\n\nAdd labels to your progress bars by placing text within the `.progress-bar`.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Example with label\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar\" style=\"width: 25%\">25%\u003C/div>\n\u003C/div>`} />\n\nNote that by default, the content inside the `.progress-bar` is controlled with `overflow: hidden`, so it doesn't bleed out of the bar. If your progress bar is shorter than its label, the content will be capped and may become unreadable. To change this behavior, you can use `.overflow-visible` from the [overflow utilities]([[docsref:/utilities/overflow]]), but make sure to also define an explicit [text color]([[docsref:/utilities/colors#colors]]) so the text remains readable. Be aware though that currently this approach does not take into account [color modes]([[docsref:/customize/color-modes]]).\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Example with label\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar overflow-visible text-dark\" style=\"width: 10%\">Long label text for the progress bar, set to a dark color\u003C/div>\n\u003C/div>`} />\n\n## Backgrounds\n\nUse background utility classes to change the appearance of individual progress bars.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Success example\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-success\" style=\"width: 25%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Info example\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-info\" style=\"width: 50%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Warning example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-warning\" style=\"width: 75%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Danger example\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-danger\" style=\"width: 100%\">\u003C/div>\n\u003C/div>`} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\nIf you're adding labels to progress bars with a custom background color, make sure to also set an appropriate [text color]([[docsref:/utilities/colors#colors]]), so the labels remain readable and have sufficient contrast.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Success example\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-success\" style=\"width: 25%\">25%\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Info example\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-info text-dark\" style=\"width: 50%\">50%\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Warning example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-warning text-dark\" style=\"width: 75%\">75%\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Danger example\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar bg-danger\" style=\"width: 100%\">100%\u003C/div>\n\u003C/div>`} />\n\nAlternatively, you can use the new combined [color and background]([[docsref:/helpers/color-background]]) helper classes.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Warning example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar text-bg-warning\" style=\"width: 75%\">75%\u003C/div>\n\u003C/div>`} />\n\n## Multiple bars\n\nYou can include multiple progress components inside a container with `.progress-stacked` to create a single stacked progress bar. Note that in this case, the styling to set the visual width of the progress bar *must* be applied to the `.progress` elements, rather than the `.progress-bar`s.\n\n\u003CExample code={`\u003Cdiv class=\"progress-stacked\">\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Segment one\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 15%\">\n    \u003Cdiv class=\"progress-bar\">\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Segment two\" aria-valuenow=\"30\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 30%\">\n    \u003Cdiv class=\"progress-bar bg-success\">\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Segment three\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 20%\">\n    \u003Cdiv class=\"progress-bar bg-info\">\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Striped\n\nAdd `.progress-bar-striped` to any `.progress-bar` to apply a stripe via CSS gradient over the progress bar's background color.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Default striped example\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar progress-bar-striped\" style=\"width: 10%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Success striped example\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar progress-bar-striped bg-success\" style=\"width: 25%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Info striped example\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar progress-bar-striped bg-info\" style=\"width: 50%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Warning striped example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar progress-bar-striped bg-warning\" style=\"width: 75%\">\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Danger striped example\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar progress-bar-striped bg-danger\" style=\"width: 100%\">\u003C/div>\n\u003C/div>`} />\n\n## Animated stripes\n\nThe striped gradient can also be animated. Add `.progress-bar-animated` to `.progress-bar` to animate the stripes right to left via CSS3 animations.\n\n\u003CExample code={`\u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Animated striped example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n  \u003Cdiv class=\"progress-bar progress-bar-striped progress-bar-animated\" style=\"width: 75%\">\u003C/div>\n\u003C/div>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, progress bars now use local CSS variables on `.progress` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"progress-css-vars\" file=\"scss/_progress.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"progress-variables\" file=\"scss/_variables.scss\" />\n\n### Keyframes\n\nUsed for creating the CSS animations for `.progress-bar-animated`. Included in `scss/_progress-bar.scss`.\n\n\u003CScssDocs name=\"progress-keyframes\" file=\"scss/_progress.scss\" />","src/content/docs/components/progress.mdx","8b5397342695d8b0","components/progress.mdx","components/popovers",{"id":515,"data":517,"body":520,"filePath":521,"digest":522,"legacyId":523,"deferredRender":139},{"description":518,"title":519,"toc":139},"Documentation and examples for adding Bootstrap popovers, like those found in iOS, to any element on your site.","Popovers","## Overview\n\nThings to know when using the popover plugin:\n\n- Popovers rely on the third party library [Popper](https://popper.js.org/docs/v2/) for positioning. You must include [popper.min.js]([[config:cdn.popper]]) before `bootstrap.js`, or use one `bootstrap.bundle.min.js` which contains Popper.\n- Popovers require the [popover plugin]([[docsref:/components/popovers]]) as a dependency.\n- Popovers are opt-in for performance reasons, so **you must initialize them yourself**.\n- Zero-length `title` and `content` values will never show a popover.\n- Specify `container: 'body'` to avoid rendering problems in more complex components (like our input groups, button groups, etc).\n- Triggering popovers on hidden elements will not work.\n- Popovers for `.disabled` or `disabled` elements must be triggered on a wrapper element.\n- When triggered from anchors that wrap across multiple lines, popovers will be centered between the anchors' overall width. Use `.text-nowrap` on your `\u003Ca>`s to avoid this behavior.\n- Popovers must be hidden before their corresponding elements have been removed from the DOM.\n- Popovers can be triggered thanks to an element inside a shadow DOM.\n\n\u003CCallout name=\"info-sanitizer\" />\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\nKeep reading to see how popovers work with some examples.\n\n## Examples\n\n### Enable popovers\n\nAs mentioned above, you must initialize popovers before they can be used. One way to initialize all popovers on a page would be to select them by their `data-bs-toggle` attribute, like so:\n\n```js\nconst popoverTriggerList = document.querySelectorAll('[data-bs-toggle=\"popover\"]')\nconst popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl))\n```\n\n### Live demo\n\nWe use JavaScript similar to the snippet above to render the following live popover. Titles are set via `data-bs-title` and body content is set via `data-bs-content`.\n\n\u003CCallout name=\"warning-data-bs-title-vs-title\" type=\"warning\" />\n\n\u003CExample addStackblitzJs code={`\u003Cbutton type=\"button\" class=\"btn btn-lg btn-danger\" data-bs-toggle=\"popover\" data-bs-title=\"Popover title\" data-bs-content=\"And here's some amazing content. It's very engaging. Right?\">Click to toggle popover\u003C/button>`} />\n\n### Four directions\n\nFour options are available: top, right, bottom, and left. Directions are mirrored when using Bootstrap in RTL. Set `data-bs-placement` to change the direction.\n\n\u003CExample addStackblitzJs code={`\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"top\" data-bs-content=\"Top popover\">\n  Popover on top\n\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"right\" data-bs-content=\"Right popover\">\n  Popover on right\n\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"bottom\" data-bs-content=\"Bottom popover\">\n  Popover on bottom\n\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"left\" data-bs-content=\"Left popover\">\n  Popover on left\n\u003C/button>`} />\n\n### Custom `container`\n\nWhen you have some styles on a parent element that interfere with a popover, you'll want to specify a custom `container` so that the popover's HTML appears within that element instead. This is common in responsive tables, input groups, and the like.\n\n```js\nconst popover = new bootstrap.Popover('.example-popover', {\n  container: 'body'\n})\n```\n\nAnother situation where you'll want to set an explicit custom `container` are popovers inside a [modal dialog]([[docsref:/components/modal]]), to make sure that the popover itself is appended to the modal. This is particularly important for popovers that contain interactive elements – modal dialogs will trap focus, so unless the popover is a child element of the modal, users won't be able to focus or activate these interactive elements.\n\n```js\nconst popover = new bootstrap.Popover('.example-popover', {\n  container: '.modal-body'\n})\n```\n\n### Custom popovers\n\n\u003CAddedIn version=\"5.2.0\" />\n\nYou can customize the appearance of popovers using [CSS variables](#variables). We set a custom class with `data-bs-custom-class=\"custom-popover\"` to scope our custom appearance and use it to override some of the local CSS variables.\n\n\u003CScssDocs name=\"custom-popovers\" file=\"site/src/scss/_component-examples.scss\" />\n\n\u003CExample addStackblitzJs class=\"custom-popover-demo\" code={`\u003Cbutton type=\"button\" class=\"btn btn-secondary\"\n        data-bs-toggle=\"popover\" data-bs-placement=\"right\"\n        data-bs-custom-class=\"custom-popover\"\n        data-bs-title=\"Custom popover\"\n        data-bs-content=\"This popover is themed via CSS variables.\">\n  Custom popover\n\u003C/button>`} />\n\n### Dismiss on next click\n\nUse the `focus` trigger to dismiss popovers on the user's next click of an element other than the toggle element.\n\n\u003CCallout type=\"danger\">\n**Dismissing on next click requires specific HTML for proper cross-browser and cross-platform behavior.** You can only use `\u003Ca>` elements, not `\u003Cbutton>`s, and you must include a [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex).\n\u003C/Callout>\n\n\u003CExample addStackblitzJs code={`\u003Ca tabindex=\"0\" class=\"btn btn-lg btn-danger\" role=\"button\" data-bs-toggle=\"popover\" data-bs-trigger=\"focus\" data-bs-title=\"Dismissible popover\" data-bs-content=\"And here's some amazing content. It's very engaging. Right?\">Dismissible popover\u003C/a>`} />\n\n```js\nconst popover = new bootstrap.Popover('.popover-dismiss', {\n  trigger: 'focus'\n})\n```\n\n### Disabled elements\n\nElements with the `disabled` attribute aren't interactive, meaning users cannot hover or click them to trigger a popover (or tooltip). As a workaround, you'll want to trigger the popover from a wrapper `\u003Cdiv>` or `\u003Cspan>`, ideally made keyboard-focusable using `tabindex=\"0\"`.\n\nFor disabled popover triggers, you may also prefer `data-bs-trigger=\"hover focus\"` so that the popover appears as immediate visual feedback to your users as they may not expect to _click_ on a disabled element.\n\n\u003CExample addStackblitzJs code={`\u003Cspan class=\"d-inline-block\" tabindex=\"0\" data-bs-toggle=\"popover\" data-bs-trigger=\"hover focus\" data-bs-content=\"Disabled popover\">\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\" disabled>Disabled button\u003C/button>\n\u003C/span>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap’s evolving CSS variables approach, popovers now use local CSS variables on `.popover` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"popover-css-vars\" file=\"scss/_popover.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"popover-variables\" file=\"scss/_variables.scss\" />\n\n## Usage\n\nEnable popovers via JavaScript:\n\n```js\nconst exampleEl = document.getElementById('example')\nconst popover = new bootstrap.Popover(exampleEl, options)\n```\n\n\u003CCallout type=\"warning\">\n**Keep popovers accessible to keyboard and assistive technology users** by only adding them to HTML elements that are traditionally keyboard-focusable and interactive (such as links or form controls). While other HTML elements can be made focusable by adding `tabindex=\"0\"`, this can create annoying and confusing tab stops on non-interactive elements for keyboard users, and most assistive technologies currently do not announce popovers in this situation. Additionally, do not rely solely on `hover` as the trigger for your popovers as this will make them impossible to trigger for keyboard users.\n\nAvoid adding an excessive amount of content in popovers with the `html` option. Once popovers are displayed, their content is tied to the trigger element with the `aria-describedby` attribute, causing all of the popover's content to be announced to assistive technology users as one long, uninterrupted stream.\n\nPopovers do not manage keyboard focus order, and their placement can be random in the DOM, so be careful when adding interactive elements (like forms or links), as it may lead to an illogical focus order or make the popover content itself completely unreachable for keyboard users. In cases where you must use these elements, consider using a modal dialog instead.\n\u003C/Callout>\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CCallout type=\"warning\">\nNote that for security reasons the `sanitize`, `sanitizeFn`, and `allowList` options cannot be supplied using data attributes.\n\u003C/Callout>\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `allowList` | object | [Default value]([[docsref:/getting-started/javascript#sanitizer]]) | Object which contains allowed attributes and tags. |\n| `animation` | boolean | `true` | Apply a CSS fade transition to the popover. |\n| `boundary` | string, element | `'clippingParents'` | Overflow constraint boundary of the popover (applies only to Popper's preventOverflow modifier). By default, it's `'clippingParents'` and can accept an HTMLElement reference (via JavaScript only). For more information refer to Popper's [detectOverflow docs](https://popper.js.org/docs/v2/utils/detect-overflow/#boundary). |\n| `container` | string, element, false | `false` | Appends the popover to a specific element. Example: `container: 'body'`. This option is particularly useful in that it allows you to position the popover in the flow of the document near the triggering element -&nbsp;which will prevent the popover from floating away from the triggering element during a window resize. |\n| `content` | string, element, function | `''` | The popover's text content. If a function is given, it will be called with its `this` reference set to the element that the popover is attached to. |\n| `customClass` | string, function | `''` | Add classes to the popover when it is shown. Note that these classes will be added in addition to any classes specified in the template. To add multiple classes, separate them with spaces: `'class-1 class-2'`. You can also pass a function that should return a single string containing additional class names. |\n| `delay` | number, object | `0` | Delay showing and hiding the popover (ms)—doesn't apply to manual trigger type. If a number is supplied, delay is applied to both hide/show. Object structure is: `delay: { \"show\": 500, \"hide\": 100 }`. |\n| `fallbackPlacements` | string, array | `['top', 'right', 'bottom', 'left']` | Define fallback placements by providing a list of placements in array (in order of preference). For more information refer to Popper's [behavior docs](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements). |\n| `html` | boolean | `false` | Allow HTML in the popover. If true, HTML tags in the popover's `title` will be rendered in the popover. If false, `innerText` property will be used to insert content into the DOM. Use text if you're worried about XSS attacks. |\n| `offset` | number, string, function | `[0, 8]` | Offset of the popover relative to its target. You can pass a string in data attributes with comma separated values like: `data-bs-offset=\"10,20\"`. When a function is used to determine the offset, it is called with an object containing the popper placement, the reference, and popper rects as its first argument. The triggering element DOM node is passed as the second argument. The function must return an array with two numbers: [skidding](https://popper.js.org/docs/v2/modifiers/offset/#skidding-1), [distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1). For more information refer to Popper's [offset docs](https://popper.js.org/docs/v2/modifiers/offset/#options). |\n| `placement` | string, function | `'right'` | How to position the popover: auto, top, bottom, left, right. When `auto` is specified, it will dynamically reorient the popover. When a function is used to determine the placement, it is called with the popover DOM node as its first argument and the triggering element DOM node as its second. The `this` context is set to the popover instance. |\n| `popperConfig` | null, object, function | `null` | To change Bootstrap's default Popper config, see [Popper's configuration](https://popper.js.org/docs/v2/constructors/#options). When a function is used to create the Popper configuration, it's called with an object that contains the Bootstrap's default Popper configuration. It helps you use and merge the default with your own configuration. The function must return a configuration object for Popper. |\n| `sanitize` | boolean | `true` | Enable or disable the sanitization. If activated `'template'`, `'content'` and `'title'` options will be sanitized. |\n| `sanitizeFn` | null, function | `null` | Here you can supply your own sanitize function. This can be useful if you prefer to use a dedicated library to perform sanitization. |\n| `selector` | string, false | `false` | If a selector is provided, popover objects will be delegated to the specified targets. In practice, this is used to also apply popovers to dynamically added DOM elements (`jQuery.on` support). See [this issue]([[config:repo]]/issues/4215) and [an informative example](https://codepen.io/Johann-S/pen/djJYPb). **Note**: `title` attribute must not be used as a selector. |\n| `template` | string | `'\u003Cdiv class=\"popover\" role=\"tooltip\">\u003Cdiv class=\"popover-arrow\">\u003C/div>\u003Ch3 class=\"popover-header\">\u003C/h3>\u003Cdiv class=\"popover-body\">\u003C/div>\u003C/div>'` | Base HTML to use when creating the popover. The popover's `title` will be injected into the `.popover-header`. The popover's `content` will be injected into the `.popover-body`. `.popover-arrow` will become the popover's arrow. The outermost wrapper element should have the `.popover` class and `role=\"tooltip\"`. |\n| `title` | string, element, function | `''` | The popover title. If a function is given, it will be called with its `this` reference set to the element that the popover is attached to. |\n| `trigger` | string | `'click'` | How popover is triggered: click, hover, focus, manual. You may pass multiple triggers; separate them with a space. `'manual'` indicates that the popover will be triggered programmatically via the `.popover('show')`, `.popover('hide')` and `.popover('toggle')` methods; this value cannot be combined with any other trigger. `'hover'` on its own will result in popovers that cannot be triggered via the keyboard, and should only be used if alternative methods for conveying the same information for keyboard users is present. |\n\u003C/BsTable>\n\n\u003CCallout>\n#### Data attributes for individual popovers\n\nOptions for individual popovers can alternatively be specified through the use of data attributes, as explained above.\n\u003C/Callout>\n\n#### Using function with `popperConfig`\n\n```js\nconst popover = new bootstrap.Popover(element, {\n  popperConfig(defaultBsPopperConfig) {\n    // const newPopperConfig = {...}\n    // use defaultBsPopperConfig if needed...\n    // return newPopperConfig\n  }\n})\n```\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `disable` | Removes the ability for an element's popover to be shown. The popover will only be able to be shown if it is re-enabled. |\n| `dispose` | Hides and destroys an element's popover (Removes stored data on the DOM element). Popovers that use delegation (which are created using [the `selector` option](#options)) cannot be individually destroyed on descendant trigger elements. |\n| `enable` | Gives an element's popover the ability to be shown. **Popovers are enabled by default.** |\n| `getInstance` | _Static_ method which allows you to get the popover instance associated with a DOM element. |\n| `getOrCreateInstance` | _Static_ method which allows you to get the popover instance associated with a DOM element, or create a new one in case it wasn't initialized. |\n| `hide` | Hides an element's popover. **Returns to the caller before the popover has actually been hidden** (i.e. before the `hidden.bs.popover` event occurs). This is considered a \"manual\" triggering of the popover. |\n| `setContent` | Gives a way to change the popover's content after its initialization. |\n| `show` | Reveals an element's popover. **Returns to the caller before the popover has actually been shown** (i.e. before the `shown.bs.popover` event occurs). This is considered a \"manual\" triggering of the popover. Popovers whose title and content are both zero-length are never displayed. |\n| `toggle` | Toggles an element's popover. **Returns to the caller before the popover has actually been shown or hidden** (i.e. before the `shown.bs.popover` or `hidden.bs.popover` event occurs). This is considered a \"manual\" triggering of the popover. |\n| `toggleEnabled` | Toggles the ability for an element's popover to be shown or hidden. |\n| `update` | Updates the position of an element's popover. |\n\u003C/BsTable>\n\n\n```js\n// getOrCreateInstance example\nconst popover = bootstrap.Popover.getOrCreateInstance('#example') // Returns a Bootstrap popover instance\n\n// setContent example\npopover.setContent({\n  '.popover-header': 'another title',\n  '.popover-body': 'another content'\n})\n\n```\n\n\u003CCallout>\nThe `setContent` method accepts an `object` argument, where each property-key is a valid `string` selector within the popover template, and each related property-value can be `string` | `element` | `function` | `null`\n\u003C/Callout>\n\n### Events\n\n\u003CBsTable>\n| Event | Description |\n| --- | --- |\n| `hide.bs.popover` | This event is fired immediately when the `hide` instance method has been called. |\n| `hidden.bs.popover` | This event is fired when the popover has finished being hidden from the user (will wait for CSS transitions to complete). |\n| `inserted.bs.popover` | This event is fired after the `show.bs.popover` event when the popover template has been added to the DOM. |\n| `show.bs.popover` | This event fires immediately when the `show` instance method is called. |\n| `shown.bs.popover` | This event is fired when the popover has been made visible to the user (will wait for CSS transitions to complete). |\n\u003C/BsTable>\n\n```js\nconst myPopoverTrigger = document.getElementById('myPopover')\nmyPopoverTrigger.addEventListener('hidden.bs.popover', () => {\n  // do something...\n})\n```","src/content/docs/components/popovers.mdx","9a35f5b7a8d0c3f1","components/popovers.mdx","components/scrollspy",{"id":524,"data":526,"body":529,"filePath":530,"digest":531,"legacyId":532,"deferredRender":139},{"description":527,"title":528,"toc":139},"Automatically update Bootstrap navigation or list group components based on scroll position to indicate which link is currently active in the viewport.","Scrollspy","## How it works\n\nScrollspy toggles the `.active` class on anchor (`\u003Ca>`) elements when the element with the `id` referenced by the anchor's `href` is scrolled into view. Scrollspy is best used in conjunction with a Bootstrap [nav component]([[docsref:/components/navs-tabs]]) or [list group]([[docsref:/components/list-group]]), but it will also work with any anchor elements in the current page. Here's how it works.\n\n- To start, scrollspy requires two things: a navigation, list group, or a simple set of links, plus a scrollable container. The scrollable container can be the `\u003Cbody>` or a custom element with a set `height` and `overflow-y: scroll`.\n\n- On the scrollable container, add `data-bs-spy=\"scroll\"` and `data-bs-target=\"#navId\"` where `navId` is the unique `id` of the associated navigation. If there is no focusable element inside the element, be sure to also include a `tabindex=\"0\"` to ensure keyboard access.\n\n- As you scroll the \"spied\" container, an `.active` class is added and removed from anchor links within the associated navigation. Links must have resolvable `id` targets, otherwise they're ignored. For example, a `\u003Ca href=\"#home\">home\u003C/a>` must correspond to something in the DOM like `\u003Cdiv id=\"home\">\u003C/div>`\n\n- Target elements that are not visible will be ignored. See the [Non-visible elements](#non-visible-elements) section below.\n\n## Examples\n\n### Navbar\n\nScroll the area below the navbar and watch the active class change. Open the dropdown menu and watch the dropdown items be highlighted as well.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cnav id=\"navbar-example2\" class=\"navbar bg-body-tertiary px-3 mb-3 rounded-2\">\n    \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n    \u003Cul class=\"nav nav-pills\">\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link\" href=\"#scrollspyHeading1\">First\u003C/a>\n      \u003C/li>\n      \u003Cli class=\"nav-item\">\n        \u003Ca class=\"nav-link\" href=\"#scrollspyHeading2\">Second\u003C/a>\n      \u003C/li>\n      \u003Cli class=\"nav-item dropdown\">\n        \u003Ca class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">Dropdown\u003C/a>\n        \u003Cul class=\"dropdown-menu\">\n          \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#scrollspyHeading3\">Third\u003C/a>\u003C/li>\n          \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#scrollspyHeading4\">Fourth\u003C/a>\u003C/li>\n          \u003Cli>\u003Chr class=\"dropdown-divider\"/>\u003C/li>\n          \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#scrollspyHeading5\">Fifth\u003C/a>\u003C/li>\n        \u003C/ul>\n      \u003C/li>\n    \u003C/ul>\n  \u003C/nav>\n  \u003Cdiv class=\"scrollspy-example bg-body-tertiary p-3 rounded-2\" data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example2\" data-bs-root-margin=\"0px 0px -40%\" data-bs-smooth-scroll=\"true\" tabindex=\"0\">\n    \u003Ch4 id=\"scrollspyHeading1\">First heading\u003C/h4>\n    \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n    \u003Ch4 id=\"scrollspyHeading2\">Second heading\u003C/h4>\n    \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n    \u003Ch4 id=\"scrollspyHeading3\">Third heading\u003C/h4>\n    \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n    \u003Ch4 id=\"scrollspyHeading4\">Fourth heading\u003C/h4>\n    \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n    \u003Ch4 id=\"scrollspyHeading5\">Fifth heading\u003C/h4>\n    \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cnav id=\"navbar-example2\" class=\"navbar bg-body-tertiary px-3 mb-3\">\n  \u003Ca class=\"navbar-brand\" href=\"#\">Navbar\u003C/a>\n  \u003Cul class=\"nav nav-pills\">\n    \u003Cli class=\"nav-item\">\n      \u003Ca class=\"nav-link\" href=\"#scrollspyHeading1\">First\u003C/a>\n    \u003C/li>\n    \u003Cli class=\"nav-item\">\n      \u003Ca class=\"nav-link\" href=\"#scrollspyHeading2\">Second\u003C/a>\n    \u003C/li>\n    \u003Cli class=\"nav-item dropdown\">\n      \u003Ca class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">Dropdown\u003C/a>\n      \u003Cul class=\"dropdown-menu\">\n        \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#scrollspyHeading3\">Third\u003C/a>\u003C/li>\n        \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#scrollspyHeading4\">Fourth\u003C/a>\u003C/li>\n        \u003Cli>\u003Chr class=\"dropdown-divider\" />\u003C/li>\n        \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#scrollspyHeading5\">Fifth\u003C/a>\u003C/li>\n      \u003C/ul>\n    \u003C/li>\n  \u003C/ul>\n\u003C/nav>\n\u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example2\" data-bs-root-margin=\"0px 0px -40%\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example bg-body-tertiary p-3 rounded-2\" tabindex=\"0\">\n  \u003Ch4 id=\"scrollspyHeading1\">First heading\u003C/h4>\n  \u003Cp>...\u003C/p>\n  \u003Ch4 id=\"scrollspyHeading2\">Second heading\u003C/h4>\n  \u003Cp>...\u003C/p>\n  \u003Ch4 id=\"scrollspyHeading3\">Third heading\u003C/h4>\n  \u003Cp>...\u003C/p>\n  \u003Ch4 id=\"scrollspyHeading4\">Fourth heading\u003C/h4>\n  \u003Cp>...\u003C/p>\n  \u003Ch4 id=\"scrollspyHeading5\">Fifth heading\u003C/h4>\n  \u003Cp>...\u003C/p>\n\u003C/div>\n```\n\n### Nested nav\n\nScrollspy also works with nested `.nav`s. If a nested `.nav` is `.active`, its parents will also be `.active`. Scroll the area next to the navbar and watch the active class change.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-4\">\n      \u003Cnav id=\"navbar-example3\" class=\"h-100 flex-column align-items-stretch pe-4 border-end\">\n        \u003Cnav class=\"nav nav-pills flex-column\">\n          \u003Ca class=\"nav-link\" href=\"#item-1\">Item 1\u003C/a>\n          \u003Cnav class=\"nav nav-pills flex-column\">\n            \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-1-1\">Item 1-1\u003C/a>\n            \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-1-2\">Item 1-2\u003C/a>\n          \u003C/nav>\n          \u003Ca class=\"nav-link\" href=\"#item-2\">Item 2\u003C/a>\n          \u003Ca class=\"nav-link\" href=\"#item-3\">Item 3\u003C/a>\n          \u003Cnav class=\"nav nav-pills flex-column\">\n            \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-3-1\">Item 3-1\u003C/a>\n            \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-3-2\">Item 3-2\u003C/a>\n          \u003C/nav>\n        \u003C/nav>\n      \u003C/nav>\n    \u003C/div>\n    \u003Cdiv class=\"col-8\">\n      \u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example3\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example-2\" tabindex=\"0\">\n        \u003Cdiv id=\"item-1\">\n          \u003Ch4>Item 1\u003C/h4>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n        \u003Cdiv id=\"item-1-1\">\n          \u003Ch5>Item 1-1\u003C/h5>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n        \u003Cdiv id=\"item-1-2\">\n          \u003Ch5>Item 1-2\u003C/h5>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n        \u003Cdiv id=\"item-2\">\n          \u003Ch4>Item 2\u003C/h4>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n        \u003Cdiv id=\"item-3\">\n          \u003Ch4>Item 3\u003C/h4>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n        \u003Cdiv id=\"item-3-1\">\n          \u003Ch5>Item 3-1\u003C/h5>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n        \u003Cdiv id=\"item-3-2\">\n          \u003Ch5>Item 3-2\u003C/h5>\n          \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n          \u003Cp>Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible. Multiple visible scrollspy targets at the same time may cause some issues.\u003C/p>\n        \u003C/div>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col-4\">\n    \u003Cnav id=\"navbar-example3\" class=\"h-100 flex-column align-items-stretch pe-4 border-end\">\n      \u003Cnav class=\"nav nav-pills flex-column\">\n        \u003Ca class=\"nav-link\" href=\"#item-1\">Item 1\u003C/a>\n        \u003Cnav class=\"nav nav-pills flex-column\">\n          \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-1-1\">Item 1-1\u003C/a>\n          \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-1-2\">Item 1-2\u003C/a>\n        \u003C/nav>\n        \u003Ca class=\"nav-link\" href=\"#item-2\">Item 2\u003C/a>\n        \u003Ca class=\"nav-link\" href=\"#item-3\">Item 3\u003C/a>\n        \u003Cnav class=\"nav nav-pills flex-column\">\n          \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-3-1\">Item 3-1\u003C/a>\n          \u003Ca class=\"nav-link ms-3 my-1\" href=\"#item-3-2\">Item 3-2\u003C/a>\n        \u003C/nav>\n      \u003C/nav>\n    \u003C/nav>\n  \u003C/div>\n\n  \u003Cdiv class=\"col-8\">\n    \u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example3\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example-2\" tabindex=\"0\">\n      \u003Cdiv id=\"item-1\">\n        \u003Ch4>Item 1\u003C/h4>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n      \u003Cdiv id=\"item-1-1\">\n        \u003Ch5>Item 1-1\u003C/h5>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n      \u003Cdiv id=\"item-1-2\">\n        \u003Ch5>Item 1-2\u003C/h5>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n      \u003Cdiv id=\"item-2\">\n        \u003Ch4>Item 2\u003C/h4>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n      \u003Cdiv id=\"item-3\">\n        \u003Ch4>Item 3\u003C/h4>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n      \u003Cdiv id=\"item-3-1\">\n        \u003Ch5>Item 3-1\u003C/h5>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n      \u003Cdiv id=\"item-3-2\">\n        \u003Ch5>Item 3-2\u003C/h5>\n        \u003Cp>...\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### List group\n\nScrollspy also works with `.list-group`s. Scroll the area next to the list group and watch the active class change.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-4\">\n      \u003Cdiv id=\"list-example\" class=\"list-group\">\n        \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-1\">Item 1\u003C/a>\n        \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-2\">Item 2\u003C/a>\n        \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-3\">Item 3\u003C/a>\n        \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-4\">Item 4\u003C/a>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-8\">\n      \u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#list-example\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example\" tabindex=\"0\">\n        \u003Ch4 id=\"list-item-1\">Item 1\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"list-item-2\">Item 2\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"list-item-3\">Item 3\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"list-item-4\">Item 4\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col-4\">\n    \u003Cdiv id=\"list-example\" class=\"list-group\">\n      \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-1\">Item 1\u003C/a>\n      \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-2\">Item 2\u003C/a>\n      \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-3\">Item 3\u003C/a>\n      \u003Ca class=\"list-group-item list-group-item-action\" href=\"#list-item-4\">Item 4\u003C/a>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-8\">\n    \u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#list-example\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example\" tabindex=\"0\">\n      \u003Ch4 id=\"list-item-1\">Item 1\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"list-item-2\">Item 2\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"list-item-3\">Item 3\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"list-item-4\">Item 4\u003C/h4>\n      \u003Cp>...\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n### Simple anchors\n\nScrollspy is not limited to nav components and list groups, so it will work on any `\u003Ca>` anchor elements in the current document. Scroll the area and watch the `.active` class change.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-4\">\n      \u003Cdiv id=\"simple-list-example\" class=\"d-flex flex-column gap-2 simple-list-example-scrollspy text-center\">\n        \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-1\">Item 1\u003C/a>\n        \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-2\">Item 2\u003C/a>\n        \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-3\">Item 3\u003C/a>\n        \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-4\">Item 4\u003C/a>\n        \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-5\">Item 5\u003C/a>\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-8\">\n      \u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#simple-list-example\" data-bs-offset=\"0\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example\" tabindex=\"0\">\n        \u003Ch4 id=\"simple-list-item-1\">Item 1\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"simple-list-item-2\">Item 2\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"simple-list-item-3\">Item 3\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"simple-list-item-4\">Item 4\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n        \u003Ch4 id=\"simple-list-item-5\">Item 5\u003C/h4>\n        \u003Cp>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It's repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.\u003C/p>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col-4\">\n    \u003Cdiv id=\"simple-list-example\" class=\"d-flex flex-column gap-2 simple-list-example-scrollspy text-center\">\n      \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-1\">Item 1\u003C/a>\n      \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-2\">Item 2\u003C/a>\n      \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-3\">Item 3\u003C/a>\n      \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-4\">Item 4\u003C/a>\n      \u003Ca class=\"p-1 rounded\" href=\"#simple-list-item-5\">Item 5\u003C/a>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-8\">\n    \u003Cdiv data-bs-spy=\"scroll\" data-bs-target=\"#simple-list-example\" data-bs-offset=\"0\" data-bs-smooth-scroll=\"true\" class=\"scrollspy-example\" tabindex=\"0\">\n      \u003Ch4 id=\"simple-list-item-1\">Item 1\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"simple-list-item-2\">Item 2\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"simple-list-item-3\">Item 3\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"simple-list-item-4\">Item 4\u003C/h4>\n      \u003Cp>...\u003C/p>\n      \u003Ch4 id=\"simple-list-item-5\">Item 5\u003C/h4>\n      \u003Cp>...\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\n## Non-visible elements\n\nTarget elements that aren’t visible will be ignored and their corresponding nav items won't receive an `.active` class. Scrollspy instances initialized in a non-visible wrapper will ignore all target elements. Use the `refresh` method to check for observable elements once the wrapper becomes visible.\n\n```js\ndocument.querySelectorAll('#nav-tab>[data-bs-toggle=\"tab\"]').forEach(el => {\n  el.addEventListener('shown.bs.tab', () => {\n    const target = el.getAttribute('data-bs-target')\n    const scrollElem = document.querySelector(`${target} [data-bs-spy=\"scroll\"]`)\n    bootstrap.ScrollSpy.getOrCreateInstance(scrollElem).refresh()\n  })\n})\n```\n\n## Usage\n\n### Via data attributes\n\nTo easily add scrollspy behavior to your topbar navigation, add `data-bs-spy=\"scroll\"` to the element you want to spy on (most typically this would be the `\u003Cbody>`). Then add the `data-bs-target` attribute with the `id` or class name of the parent element of any Bootstrap `.nav` component.\n\n```html\n\u003Cbody data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example\">\n  ...\n  \u003Cdiv id=\"navbar-example\">\n    \u003Cul class=\"nav nav-tabs\" role=\"tablist\">\n      ...\n    \u003C/ul>\n  \u003C/div>\n  ...\n\u003C/body>\n```\n\n### Via JavaScript\n\n```js\nconst scrollSpy = new bootstrap.ScrollSpy(document.body, {\n  target: '#navbar-example'\n})\n```\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `rootMargin` | string | `0px 0px -25%` | Intersection Observer [rootMargin](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin) valid units, when calculating scroll position. |\n| `smoothScroll` | boolean | `false` | Enables smooth scrolling when a user clicks on a link that refers to ScrollSpy observables. |\n| `target` | string, DOM element | `null` | Specifies element to apply Scrollspy plugin. |\n| `threshold` | array | `[0.1, 0.5, 1]` | `IntersectionObserver` [threshold](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver#threshold) valid input, when calculating scroll position. |\n\n\u003C/BsTable>\n\n\u003CCallout type=\"warning\">\n**Deprecated Options**\n\nUp until v5.1.3 we were using `offset` & `method` options, which are now deprecated and replaced by `rootMargin`.\nTo keep backwards compatibility, we will continue to parse a given `offset` to `rootMargin`, but this feature will be removed in **v6**.\n\u003C/Callout>\n\n### Methods\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's scrollspy. (Removes stored data on the DOM element) |\n| `getInstance` | *Static* method to get the scrollspy instance associated with a DOM element. |\n| `getOrCreateInstance` | *Static* method to get the scrollspy instance associated with a DOM element, or to create a new one in case it wasn't initialized. |\n| `refresh` | When adding or removing elements in the DOM, you'll need to call the refresh method. |\n\u003C/BsTable>\n\nHere's an example using the refresh method:\n\n```js\nconst dataSpyList = document.querySelectorAll('[data-bs-spy=\"scroll\"]')\ndataSpyList.forEach(dataSpyEl => {\n  bootstrap.ScrollSpy.getInstance(dataSpyEl).refresh()\n})\n```\n\n### Events\n\n\u003CBsTable>\n| Event | Description |\n| --- | --- |\n| `activate.bs.scrollspy` | This event fires on the scroll element whenever an anchor is activated by the scrollspy. |\n\u003C/BsTable>\n\n```js\nconst firstScrollSpyEl = document.querySelector('[data-bs-spy=\"scroll\"]')\nfirstScrollSpyEl.addEventListener('activate.bs.scrollspy', () => {\n  // do something...\n})\n```","src/content/docs/components/scrollspy.mdx","877b13ef84739927","components/scrollspy.mdx","components/spinners",{"id":533,"data":535,"body":538,"filePath":539,"digest":540,"legacyId":541,"deferredRender":139},{"description":536,"title":537,"toc":139},"Indicate the loading state of a component or page with Bootstrap spinners, built entirely with HTML, CSS, and no JavaScript.","Spinners","import { getData } from '@libs/data'\n\n## About\n\nBootstrap \"spinners\" can be used to show the loading state in your projects. They're built only with HTML and CSS, meaning you don't need any JavaScript to create them. You will, however, need some custom JavaScript to toggle their visibility. Their appearance, alignment, and sizing can be easily customized with our amazing utility classes.\n\nFor accessibility purposes, each loader here includes `role=\"status\"` and a nested `\u003Cspan class=\"visually-hidden\">Loading...\u003C/span>`.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Border spinner\n\nUse the border spinners for a lightweight loading indicator.\n\n\u003CExample code={`\u003Cdiv class=\"spinner-border\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`} />\n\n### Colors\n\nThe border spinner uses `currentColor` for its `border-color`, meaning you can customize the color with [text color utilities][color]. You can use any of our text color utilities on the standard spinner.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"spinner-border text-${themeColor.name}\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`)} />\n\n\u003CCallout>\n**Why not use `border-color` utilities?** Each border spinner specifies a `transparent` border for at least one side, so `.border-{color}` utilities would override that.\n\u003C/Callout>\n\n## Growing spinner\n\nIf you don't fancy a border spinner, switch to the grow spinner. While it doesn't technically spin, it does repeatedly grow!\n\n\u003CExample code={`\u003Cdiv class=\"spinner-grow\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`} />\n\nOnce again, this spinner is built with `currentColor`, so you can easily change its appearance with [text color utilities][color]. Here it is in blue, along with the supported variants.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"spinner-grow text-${themeColor.name}\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`)} />\n\n## Alignment\n\nSpinners in Bootstrap are built with `rem`s, `currentColor`, and `display: inline-flex`. This means they can easily be resized, recolored, and quickly aligned.\n\n### Margin\n\nUse [margin utilities][margin] like `.m-5` for easy spacing.\n\n\u003CExample code={`\u003Cdiv class=\"spinner-border m-5\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`} />\n\n### Placement\n\nUse [flexbox utilities][flex], [float utilities][float], or [text alignment][text] utilities to place spinners exactly where you need them in any situation.\n\n#### Flex\n\n\u003CExample code={`\u003Cdiv class=\"d-flex justify-content-center\">\n  \u003Cdiv class=\"spinner-border\" role=\"status\">\n    \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"d-flex align-items-center\">\n  \u003Cstrong role=\"status\">Loading...\u003C/strong>\n  \u003Cdiv class=\"spinner-border ms-auto\" aria-hidden=\"true\">\u003C/div>\n\u003C/div>`} />\n\n#### Floats\n\n\u003CExample code={`\u003Cdiv class=\"clearfix\">\n  \u003Cdiv class=\"spinner-border float-end\" role=\"status\">\n    \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n  \u003C/div>\n\u003C/div>`} />\n\n#### Text align\n\n\u003CExample code={`\u003Cdiv class=\"text-center\">\n  \u003Cdiv class=\"spinner-border\" role=\"status\">\n    \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n  \u003C/div>\n\u003C/div>`} />\n\n## Size\n\nAdd `.spinner-border-sm` and `.spinner-grow-sm` to make a smaller spinner that can quickly be used within other components.\n\n\u003CExample code={`\u003Cdiv class=\"spinner-border spinner-border-sm\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>\n\u003Cdiv class=\"spinner-grow spinner-grow-sm\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`} />\n\nOr, use custom CSS or inline styles to change the dimensions as needed.\n\n\u003CExample code={`\u003Cdiv class=\"spinner-border\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>\n\u003Cdiv class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n  \u003Cspan class=\"visually-hidden\">Loading...\u003C/span>\n\u003C/div>`} />\n\n## Buttons\n\nUse spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" disabled>\n  \u003Cspan class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\">\u003C/span>\n  \u003Cspan class=\"visually-hidden\" role=\"status\">Loading...\u003C/span>\n\u003C/button>\n\u003Cbutton class=\"btn btn-primary\" type=\"button\" disabled>\n  \u003Cspan class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\">\u003C/span>\n  \u003Cspan role=\"status\">Loading...\u003C/span>\n\u003C/button>`} />\n\n\u003CExample code={`\u003Cbutton class=\"btn btn-primary\" type=\"button\" disabled>\n  \u003Cspan class=\"spinner-grow spinner-grow-sm\" aria-hidden=\"true\">\u003C/span>\n  \u003Cspan class=\"visually-hidden\" role=\"status\">Loading...\u003C/span>\n\u003C/button>\n\u003Cbutton class=\"btn btn-primary\" type=\"button\" disabled>\n  \u003Cspan class=\"spinner-grow spinner-grow-sm\" aria-hidden=\"true\">\u003C/span>\n  \u003Cspan role=\"status\">Loading...\u003C/span>\n\u003C/button>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, spinners now use local CSS variables on `.spinner-border` and `.spinner-grow` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\nBorder spinner variables:\n\n\u003CScssDocs name=\"spinner-border-css-vars\" file=\"scss/_spinners.scss\" />\n\nGrowing spinner variables:\n\n\u003CScssDocs name=\"spinner-grow-css-vars\" file=\"scss/_spinners.scss\" />\n\nFor both spinners, small spinner modifier classes are used to update the values of these CSS variables as needed. For example, the `.spinner-border-sm` class does the following:\n\n\u003CScssDocs name=\"spinner-border-sm-css-vars\" file=\"scss/_spinners.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"spinner-variables\" file=\"scss/_variables.scss\" />\n\n### Keyframes\n\nUsed for creating the CSS animations for our spinners. Included in `scss/_spinners.scss`.\n\n\u003CScssDocs name=\"spinner-border-keyframes\" file=\"scss/_spinners.scss\" />\n\n\u003CScssDocs name=\"spinner-grow-keyframes\" file=\"scss/_spinners.scss\" />\n\n\n[color]:   [[docsref:/utilities/colors]]\n[flex]:    [[docsref:/utilities/flex]]\n[float]:   [[docsref:/utilities/float]]\n[margin]:  [[docsref:/utilities/spacing]]\n[text]:    [[docsref:/utilities/text]]","src/content/docs/components/spinners.mdx","7df24573207db855","components/spinners.mdx","extend/icons",{"id":542,"data":544,"body":547,"filePath":548,"digest":549,"legacyId":550,"deferredRender":139},{"description":545,"title":546},"Guidance and suggestions for using external icon libraries with Bootstrap.","Icons","import { getData } from '@libs/data'\n\nWhile Bootstrap doesn't include an icon set by default, we do have our own comprehensive icon library called Bootstrap Icons. Feel free to use them or any other icon set in your project. We've included details for Bootstrap Icons and other preferred icon sets below.\n\nWhile most icon sets include multiple file formats, we prefer SVG implementations for their improved accessibility and vector support.\n\n## Bootstrap Icons\n\nBootstrap Icons is a growing library of SVG icons that are designed by [@mdo](https://github.com/mdo) and maintained by [the Bootstrap Team](https://github.com/orgs/twbs/people). The beginnings of this icon set come from Bootstrap's very own components—our forms, carousels, and more. Bootstrap has very few icon needs out of the box, so we didn't need much. However, once we got going, we couldn't stop making more.\n\nOh, and did we mention they're completely open source? Licensed under MIT, just like Bootstrap, our icon set is available to everyone.\n\n[Learn more about Bootstrap Icons]([[config:icons]]), including how to install them and recommended usage.\n\n## Alternatives\n\nWe've tested and used these icon sets ourselves as preferred alternatives to Bootstrap Icons.\n\n\u003Cul>\n{getData('icons').preferred.map((icon) => {\n  return (\n    \u003Cli>\u003Ca href={icon.website}>{icon.name}\u003C/a>\u003C/li>\n  )\n})}\n\u003C/ul>\n\n## More options\n\nWhile we haven't tried these out ourselves, they do look promising and provide multiple formats, including SVG.\n\n\u003Cul>\n{getData('icons').more.map((icon) => {\n  return (\n    \u003Cli>\u003Ca href={icon.website}>{icon.name}\u003C/a>\u003C/li>\n  )\n})}\n\u003C/ul>","src/content/docs/extend/icons.mdx","767ee09ffbfbad65","extend/icons.mdx","components/toasts",{"id":551,"data":553,"body":556,"filePath":557,"digest":558,"legacyId":559,"deferredRender":139},{"description":554,"title":555,"toc":139},"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.","Toasts","Toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They're built with flexbox, so they're easy to align and position.\n\n## Overview\n\nThings to know when using the toast plugin:\n\n- Toasts are opt-in for performance reasons, so **you must initialize them yourself**.\n- Toasts will automatically hide if you do not specify `autohide: false`.\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Examples\n\n### Basic\n\nTo encourage extensible and predictable toasts, we recommend a header and body. Toast headers use `display: flex`, allowing easy alignment of content thanks to our margin and flexbox utilities.\n\nToasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \"toasted\" content and strongly encourage a dismiss button.\n\n\u003CExample code={`\u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n  \u003Cdiv class=\"toast-header\">\n    \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n    \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n    \u003Csmall>11 mins ago\u003C/small>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"toast-body\">\n    Hello, world! This is a toast message.\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CCallout type=\"warning\">\nPreviously, our scripts dynamically added the `.hide` class to completely hide a toast (with `display:none`, rather than just with `opacity:0`). This is now not necessary anymore. However, for backwards compatibility, our script will continue to toggle the class (even though there is no practical need for it) until the next major version.\n\u003C/Callout>\n\n### Live example\n\nClick the button below to show a toast (positioned with our utilities in the lower right corner) that has been hidden by default.\n\n\u003Cdiv class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n  \u003Cdiv id=\"liveToast\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    \u003Cdiv class=\"toast-header\">\n      \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n      \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n      \u003Csmall>11 mins ago\u003C/small>\n      \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n    \u003C/div>\n    \u003Cdiv class=\"toast-body\">\n      Hello, world! This is a toast message.\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cbutton type=\"button\" class=\"btn btn-primary\" id=\"liveToastBtn\">Show live toast\u003C/button>\n\u003C/div>\n\n```html\n\u003Cbutton type=\"button\" class=\"btn btn-primary\" id=\"liveToastBtn\">Show live toast\u003C/button>\n\n\u003Cdiv class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n  \u003Cdiv id=\"liveToast\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    \u003Cdiv class=\"toast-header\">\n      \u003Cimg src=\"...\" class=\"rounded me-2\" alt=\"...\">\n      \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n      \u003Csmall>11 mins ago\u003C/small>\n      \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n    \u003C/div>\n    \u003Cdiv class=\"toast-body\">\n      Hello, world! This is a toast message.\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n```\n\nWe use the following JavaScript to trigger our live toast demo:\n\n\u003CJsDocs name=\"live-toast\" file=\"site/src/assets/partials/snippets.js\" />\n\n### Translucent\n\nToasts are slightly translucent to blend in with what's below them.\n\n\u003CExample class=\"bg-dark\" code={`\u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n  \u003Cdiv class=\"toast-header\">\n    \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n    \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n    \u003Csmall class=\"text-body-secondary\">11 mins ago\u003C/small>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"toast-body\">\n    Hello, world! This is a toast message.\n  \u003C/div>\n\u003C/div>`} />\n\n### Stacking\n\nYou can stack toasts by wrapping them in a toast container, which will vertically add some spacing.\n\n\u003CExample code={`\u003Cdiv class=\"toast-container position-static\">\n  \u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    \u003Cdiv class=\"toast-header\">\n      \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n      \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n      \u003Csmall class=\"text-body-secondary\">just now\u003C/small>\n      \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n    \u003C/div>\n    \u003Cdiv class=\"toast-body\">\n      See? Just like this.\n    \u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    \u003Cdiv class=\"toast-header\">\n      \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n      \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n      \u003Csmall class=\"text-body-secondary\">2 seconds ago\u003C/small>\n      \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n    \u003C/div>\n    \u003Cdiv class=\"toast-body\">\n      Heads up, toasts will stack automatically\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Custom content\n\nCustomize your toasts by removing sub-components, tweaking them with [utilities]([[docsref:/utilities/api]]), or by adding your own markup. Here we've created a simpler toast by removing the default `.toast-header`, adding a custom hide icon from [Bootstrap Icons]([[config:icons]]), and using some [flexbox utilities]([[docsref:/utilities/flex]]) to adjust the layout.\n\n\u003CExample code={`\u003Cdiv class=\"toast align-items-center\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n  \u003Cdiv class=\"d-flex\">\n    \u003Cdiv class=\"toast-body\">\n      Hello, world! This is a toast message.\n    \u003C/div>\n    \u003Cbutton type=\"button\" class=\"btn-close me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n\u003C/div>`} />\n\nAlternatively, you can also add additional controls and components to toasts.\n\n\u003CExample code={`\u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n  \u003Cdiv class=\"toast-body\">\n    Hello, world! This is a toast message.\n    \u003Cdiv class=\"mt-2 pt-2 border-top\">\n      \u003Cbutton type=\"button\" class=\"btn btn-primary btn-sm\">Take action\u003C/button>\n      \u003Cbutton type=\"button\" class=\"btn btn-secondary btn-sm\" data-bs-dismiss=\"toast\">Close\u003C/button>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Color schemes\n\nBuilding on the above example, you can create different toast color schemes with our [color]([[docsref:/utilities/colors]]) and [background]([[docsref:/utilities/background]]) utilities. Here we've added `.text-bg-primary` to the `.toast`, and then added `.btn-close-white` to our close button. For a crisp edge, we remove the default border with `.border-0`.\n\n\u003CExample code={`\u003Cdiv class=\"toast align-items-center text-bg-primary border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n  \u003Cdiv class=\"d-flex\">\n    \u003Cdiv class=\"toast-body\">\n      Hello, world! This is a toast message.\n    \u003C/div>\n    \u003Cbutton type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n\u003C/div>`} />\n\n## Placement\n\nPlace toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you're only ever going to show one toast at a time, put the positioning styles right on the `.toast`.\n\n\u003CExample addStackblitzJs code={`\u003Cform>\n  \u003Cdiv class=\"mb-3\">\n    \u003Clabel for=\"selectToastPlacement\">Toast placement\u003C/label>\n    \u003Cselect class=\"form-select mt-2\" id=\"selectToastPlacement\">\n      \u003Coption value=\"\" selected>Select a position...\u003C/option>\n      \u003Coption value=\"top-0 start-0\">Top left\u003C/option>\n      \u003Coption value=\"top-0 start-50 translate-middle-x\">Top center\u003C/option>\n      \u003Coption value=\"top-0 end-0\">Top right\u003C/option>\n      \u003Coption value=\"top-50 start-0 translate-middle-y\">Middle left\u003C/option>\n      \u003Coption value=\"top-50 start-50 translate-middle\">Middle center\u003C/option>\n      \u003Coption value=\"top-50 end-0 translate-middle-y\">Middle right\u003C/option>\n      \u003Coption value=\"bottom-0 start-0\">Bottom left\u003C/option>\n      \u003Coption value=\"bottom-0 start-50 translate-middle-x\">Bottom center\u003C/option>\n      \u003Coption value=\"bottom-0 end-0\">Bottom right\u003C/option>\n    \u003C/select>\n  \u003C/div>\n\u003C/form>\n\u003Cdiv aria-live=\"polite\" aria-atomic=\"true\" class=\"bg-body-secondary position-relative bd-example-toasts rounded-3\">\n  \u003Cdiv class=\"toast-container p-3\" id=\"toastPlacement\">\n    \u003Cdiv class=\"toast\">\n      \u003Cdiv class=\"toast-header\">\n        \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n        \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n        \u003Csmall>11 mins ago\u003C/small>\n      \u003C/div>\n      \u003Cdiv class=\"toast-body\">\n        Hello, world! This is a toast message.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nFor systems that generate more notifications, consider using a wrapping element so they can easily stack.\n\n\u003CExample class=\"bd-example-toasts p-0\" code={`\u003Cdiv aria-live=\"polite\" aria-atomic=\"true\" class=\"position-relative\">\n  \u003C!-- Position it: -->\n  \u003C!-- - \\`.toast-container\\` for spacing between toasts -->\n  \u003C!-- - \\`top-0\\` & \\`end-0\\` to position the toasts in the upper right corner -->\n  \u003C!-- - \\`.p-3\\` to prevent the toasts from sticking to the edge of the container  -->\n  \u003Cdiv class=\"toast-container top-0 end-0 p-3\">\n\n    \u003C!-- Then put toasts within -->\n    \u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      \u003Cdiv class=\"toast-header\">\n        \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n        \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n        \u003Csmall class=\"text-body-secondary\">just now\u003C/small>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"toast-body\">\n        See? Just like this.\n      \u003C/div>\n    \u003C/div>\n\n    \u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      \u003Cdiv class=\"toast-header\">\n        \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n        \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n        \u003Csmall class=\"text-body-secondary\">2 seconds ago\u003C/small>\n        \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n      \u003C/div>\n      \u003Cdiv class=\"toast-body\">\n        Heads up, toasts will stack automatically\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nYou can also get fancy with flexbox utilities to align toasts horizontally and/or vertically.\n\n\u003CExample class=\"bd-example-toasts d-flex\" code={`\u003C!-- Flexbox container for aligning the toasts -->\n\u003Cdiv aria-live=\"polite\" aria-atomic=\"true\" class=\"d-flex justify-content-center align-items-center w-100\">\n\n  \u003C!-- Then put toasts within -->\n  \u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    \u003Cdiv class=\"toast-header\">\n      \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n      \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n      \u003Csmall>11 mins ago\u003C/small>\n      \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n    \u003C/div>\n    \u003Cdiv class=\"toast-body\">\n      Hello, world! This is a toast message.\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Accessibility\n\nToasts are intended to be small interruptions to your visitors or users, so to help those with screen readers and similar assistive technologies, you should wrap your toasts in an [`aria-live` region](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions). Changes to live regions (such as injecting/updating a toast component) are automatically announced by screen readers without needing to move the user's focus or otherwise interrupt the user. Additionally, include `aria-atomic=\"true\"` to ensure that the entire toast is always announced as a single (atomic) unit, rather than just announcing what was changed (which could lead to problems if you only update part of the toast's content, or if displaying the same toast content at a later point in time). If the information needed is important for the process, e.g. for a list of errors in a form, then use the [alert component]([[docsref:/components/alerts]]) instead of toast.\n\nNote that the live region needs to be present in the markup *before* the toast is generated or updated. If you dynamically generate both at the same time and inject them into the page, they will generally not be announced by assistive technologies.\n\nYou also need to adapt the `role` and `aria-live` level depending on the content. If it's an important message like an error, use `role=\"alert\" aria-live=\"assertive\"`, otherwise use `role=\"status\" aria-live=\"polite\"` attributes.\n\nAs the content you're displaying changes, be sure to update the [`delay` timeout](#options) so that users have enough time to read the toast.\n\n```html\n\u003Cdiv class=\"toast\" role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" data-bs-delay=\"10000\">\n  \u003Cdiv role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">...\u003C/div>\n\u003C/div>\n```\n\nWhen using `autohide: false`, you must add a close button to allow users to dismiss the toast.\n\n\u003CExample code={`\u003Cdiv role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" class=\"toast\" data-bs-autohide=\"false\">\n  \u003Cdiv class=\"toast-header\">\n    \u003CPlaceholder width=\"20\" height=\"20\" background=\"#007aff\" class=\"rounded me-2\" text={false} title={false} />\n    \u003Cstrong class=\"me-auto\">Bootstrap\u003C/strong>\n    \u003Csmall>11 mins ago\u003C/small>\n    \u003Cbutton type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\">\u003C/button>\n  \u003C/div>\n  \u003Cdiv class=\"toast-body\">\n    Hello, world! This is a toast message.\n  \u003C/div>\n\u003C/div>`} />\n\nWhile technically it's possible to add focusable/actionable controls (such as additional buttons or links) in your toast, you should avoid doing this for autohiding toasts. Even if you give the toast a long [`delay` timeout](#options), keyboard and assistive technology users may find it difficult to reach the toast in time to take action (since toasts don't receive focus when they are displayed). If you absolutely must have further controls, we recommend using a toast with `autohide: false`.\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap's evolving CSS variables approach, toasts now use local CSS variables on `.toast` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"toast-css-vars\" file=\"scss/_toasts.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"toast-variables\" file=\"scss/_variables.scss\" />\n\n## Usage\n\nInitialize toasts via JavaScript:\n\n```js\nconst toastElList = document.querySelectorAll('.toast')\nconst toastList = [...toastElList].map(toastEl => new bootstrap.Toast(toastEl, option))\n```\n\n### Triggers\n\n\u003CJsDismiss name=\"toast\" />\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `animation` | boolean | `true` | Apply a CSS fade transition to the toast. |\n| `autohide` | boolean | `true` | Automatically hide the toast after the delay. |\n| `delay` | number | `5000` | Delay in milliseconds before hiding the toast. |\n\u003C/BsTable>\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `dispose` | Hides an element's toast. Your toast will remain on the DOM but won't show anymore. |\n| `getInstance` | *Static* method which allows you to get the toast instance associated with a DOM element. \u003Cbr/> For example: `const myToastEl = document.getElementById('myToastEl')` `const myToast = bootstrap.Toast.getInstance(myToastEl)` Returns a Bootstrap toast instance. |\n| `getOrCreateInstance` | *Static* method which allows you to get the toast instance associated with a DOM element, or create a new one, in case it wasn't initialized. \u003Cbr/>`const myToastEl = document.getElementById('myToastEl')` `const myToast = bootstrap.Toast.getOrCreateInstance(myToastEl)` Returns a Bootstrap toast instance. |\n| `hide` | Hides an element's toast. **Returns to the caller before the toast has actually been hidden** (i.e. before the `hidden.bs.toast` event occurs). You have to manually call this method if you made `autohide` to `false`. |\n| `isShown` | Returns a boolean according to toast's visibility state. |\n| `show` | Reveals an element's toast. **Returns to the caller before the toast has actually been shown** (i.e. before the `shown.bs.toast` event occurs). You have to manually call this method, instead your toast won't show. |\n\u003C/BsTable>\n\n### Events\n\n\u003CBsTable>\n| Event | Description |\n| --- | --- |\n| `hide.bs.toast` | This event is fired immediately when the `hide` instance method has been called. |\n| `hidden.bs.toast` | This event is fired when the toast has finished being hidden from the user. |\n| `show.bs.toast` | This event fires immediately when the `show` instance method is called. |\n| `shown.bs.toast` | This event is fired when the toast has been made visible to the user. |\n\u003C/BsTable>\n\n```js\nconst myToastEl = document.getElementById('myToast')\nmyToastEl.addEventListener('hidden.bs.toast', () => {\n  // do something...\n})\n```","src/content/docs/components/toasts.mdx","9479ecac22525e1c","components/toasts.mdx","extend/approach",{"id":560,"data":562,"body":567,"filePath":568,"digest":569,"legacyId":570,"deferredRender":139},{"aliases":563,"description":565,"title":566},[564],"/docs/[[config:docs_version]]/extend/","Learn about the guiding principles, strategies, and techniques used to build and maintain Bootstrap so you can more easily customize and extend it yourself.","Approach","While the getting started pages provide an introductory tour of the project and what it offers, this document focuses on _why_ we do the things we do in Bootstrap. It explains our philosophy to building on the web so that others can learn from us, contribute with us, and help us improve.\n\nSee something that doesn't sound right, or perhaps could be done better? [Open an issue]([[config:repo]]/issues/new/choose)—we'd love to discuss it with you.\n\n## Summary\n\nWe'll dive into each of these more throughout, but at a high level, here's what guides our approach.\n\n- Components should be responsive and mobile-first\n- Components should be built with a base class and extended via modifier classes\n- Component states should obey a common z-index scale\n- Whenever possible, prefer an HTML and CSS implementation over JavaScript\n- Whenever possible, use utilities over custom styles\n- Whenever possible, avoid enforcing strict HTML requirements (children selectors)\n\n## Responsive\n\nBootstrap's responsive styles are built to be responsive, an approach that's often referred to as _mobile-first_. We use this term in our docs and largely agree with it, but at times it can be too broad. While not every component _must_ be entirely responsive in Bootstrap, this responsive approach is about reducing CSS overrides by pushing you to add styles as the viewport becomes larger.\n\nAcross Bootstrap, you'll see this most clearly in our media queries. In most cases, we use `min-width` queries that begin to apply at a specific breakpoint and carry up through the higher breakpoints. For example, a `.d-none` applies from `min-width: 0` to infinity. On the other hand, a `.d-md-none` applies from the medium breakpoint and up.\n\nAt times we'll use `max-width` when a component's inherent complexity requires it. At times, these overrides are functionally and mentally clearer to implement and support than rewriting core functionality from our components. We strive to limit this approach, but will use it from time to time.\n\n## Classes\n\nAside from our Reboot, a cross-browser normalization stylesheet, all our styles aim to use classes as selectors. This means steering clear of type selectors (e.g., `input[type=\"text\"]`) and extraneous parent classes (e.g., `.parent .child`) that make styles too specific to easily override.\n\nAs such, components should be built with a base class that houses common, not-to-be overridden property-value pairs. For example, `.btn` and `.btn-primary`. We use `.btn` for all the common styles like `display`, `padding`, and `border-width`. We then use modifiers like `.btn-primary` to add the color, background-color, border-color, etc.\n\nModifier classes should only be used when there are multiple properties or values to be changed across multiple variants. Modifiers are not always necessary, so be sure you're actually saving lines of code and preventing unnecessary overrides when creating them. Good examples of modifiers are our theme color classes and size variants.\n\n## z-index scales\n\nThere are two `z-index` scales in Bootstrap—elements within a component and overlay components.\n\n### Component elements\n\n- Some components in Bootstrap are built with overlapping elements to prevent double borders without modifying the `border` property. For example, button groups, input groups, and pagination.\n- These components share a standard `z-index` scale of `0` through `3`.\n- `0` is default (initial), `1` is `:hover`, `2` is `:active`/`.active`, and `3` is `:focus`.\n- This approach matches our expectations of highest user priority. If an element is focused, it's in view and at the user's attention. Active elements are second highest because they indicate state. Hover is third highest because it indicates user intent, but nearly _anything_ can be hovered.\n\n### Overlay components\n\nBootstrap includes several components that function as an overlay of some kind. This includes, in order of highest `z-index`, dropdowns, fixed and sticky navbars, modals, tooltips, and popovers. These components have their own `z-index` scale that begins at `1000`. This starting number was chosen arbitrarily and serves as a small buffer between our styles and your project's custom styles.\n\nEach overlay component increases its `z-index` value slightly in such a way that common UI principles allow user focused or hovered elements to remain in view at all times. For example, a modal is document blocking (e.g., you cannot take any other action save for the modal's action), so we put that above our navbars.\n\nLearn more about this in our [`z-index` layout page]([[docsref:/layout/z-index]]).\n\n## HTML and CSS over JS\n\nWhenever possible, we prefer to write HTML and CSS over JavaScript. In general, HTML and CSS are more prolific and accessible to more people of all different experience levels. HTML and CSS are also faster in your browser than JavaScript, and your browser generally provides a great deal of functionality for you.\n\nThis principle is our first-class JavaScript API using `data` attributes. You don't need to write nearly any JavaScript to use our JavaScript plugins; instead, write HTML. Read more about this in [our JavaScript overview page]([[docsref:/getting-started/javascript#data-attributes]]).\n\nLastly, our styles build on the fundamental behaviors of common web elements. Whenever possible, we prefer to use what the browser provides. For example, you can put a `.btn` class on nearly any element, but most elements don't provide any semantic value or browser functionality. So instead, we use `\u003Cbutton>`s and `\u003Ca>`s.\n\nThe same goes for more complex components. While we _could_ write our own form validation plugin to add classes to a parent element based on an input's state, thereby allowing us to style the text say red, we prefer using the `:valid`/`:invalid` pseudo-elements every browser provides us.\n\n## Utilities\n\nUtility classes—formerly helpers in Bootstrap 3—are a powerful ally in combating CSS bloat and poor page performance. A utility class is typically a single, immutable property-value pairing expressed as a class (e.g., `.d-block` represents `display: block;`). Their primary appeal is speed of use while writing HTML and limiting the amount of custom CSS you have to write.\n\nSpecifically regarding custom CSS, utilities can help combat increasing file size by reducing your most commonly repeated property-value pairs into single classes. This can have a dramatic effect at scale in your projects.\n\n## Flexible HTML\n\nWhile not always possible, we strive to avoid being overly dogmatic in our HTML requirements for components. Thus, we focus on single classes in our CSS selectors and try to avoid immediate children selectors (`>`). This gives you more flexibility in your implementation and helps keep our CSS simpler and less specific.\n\n## Code conventions\n\n[Code Guide](https://codeguide.co/) (from Bootstrap co-creator, @mdo) documents how we write our HTML and CSS across Bootstrap. It specifies guidelines for general formatting, common sense defaults, property and attribute orders, and more.\n\nWe use [Stylelint](https://stylelint.io/) to enforce these standards and more in our Sass/CSS. [Our custom Stylelint config](https://github.com/twbs/stylelint-config-twbs-bootstrap) is open source and available for others to use and extend.\n\nWe use [vnu-jar](https://www.npmjs.com/package/vnu-jar) to enforce standard and semantic HTML, as well as detecting common errors.","src/content/docs/extend/approach.mdx","773137829c6d8017","extend/approach.mdx","components/tooltips",{"id":571,"data":573,"body":576,"filePath":577,"digest":578,"legacyId":579,"deferredRender":139},{"description":574,"title":575,"toc":139},"Documentation and examples for adding custom Bootstrap tooltips with CSS and JavaScript using CSS3 for animations and data-bs-attributes for local title storage.","Tooltips","## Overview\n\nThings to know when using the tooltip plugin:\n\n- Tooltips rely on the third party library [Popper](https://popper.js.org/docs/v2/) for positioning. You must include [popper.min.js]([[config:cdn.popper]]) before `bootstrap.js`, or use one `bootstrap.bundle.min.js` which contains Popper.\n- Tooltips are opt-in for performance reasons, so **you must initialize them yourself**.\n- Tooltips with zero-length titles are never displayed.\n- Specify `container: 'body'` to avoid rendering problems in more complex components (like our input groups, button groups, etc).\n- Triggering tooltips on hidden elements will not work.\n- Tooltips for `.disabled` or `disabled` elements must be triggered on a wrapper element.\n- When triggered from hyperlinks that span multiple lines, tooltips will be centered. Use `white-space: nowrap;` on your `\u003Ca>`s to avoid this behavior.\n- Tooltips must be hidden before their corresponding elements have been removed from the DOM.\n- Tooltips can be triggered thanks to an element inside a shadow DOM.\n\nGot all that? Great, let's see how they work with some examples.\n\n\u003CCallout name=\"info-sanitizer\" />\n\n\u003CCallout name=\"info-prefersreducedmotion\" />\n\n## Examples\n\n### Enable tooltips\n\nAs mentioned above, you must initialize tooltips before they can be used. One way to initialize all tooltips on a page would be to select them by their `data-bs-toggle` attribute, like so:\n\n```js\nconst tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\nconst tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n```\n\n### Tooltips on links\n\nHover over the links below to see tooltips:\n\n\u003CExample addStackblitzJs class=\"tooltip-demo\" code={`\u003Cp class=\"muted\">Placeholder text to demonstrate some \u003Ca href=\"#\" data-bs-toggle=\"tooltip\" data-bs-title=\"Default tooltip\">inline links\u003C/a> with tooltips. This is now just filler, no killer. Content placed here just to mimic the presence of \u003Ca href=\"#\" data-bs-toggle=\"tooltip\" data-bs-title=\"Another tooltip\">real text\u003C/a>. And all that just to give you an idea of how tooltips would look when used in real-world situations. So hopefully you've now seen how \u003Ca href=\"#\" data-bs-toggle=\"tooltip\" data-bs-title=\"Another one here too\">these tooltips on links\u003C/a> can work in practice, once you use them on \u003Ca href=\"#\" data-bs-toggle=\"tooltip\" data-bs-title=\"The last tip!\">your own\u003C/a> site or project.\u003C/p>`} />\n\n\u003CCallout name=\"warning-data-bs-title-vs-title\" type=\"warning\" />\n\n### Custom tooltips\n\n\u003CAddedIn version=\"5.2.0\" />\n\nYou can customize the appearance of tooltips using [CSS variables](#variables). We set a custom class with `data-bs-custom-class=\"custom-tooltip\"` to scope our custom appearance and use it to override a local CSS variable.\n\n\u003CScssDocs name=\"custom-tooltip\" file=\"site/src/scss/_component-examples.scss\" />\n\n\u003CExample addStackblitzJs class=\"tooltip-demo\" code={`\u003Cbutton type=\"button\" class=\"btn btn-secondary\"\n        data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\n        data-bs-custom-class=\"custom-tooltip\"\n        data-bs-title=\"This top tooltip is themed via CSS variables.\">\n  Custom tooltip\n\u003C/button>`} />\n\n### Directions\n\nHover over the buttons below to see the four tooltips directions: top, right, bottom, and left. Directions are mirrored when using Bootstrap in RTL.\n\n\u003Cdiv class=\"bd-example tooltip-demo\">\n  \u003Cdiv class=\"bd-example-tooltips\">\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" data-bs-title=\"Tooltip on top\">Tooltip on top\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" data-bs-title=\"Tooltip on right\">Tooltip on right\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" data-bs-title=\"Tooltip on bottom\">Tooltip on bottom\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"left\" data-bs-title=\"Tooltip on left\">Tooltip on left\u003C/button>\n    \u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-html=\"true\" data-bs-title=\"\u003Cem>Tooltip\u003C/em> \u003Cu>with\u003C/u> \u003Cb>HTML\u003C/b>\">Tooltip with HTML\u003C/button>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" data-bs-title=\"Tooltip on top\">\n  Tooltip on top\n\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" data-bs-title=\"Tooltip on right\">\n  Tooltip on right\n\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" data-bs-title=\"Tooltip on bottom\">\n  Tooltip on bottom\n\u003C/button>\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"left\" data-bs-title=\"Tooltip on left\">\n  Tooltip on left\n\u003C/button>\n```\n\nAnd with custom HTML added:\n\n```html\n\u003Cbutton type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-html=\"true\" data-bs-title=\"\u003Cem>Tooltip\u003C/em> \u003Cu>with\u003C/u> \u003Cb>HTML\u003C/b>\">\n  Tooltip with HTML\n\u003C/button>\n```\n\nWith an SVG:\n\n\u003Cdiv class=\"bd-example tooltip-demo\">\n  \u003Ca href=\"#\" class=\"d-inline-block\" data-bs-toggle=\"tooltip\" data-bs-title=\"Default tooltip\" aria-label=\"Hover or focus to see default tooltip\">\n    \u003Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 100 100\" aria-hidden=\"true\">\n      \u003Crect width=\"100%\" height=\"100%\" fill=\"#563d7c\"/>\n      \u003Ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"#007bff\"/>\n    \u003C/svg>\n  \u003C/a>\n\u003C/div>\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\nAs part of Bootstrap’s evolving CSS variables approach, tooltips now use local CSS variables on `.tooltip` for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"tooltip-css-vars\" file=\"scss/_tooltip.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"tooltip-variables\" file=\"scss/_variables.scss\" />\n\n## Usage\n\nThe tooltip plugin generates content and markup on demand, and by default places tooltips after their trigger element. Trigger the tooltip via JavaScript:\n\n```js\nconst exampleEl = document.getElementById('example')\nconst tooltip = new bootstrap.Tooltip(exampleEl, options)\n```\n\n\u003CCallout type=\"warning\">\nTooltips automatically attempt to change positions when a parent container has `overflow: auto` or `overflow: scroll`, but still keeps the original placement's positioning. Set the [`boundary` option](https://popper.js.org/docs/v2/modifiers/flip/#boundary) (for the flip modifier using the `popperConfig` option) to any HTMLElement to override the default value, `'clippingParents'`, such as `document.body`:\n\n```js\nconst tooltip = new bootstrap.Tooltip('#example', {\n  boundary: document.body // or document.querySelector('#boundary')\n})\n```\n\u003C/Callout>\n\n### Markup\n\nThe required markup for a tooltip is only a `data` attribute and `title` on the HTML element you wish to have a tooltip. The generated markup of a tooltip is rather simple, though it does require a position (by default, set to `top` by the plugin).\n\n\u003CCallout type=\"warning\">\n**Keep tooltips accessible to keyboard and assistive technology users** by only adding them to HTML elements that are traditionally keyboard-focusable and interactive (such as links or form controls). While other HTML elements can be made focusable by adding `tabindex=\"0\"`, this can create annoying and confusing tab stops on non-interactive elements for keyboard users, and most assistive technologies currently do not announce tooltips in this situation. Additionally, do not rely solely on `hover` as the trigger for your tooltips as this will make them impossible to trigger for keyboard users.\n\u003C/Callout>\n\n```html\n\u003C!-- HTML to write -->\n\u003Ca href=\"#\" data-bs-toggle=\"tooltip\" data-bs-title=\"Some tooltip text!\">Hover over me\u003C/a>\n\n\u003C!-- Generated markup by the plugin -->\n\u003Cdiv class=\"tooltip bs-tooltip-auto\" role=\"tooltip\">\n  \u003Cdiv class=\"tooltip-arrow\">\u003C/div>\n  \u003Cdiv class=\"tooltip-inner\">\n    Some tooltip text!\n  \u003C/div>\n\u003C/div>\n```\n\n### Disabled elements\n\nElements with the `disabled` attribute aren't interactive, meaning users cannot focus, hover, or click them to trigger a tooltip (or popover). As a workaround, you'll want to trigger the tooltip from a wrapper `\u003Cdiv>` or `\u003Cspan>`, ideally made keyboard-focusable using `tabindex=\"0\"`.\n\n\u003CExample class=\"tooltip-demo\" addStackblitzJs code={`\u003Cspan class=\"d-inline-block\" tabindex=\"0\" data-bs-toggle=\"tooltip\" data-bs-title=\"Disabled tooltip\">\n  \u003Cbutton class=\"btn btn-primary\" type=\"button\" disabled>Disabled button\u003C/button>\n\u003C/span>`} />\n\n### Options\n\n\u003CJsDataAttributes />\n\n\u003CCallout type=\"warning\">\nNote that for security reasons the `sanitize`, `sanitizeFn`, and `allowList` options cannot be supplied using data attributes.\n\u003C/Callout>\n\n\n\u003CBsTable>\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `allowList` | object | [Default value]([[docsref:/getting-started/javascript#sanitizer]]) | Object which contains allowed attributes and tags. |\n| `animation` | boolean | `true` | Apply a CSS fade transition to the tooltip. |\n| `boundary` | string, element | `'clippingParents'` | Overflow constraint boundary of the tooltip (applies only to Popper's preventOverflow modifier). By default, it's `'clippingParents'` and can accept an HTMLElement reference (via JavaScript only). For more information refer to Popper's [detectOverflow docs](https://popper.js.org/docs/v2/utils/detect-overflow/#boundary). |\n| `container` | string, element, false | `false` | Appends the tooltip to a specific element. Example: `container: 'body'`. This option is particularly useful in that it allows you to position the tooltip in the flow of the document near the triggering element -&nbsp;which will prevent the tooltip from floating away from the triggering element during a window resize. |\n| `customClass` | string, function | `''` | Add classes to the tooltip when it is shown. Note that these classes will be added in addition to any classes specified in the template. To add multiple classes, separate them with spaces: `'class-1 class-2'`. You can also pass a function that should return a single string containing additional class names. |\n| `delay` | number, object | `0` | Delay showing and hiding the tooltip (ms)—doesn't apply to manual trigger type. If a number is supplied, delay is applied to both hide/show. Object structure is: `delay: { \"show\": 500, \"hide\": 100 }`. |\n| `fallbackPlacements` | array | `['top', 'right', 'bottom', 'left']` | Define fallback placements by providing a list of placements in array (in order of preference). For more information refer to Popper's [behavior docs](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements). |\n| `html` | boolean | `false` | Allow HTML in the tooltip. If true, HTML tags in the tooltip's `title` will be rendered in the tooltip. If false, `innerText` property will be used to insert content into the DOM. Use text if you're worried about XSS attacks. |\n| `offset` | array, string, function | `[0, 6]` | Offset of the tooltip relative to its target. You can pass a string in data attributes with comma separated values like: `data-bs-offset=\"10,20\"`. When a function is used to determine the offset, it is called with an object containing the popper placement, the reference, and popper rects as its first argument. The triggering element DOM node is passed as the second argument. The function must return an array with two numbers: [skidding](https://popper.js.org/docs/v2/modifiers/offset/#skidding-1), [distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1). For more information refer to Popper's [offset docs](https://popper.js.org/docs/v2/modifiers/offset/#options). |\n| `placement` | string, function | `'top'` | How to position the tooltip: auto, top, bottom, left, right. When `auto` is specified, it will dynamically reorient the tooltip. When a function is used to determine the placement, it is called with the tooltip DOM node as its first argument and the triggering element DOM node as its second. The `this` context is set to the tooltip instance. |\n| `popperConfig` | null, object, function | `null` | To change Bootstrap's default Popper config, see [Popper's configuration](https://popper.js.org/docs/v2/constructors/#options). When a function is used to create the Popper configuration, it's called with an object that contains the Bootstrap's default Popper configuration. It helps you use and merge the default with your own configuration. The function must return a configuration object for Popper. |\n| `sanitize` | boolean | `true` | Enable or disable the sanitization. If activated `'template'`, `'content'` and `'title'` options will be sanitized. |\n| `sanitizeFn` | null, function | `null` | Here you can supply your own sanitize function. This can be useful if you prefer to use a dedicated library to perform sanitization. |\n| `selector` | string, false | `false` | If a selector is provided, tooltip objects will be delegated to the specified targets. In practice, this is used to also apply tooltips to dynamically added DOM elements (`jQuery.on` support). See [this issue]([[config:repo]]/issues/4215) and [an informative example](https://codepen.io/Johann-S/pen/djJYPb). **Note**: `title` attribute must not be used as a selector. |\n| `template` | string | `'\u003Cdiv class=\"tooltip\" role=\"tooltip\">\u003Cdiv class=\"tooltip-arrow\">\u003C/div>\u003Cdiv class=\"tooltip-inner\">\u003C/div>\u003C/div>'` | Base HTML to use when creating the tooltip. The tooltip's `title` will be injected into the `.tooltip-inner`. `.tooltip-arrow` will become the tooltip's arrow. The outermost wrapper element should have the `.tooltip` class and `role=\"tooltip\"`. |\n| `title` | string, element, function | `''` | The tooltip title. If a function is given, it will be called with its `this` reference set to the element that the popover is attached to. |\n| `trigger` | string | `'hover focus'` | How tooltip is triggered: click, hover, focus, manual. You may pass multiple triggers; separate them with a space. `'manual'` indicates that the tooltip will be triggered programmatically via the `.tooltip('show')`, `.tooltip('hide')` and `.tooltip('toggle')` methods; this value cannot be combined with any other trigger. `'hover'` on its own will result in tooltips that cannot be triggered via the keyboard, and should only be used if alternative methods for conveying the same information for keyboard users is present. |\n\u003C/BsTable>\n\n\u003CCallout>\n#### Data attributes for individual tooltips\n\nOptions for individual tooltips can alternatively be specified through the use of data attributes, as explained above.\n\u003C/Callout>\n\n#### Using function with `popperConfig`\n\n```js\nconst tooltip = new bootstrap.Tooltip(element, {\n  popperConfig(defaultBsPopperConfig) {\n    // const newPopperConfig = {...}\n    // use defaultBsPopperConfig if needed...\n    // return newPopperConfig\n  }\n})\n```\n\n### Methods\n\n\u003CCallout name=\"danger-async-methods\" type=\"danger\" />\n\n\u003CBsTable>\n| Method | Description |\n| --- | --- |\n| `disable` | Removes the ability for an element's tooltip to be shown. The tooltip will only be able to be shown if it is re-enabled. |\n| `dispose` | Hides and destroys an element's tooltip (Removes stored data on the DOM element). Tooltips that use delegation (which are created using [the `selector` option](#options)) cannot be individually destroyed on descendant trigger elements. |\n| `enable` | Gives an element's tooltip the ability to be shown. **Tooltips are enabled by default.** |\n| `getInstance` | *Static* method which allows you to get the tooltip instance associated with a DOM element, or create a new one in case it wasn't initialized. |\n| `getOrCreateInstance` | *Static* method which allows you to get the tooltip instance associated with a DOM element, or create a new one in case it wasn't initialized. |\n| `hide` | Hides an element's tooltip. **Returns to the caller before the tooltip has actually been hidden** (i.e. before the `hidden.bs.tooltip` event occurs). This is considered a \"manual\" triggering of the tooltip. |\n| `setContent` | Gives a way to change the tooltip's content after its initialization. |\n| `show` | Reveals an element's tooltip. **Returns to the caller before the tooltip has actually been shown** (i.e. before the `shown.bs.tooltip` event occurs). This is considered a \"manual\" triggering of the tooltip. Tooltips with zero-length titles are never displayed. |\n| `toggle` | Toggles an element's tooltip. **Returns to the caller before the tooltip has actually been shown or hidden** (i.e. before the `shown.bs.tooltip` or `hidden.bs.tooltip` event occurs). This is considered a \"manual\" triggering of the tooltip. |\n| `toggleEnabled` | Toggles the ability for an element's tooltip to be shown or hidden. |\n| `update` | Updates the position of an element's tooltip. |\n\u003C/BsTable>\n\n```js\nconst tooltip = bootstrap.Tooltip.getInstance('#example') // Returns a Bootstrap tooltip instance\n\n// setContent example\ntooltip.setContent({ '.tooltip-inner': 'another title' })\n\n```\n\n\u003CCallout>\nThe `setContent` method accepts an `object` argument, where each property-key is a valid `string` selector within the tooltip template, and each related property-value can be `string` | `element` | `function` | `null`\n\u003C/Callout>\n\n### Events\n\n\u003CBsTable>\n| Event | Description |\n| --- | --- |\n| `hide.bs.tooltip` | This event is fired immediately when the `hide` instance method has been called. |\n| `hidden.bs.tooltip` | This event is fired when the tooltip has finished being hidden from the user (will wait for CSS transitions to complete). |\n| `inserted.bs.tooltip` | This event is fired after the `show.bs.tooltip` event when the tooltip template has been added to the DOM. |\n| `show.bs.tooltip` | This event fires immediately when the `show` instance method is called. |\n| `shown.bs.tooltip` | This event is fired when the tooltip has been made visible to the user (will wait for CSS transitions to complete). |\n\u003C/BsTable>\n\n```js\nconst myTooltipEl = document.getElementById('myTooltip')\nconst tooltip = bootstrap.Tooltip.getOrCreateInstance(myTooltipEl)\n\nmyTooltipEl.addEventListener('hidden.bs.tooltip', () => {\n  // do something...\n})\n\ntooltip.hide()\n```","src/content/docs/components/tooltips.mdx","6f55d82f99b7d9e4","components/tooltips.mdx","forms/floating-labels",{"id":580,"data":582,"body":585,"filePath":586,"digest":587,"legacyId":588,"deferredRender":139},{"description":583,"title":584,"toc":139},"Create beautifully simple form labels that float over your input fields.","Floating labels","## Example\n\nWrap a pair of `\u003Cinput class=\"form-control\">` and `\u003Clabel>` elements in `.form-floating` to enable floating labels with Bootstrap's textual form fields. A `placeholder` is required on each `\u003Cinput>` as our method of CSS-only floating labels uses the `:placeholder-shown` pseudo-element. Also note that the `\u003Cinput>` must come first so we can utilize a sibling selector (e.g., `~`).\n\n\u003CExample code={`\u003Cdiv class=\"form-floating mb-3\">\n  \u003Cinput type=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\">\n  \u003Clabel for=\"floatingInput\">Email address\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-floating\">\n  \u003Cinput type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\">\n  \u003Clabel for=\"floatingPassword\">Password\u003C/label>\n\u003C/div>`} />\n\nWhen there's a `value` already defined, `\u003Clabel>`s will automatically adjust to their floated position.\n\n\u003CExample code={`\u003Cform class=\"form-floating\">\n  \u003Cinput type=\"email\" class=\"form-control\" id=\"floatingInputValue\" placeholder=\"name@example.com\" value=\"test@example.com\">\n  \u003Clabel for=\"floatingInputValue\">Input with value\u003C/label>\n\u003C/form>`} />\n\nForm validation styles also work as expected.\n\n\u003CExample code={`\u003Cform class=\"form-floating\">\n  \u003Cinput type=\"email\" class=\"form-control is-invalid\" id=\"floatingInputInvalid\" placeholder=\"name@example.com\" value=\"test@example.com\">\n  \u003Clabel for=\"floatingInputInvalid\">Invalid input\u003C/label>\n\u003C/form>`} />\n\n## Textareas\n\nBy default, `\u003Ctextarea>`s with `.form-control` will be the same height as `\u003Cinput>`s.\n\n\u003CExample code={`\u003Cdiv class=\"form-floating\">\n  \u003Ctextarea class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\">\u003C/textarea>\n  \u003Clabel for=\"floatingTextarea\">Comments\u003C/label>\n\u003C/div>`} />\n\nTo set a custom height on your `\u003Ctextarea>`, do not use the `rows` attribute. Instead, set an explicit `height` (either inline or via custom CSS).\n\n\u003CExample code={`\u003Cdiv class=\"form-floating\">\n  \u003Ctextarea class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\" style=\"height: 100px\">\u003C/textarea>\n  \u003Clabel for=\"floatingTextarea2\">Comments\u003C/label>\n\u003C/div>`} />\n\n## Selects\n\nOther than `.form-control`, floating labels are only available on `.form-select`s. They work in the same way, but unlike `\u003Cinput>`s, they'll always show the `\u003Clabel>` in its floated state. **Selects with `size` and `multiple` are not supported.**\n\n\u003CExample code={`\u003Cdiv class=\"form-floating\">\n  \u003Cselect class=\"form-select\" id=\"floatingSelect\" aria-label=\"Floating label select example\">\n    \u003Coption selected>Open this select menu\u003C/option>\n    \u003Coption value=\"1\">One\u003C/option>\n    \u003Coption value=\"2\">Two\u003C/option>\n    \u003Coption value=\"3\">Three\u003C/option>\n  \u003C/select>\n  \u003Clabel for=\"floatingSelect\">Works with selects\u003C/label>\n\u003C/div>`} />\n\n## Disabled\n\nAdd the `disabled` boolean attribute on an input, a textarea or a select to give it a grayed out appearance, remove pointer events, and prevent focusing.\n\n\u003CExample code={`\u003Cdiv class=\"form-floating mb-3\">\n  \u003Cinput type=\"email\" class=\"form-control\" id=\"floatingInputDisabled\" placeholder=\"name@example.com\" disabled>\n  \u003Clabel for=\"floatingInputDisabled\">Email address\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-floating mb-3\">\n  \u003Ctextarea class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextareaDisabled\" disabled>\u003C/textarea>\n  \u003Clabel for=\"floatingTextareaDisabled\">Comments\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-floating mb-3\">\n  \u003Ctextarea class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2Disabled\" style=\"height: 100px\" disabled>Disabled textarea with some text inside\u003C/textarea>\n  \u003Clabel for=\"floatingTextarea2Disabled\">Comments\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-floating\">\n  \u003Cselect class=\"form-select\" id=\"floatingSelectDisabled\" aria-label=\"Floating label disabled select example\" disabled>\n    \u003Coption selected>Open this select menu\u003C/option>\n    \u003Coption value=\"1\">One\u003C/option>\n    \u003Coption value=\"2\">Two\u003C/option>\n    \u003Coption value=\"3\">Three\u003C/option>\n  \u003C/select>\n  \u003Clabel for=\"floatingSelectDisabled\">Works with selects\u003C/label>\n\u003C/div>`} />\n\n## Readonly plaintext\n\nFloating labels also support `.form-control-plaintext`, which can be helpful for toggling from an editable `\u003Cinput>` to a plaintext value without affecting the page layout.\n\n\u003CExample code={`\u003Cdiv class=\"form-floating mb-3\">\n  \u003Cinput type=\"email\" readonly class=\"form-control-plaintext\" id=\"floatingEmptyPlaintextInput\" placeholder=\"name@example.com\">\n  \u003Clabel for=\"floatingEmptyPlaintextInput\">Empty input\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-floating mb-3\">\n  \u003Cinput type=\"email\" readonly class=\"form-control-plaintext\" id=\"floatingPlaintextInput\" placeholder=\"name@example.com\" value=\"name@example.com\">\n  \u003Clabel for=\"floatingPlaintextInput\">Input with value\u003C/label>\n\u003C/div>`} />\n\n## Input groups\n\nFloating labels also support `.input-group`.\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cspan class=\"input-group-text\">@\u003C/span>\n  \u003Cdiv class=\"form-floating\">\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"floatingInputGroup1\" placeholder=\"Username\">\n    \u003Clabel for=\"floatingInputGroup1\">Username\u003C/label>\n  \u003C/div>\n\u003C/div>`} />\n\nWhen using `.input-group` and `.form-floating` along with form validation, the `-feedback` should be placed outside of the `.form-floating`, but inside of the `.input-group`. This means that the feedback will need to be shown using javascript.\n\n\u003CExample code={`\u003Cdiv class=\"input-group has-validation\">\n  \u003Cspan class=\"input-group-text\">@\u003C/span>\n  \u003Cdiv class=\"form-floating is-invalid\">\n    \u003Cinput type=\"text\" class=\"form-control is-invalid\" id=\"floatingInputGroup2\" placeholder=\"Username\" required>\n    \u003Clabel for=\"floatingInputGroup2\">Username\u003C/label>\n  \u003C/div>\n  \u003Cdiv class=\"invalid-feedback\">\n    Please choose a username.\n  \u003C/div>\n\u003C/div>`} />\n\n## Layout\n\nWhen working with the Bootstrap grid system, be sure to place form elements within column classes.\n\n\u003CExample code={`\u003Cdiv class=\"row g-2\">\n  \u003Cdiv class=\"col-md\">\n    \u003Cdiv class=\"form-floating\">\n      \u003Cinput type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"mdo@example.com\">\n      \u003Clabel for=\"floatingInputGrid\">Email address\u003C/label>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md\">\n    \u003Cdiv class=\"form-floating\">\n      \u003Cselect class=\"form-select\" id=\"floatingSelectGrid\">\n        \u003Coption selected>Open this select menu\u003C/option>\n        \u003Coption value=\"1\">One\u003C/option>\n        \u003Coption value=\"2\">Two\u003C/option>\n        \u003Coption value=\"3\">Three\u003C/option>\n      \u003C/select>\n      \u003Clabel for=\"floatingSelectGrid\">Works with selects\u003C/label>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"form-floating-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/floating-labels.mdx","57de08e7722d79e7","forms/floating-labels.mdx","forms/checks-radios",{"id":589,"data":591,"body":595,"filePath":596,"digest":597,"legacyId":598,"deferredRender":139},{"aliases":592,"description":593,"title":594,"toc":139},"/docs/[[config:docs_version]]/forms/checks/","Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component.","Checks and radios","## Approach\n\nBrowser default checkboxes and radios are replaced with the help of `.form-check`, a series of classes for both input types that improves the layout and behavior of their HTML elements, that provide greater customization and cross browser consistency. Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many.\n\nStructurally, our `\u003Cinput>`s and `\u003Clabel>`s are sibling elements as opposed to an `\u003Cinput>` within a `\u003Clabel>`. This is slightly more verbose as you must specify `id` and `for` attributes to relate the `\u003Cinput>` and `\u003Clabel>`. We use the sibling selector (`~`) for all our `\u003Cinput>` states, like `:checked` or `:disabled`. When combined with the `.form-check-label` class, we can easily style the text for each item based on the `\u003Cinput>`'s state.\n\nOur checks use custom Bootstrap icons to indicate checked or indeterminate states.\n\n## Checks\n\n\u003CExample code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkDefault\">\n  \u003Clabel class=\"form-check-label\" for=\"checkDefault\">\n    Default checkbox\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkChecked\" checked>\n  \u003Clabel class=\"form-check-label\" for=\"checkChecked\">\n    Checked checkbox\n  \u003C/label>\n\u003C/div>`} />\n\n### Indeterminate\n\nCheckboxes can utilize the `:indeterminate` pseudo class when manually set via JavaScript (there is no available HTML attribute for specifying it).\n\n\u003CExample addStackblitzJs class=\"bd-example-indeterminate\" code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkIndeterminate\">\n  \u003Clabel class=\"form-check-label\" for=\"checkIndeterminate\">\n    Indeterminate checkbox\n  \u003C/label>\n\u003C/div>`} />\n\n### Disabled\n\nAdd the `disabled` attribute and the associated `\u003Clabel>`s are automatically styled to match with a lighter color to help indicate the input's state.\n\n\u003CExample addStackblitzJs class=\"bd-example-indeterminate\" code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkIndeterminateDisabled\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"checkIndeterminateDisabled\">\n    Disabled indeterminate checkbox\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkDisabled\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"checkDisabled\">\n    Disabled checkbox\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkCheckedDisabled\" checked disabled>\n  \u003Clabel class=\"form-check-label\" for=\"checkCheckedDisabled\">\n    Disabled checked checkbox\n  \u003C/label>\n\u003C/div>`} />\n\n## Radios\n\n\u003CExample code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"radioDefault\" id=\"radioDefault1\">\n  \u003Clabel class=\"form-check-label\" for=\"radioDefault1\">\n    Default radio\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"radioDefault\" id=\"radioDefault2\" checked>\n  \u003Clabel class=\"form-check-label\" for=\"radioDefault2\">\n    Default checked radio\n  \u003C/label>\n\u003C/div>`} />\n\n### Disabled\n\nAdd the `disabled` attribute and the associated `\u003Clabel>`s are automatically styled to match with a lighter color to help indicate the input's state.\n\n\u003CExample code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"radioDisabled\" id=\"radioDisabled\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"radioDisabled\">\n    Disabled radio\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"radioDisabled\" id=\"radioCheckedDisabled\" checked disabled>\n  \u003Clabel class=\"form-check-label\" for=\"radioCheckedDisabled\">\n    Disabled checked radio\n  \u003C/label>\n\u003C/div>`} />\n\n## Switches\n\nA switch has the markup of a custom checkbox but uses the `.form-switch` class to render a toggle switch. Consider using `role=\"switch\"` to more accurately convey the nature of the control to assistive technologies that support this role. In older assistive technologies, it will simply be announced as a regular checkbox as a fallback. Switches also support the `disabled` attribute.\n\n\u003CExample code={`\u003Cdiv class=\"form-check form-switch\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"switchCheckDefault\">\n  \u003Clabel class=\"form-check-label\" for=\"switchCheckDefault\">Default switch checkbox input\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-switch\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"switchCheckChecked\" checked>\n  \u003Clabel class=\"form-check-label\" for=\"switchCheckChecked\">Checked switch checkbox input\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-switch\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"switchCheckDisabled\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"switchCheckDisabled\">Disabled switch checkbox input\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-switch\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"switchCheckCheckedDisabled\" checked disabled>\n  \u003Clabel class=\"form-check-label\" for=\"switchCheckCheckedDisabled\">Disabled checked switch checkbox input\u003C/label>\n\u003C/div>`} />\n\n## Default (stacked)\n\nBy default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with `.form-check`.\n\n\u003CExample code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\">\n  \u003Clabel class=\"form-check-label\" for=\"defaultCheck1\">\n    Default checkbox\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"defaultCheck2\">\n    Disabled checkbox\n  \u003C/label>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" checked>\n  \u003Clabel class=\"form-check-label\" for=\"exampleRadios1\">\n    Default radio\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\">\n  \u003Clabel class=\"form-check-label\" for=\"exampleRadios2\">\n    Second default radio\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios3\" value=\"option3\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"exampleRadios3\">\n    Disabled radio\n  \u003C/label>\n\u003C/div>`} />\n\n## Inline\n\nGroup checkboxes or radios on the same horizontal row by adding `.form-check-inline` to any `.form-check`.\n\n\u003CExample code={`\u003Cdiv class=\"form-check form-check-inline\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\n  \u003Clabel class=\"form-check-label\" for=\"inlineCheckbox1\">1\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-check-inline\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\">\n  \u003Clabel class=\"form-check-label\" for=\"inlineCheckbox2\">2\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-check-inline\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"inlineCheckbox3\">3 (disabled)\u003C/label>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"form-check form-check-inline\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\">\n  \u003Clabel class=\"form-check-label\" for=\"inlineRadio1\">1\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-check-inline\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\">\n  \u003Clabel class=\"form-check-label\" for=\"inlineRadio2\">2\u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-check-inline\">\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" value=\"option3\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"inlineRadio3\">3 (disabled)\u003C/label>\n\u003C/div>`} />\n\n## Reverse\n\nPut your checkboxes, radios, and switches on the opposite side with the `.form-check-reverse` modifier class.\n\n\u003CExample code={`\u003Cdiv class=\"form-check form-check-reverse\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"reverseCheck1\">\n  \u003Clabel class=\"form-check-label\" for=\"reverseCheck1\">\n    Reverse checkbox\n  \u003C/label>\n\u003C/div>\n\u003Cdiv class=\"form-check form-check-reverse\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"reverseCheck2\" disabled>\n  \u003Clabel class=\"form-check-label\" for=\"reverseCheck2\">\n    Disabled reverse checkbox\n  \u003C/label>\n\u003C/div>\n\n\u003Cdiv class=\"form-check form-switch form-check-reverse\">\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"switchCheckReverse\">\n  \u003Clabel class=\"form-check-label\" for=\"switchCheckReverse\">Reverse switch checkbox input\u003C/label>\n\u003C/div>`} />\n\n## Without labels\n\nOmit the wrapping `.form-check` for checkboxes and radios that have no label text. Remember to still provide some form of accessible name for assistive technologies (for instance, using `aria-label`). See the [forms overview accessibility]([[docsref:/forms/overview#accessibility]]) section for details.\n\n\u003CExample code={`\u003Cdiv>\n  \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\">\n\u003C/div>\n\n\u003Cdiv>\n  \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"radioNoLabel\" id=\"radioNoLabel1\" value=\"\" aria-label=\"...\">\n\u003C/div>`} />\n\n## Toggle buttons\n\nCreate button-like checkboxes and radio buttons by using `.btn` styles rather than `.form-check-label` on the `\u003Clabel>` elements. These toggle buttons can further be grouped in a [button group]([[docsref:/components/button-group]]) if needed.\n\n### Checkbox toggle buttons\n\n\u003CExample code={`\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check\" autocomplete=\"off\">\n\u003Clabel class=\"btn btn-primary\" for=\"btn-check\">Single toggle\u003C/label>\n\n\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-2\" checked autocomplete=\"off\">\n\u003Clabel class=\"btn btn-primary\" for=\"btn-check-2\">Checked\u003C/label>\n\n\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-3\" autocomplete=\"off\" disabled>\n\u003Clabel class=\"btn btn-primary\" for=\"btn-check-3\">Disabled\u003C/label>`} />\n\n\u003CExample code={`\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-4\" autocomplete=\"off\">\n\u003Clabel class=\"btn\" for=\"btn-check-4\">Single toggle\u003C/label>\n\n\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-5\" checked autocomplete=\"off\">\n\u003Clabel class=\"btn\" for=\"btn-check-5\">Checked\u003C/label>\n\n\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-6\" autocomplete=\"off\" disabled>\n\u003Clabel class=\"btn\" for=\"btn-check-6\">Disabled\u003C/label>`} />\n\n\u003CCallout>\nVisually, these checkbox toggle buttons are identical to the [button plugin toggle buttons]([[docsref:/components/buttons#button-plugin]]). However, they are conveyed differently by assistive technologies: the checkbox toggles will be announced by screen readers as \"checked\"/\"not checked\" (since, despite their appearance, they are fundamentally still checkboxes), whereas the button plugin toggle buttons will be announced as \"button\"/\"button pressed\". The choice between these two approaches will depend on the type of toggle you are creating, and whether or not the toggle will make sense to users when announced as a checkbox or as an actual button.\n\u003C/Callout>\n\n### Radio toggle buttons\n\n\u003CExample code={`\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked>\n\u003Clabel class=\"btn btn-secondary\" for=\"option1\">Checked\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options\" id=\"option2\" autocomplete=\"off\">\n\u003Clabel class=\"btn btn-secondary\" for=\"option2\">Radio\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options\" id=\"option3\" autocomplete=\"off\" disabled>\n\u003Clabel class=\"btn btn-secondary\" for=\"option3\">Disabled\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options\" id=\"option4\" autocomplete=\"off\">\n\u003Clabel class=\"btn btn-secondary\" for=\"option4\">Radio\u003C/label>`} />\n\n\u003CExample code={`\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options-base\" id=\"option5\" autocomplete=\"off\" checked>\n\u003Clabel class=\"btn\" for=\"option5\">Checked\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options-base\" id=\"option6\" autocomplete=\"off\">\n\u003Clabel class=\"btn\" for=\"option6\">Radio\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options-base\" id=\"option7\" autocomplete=\"off\" disabled>\n\u003Clabel class=\"btn\" for=\"option7\">Disabled\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options-base\" id=\"option8\" autocomplete=\"off\">\n\u003Clabel class=\"btn\" for=\"option8\">Radio\u003C/label>`} />\n\n### Outlined styles\n\nDifferent variants of `.btn`, such as the various outlined styles, are supported.\n\n\u003CExample code={`\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-outlined\" autocomplete=\"off\">\n\u003Clabel class=\"btn btn-outline-primary\" for=\"btn-check-outlined\">Single toggle\u003C/label>\u003Cbr>\n\n\u003Cinput type=\"checkbox\" class=\"btn-check\" id=\"btn-check-2-outlined\" checked autocomplete=\"off\">\n\u003Clabel class=\"btn btn-outline-secondary\" for=\"btn-check-2-outlined\">Checked\u003C/label>\u003Cbr>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options-outlined\" id=\"success-outlined\" autocomplete=\"off\" checked>\n\u003Clabel class=\"btn btn-outline-success\" for=\"success-outlined\">Checked success radio\u003C/label>\n\n\u003Cinput type=\"radio\" class=\"btn-check\" name=\"options-outlined\" id=\"danger-outlined\" autocomplete=\"off\">\n\u003Clabel class=\"btn btn-outline-danger\" for=\"danger-outlined\">Danger radio\u003C/label>`} />\n\n## CSS\n\n### Sass variables\n\nVariables for checks:\n\n\u003CScssDocs name=\"form-check-variables\" file=\"scss/_variables.scss\" />\n\nVariables for switches:\n\n\u003CScssDocs name=\"form-switch-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/checks-radios.mdx","e01cbaf932bc489c","forms/checks-radios.mdx","forms/form-control",{"id":599,"data":601,"body":604,"filePath":605,"digest":606,"legacyId":607,"deferredRender":139},{"description":602,"title":603,"toc":139},"Give textual form controls like `\u003Cinput>`s and `\u003Ctextarea>`s an upgrade with custom styles, sizing, focus states, and more.","Form controls","## Example\n\nForm controls are styled with a mix of Sass and CSS variables, allowing them to adapt to color modes and support any customization method.\n\n\u003CExample code={`\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"exampleFormControlInput1\" class=\"form-label\">Email address\u003C/label>\n  \u003Cinput type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\">\n\u003C/div>\n\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"exampleFormControlTextarea1\" class=\"form-label\">Example textarea\u003C/label>\n  \u003Ctextarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\">\u003C/textarea>\n\u003C/div>`} />\n\n## Sizing\n\nSet heights using classes like `.form-control-lg` and `.form-control-sm`.\n\n\u003CExample code={`\u003Cinput class=\"form-control form-control-lg\" type=\"text\" placeholder=\".form-control-lg\" aria-label=\".form-control-lg example\">\n\u003Cinput class=\"form-control\" type=\"text\" placeholder=\"Default input\" aria-label=\"default input example\">\n\u003Cinput class=\"form-control form-control-sm\" type=\"text\" placeholder=\".form-control-sm\" aria-label=\".form-control-sm example\">`} />\n\n## Form text\n\nBlock-level or inline-level form text can be created using `.form-text`.\n\n\u003CCallout type=\"warning\">\nForm text should be explicitly associated with the form control it relates to using the `aria-describedby` attribute. This will ensure that assistive technologies—such as screen readers—will announce this form text when the user focuses or enters the control.\n\u003C/Callout>\n\nForm text below inputs can be styled with `.form-text`. If a block-level element will be used, a top margin is added for easy spacing from the inputs above.\n\n\u003CExample code={`\u003Clabel for=\"inputPassword5\" class=\"form-label\">Password\u003C/label>\n\u003Cinput type=\"password\" id=\"inputPassword5\" class=\"form-control\" aria-describedby=\"passwordHelpBlock\">\n\u003Cdiv id=\"passwordHelpBlock\" class=\"form-text\">\n  Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\n\u003C/div>`} />\n\nInline text can use any typical inline HTML element (be it a `\u003Cspan>`, `\u003Csmall>`, or something else) with nothing more than the `.form-text` class.\n\n\u003CExample code={`\u003Cdiv class=\"row g-3 align-items-center\">\n  \u003Cdiv class=\"col-auto\">\n    \u003Clabel for=\"inputPassword6\" class=\"col-form-label\">Password\u003C/label>\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cinput type=\"password\" id=\"inputPassword6\" class=\"form-control\" aria-describedby=\"passwordHelpInline\">\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cspan id=\"passwordHelpInline\" class=\"form-text\">\n      Must be 8-20 characters long.\n    \u003C/span>\n  \u003C/div>\n\u003C/div>`} />\n\n## Disabled\n\nAdd the `disabled` boolean attribute on an input to give it a grayed out appearance, remove pointer events, and prevent focusing.\n\n\u003CExample code={`\u003Cinput class=\"form-control\" type=\"text\" placeholder=\"Disabled input\" aria-label=\"Disabled input example\" disabled>\n\u003Cinput class=\"form-control\" type=\"text\" value=\"Disabled readonly input\" aria-label=\"Disabled input example\" disabled readonly>`} />\n\n## Readonly\n\nAdd the `readonly` boolean attribute on an input to prevent modification of the input's value. `readonly` inputs can still be focused and selected, while `disabled` inputs cannot.\n\n\u003CExample code={`\u003Cinput class=\"form-control\" type=\"text\" value=\"Readonly input here...\" aria-label=\"readonly input example\" readonly>`} />\n\n## Readonly plain text\n\nIf you want to have `\u003Cinput readonly>` elements in your form styled as plain text, replace `.form-control` with `.form-control-plaintext` to remove the default form field styling and preserve the correct `margin` and `padding`.\n\n\u003CExample code={`  \u003Cdiv class=\"mb-3 row\">\n    \u003Clabel for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email\u003C/label>\n    \u003Cdiv class=\"col-sm-10\">\n      \u003Cinput type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"email@example.com\">\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"mb-3 row\">\n    \u003Clabel for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password\u003C/label>\n    \u003Cdiv class=\"col-sm-10\">\n      \u003Cinput type=\"password\" class=\"form-control\" id=\"inputPassword\">\n    \u003C/div>\n  \u003C/div>`} />\n\n\u003CExample code={`\u003Cform class=\"row g-3\">\n  \u003Cdiv class=\"col-auto\">\n    \u003Clabel for=\"staticEmail2\" class=\"visually-hidden\">Email\u003C/label>\n    \u003Cinput type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail2\" value=\"email@example.com\">\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Clabel for=\"inputPassword2\" class=\"visually-hidden\">Password\u003C/label>\n    \u003Cinput type=\"password\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\">\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary mb-3\">Confirm identity\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## File input\n\n\u003CExample code={`\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"formFile\" class=\"form-label\">Default file input example\u003C/label>\n  \u003Cinput class=\"form-control\" type=\"file\" id=\"formFile\">\n\u003C/div>\n\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"formFileMultiple\" class=\"form-label\">Multiple files input example\u003C/label>\n  \u003Cinput class=\"form-control\" type=\"file\" id=\"formFileMultiple\" multiple>\n\u003C/div>\n\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"formFileDisabled\" class=\"form-label\">Disabled file input example\u003C/label>\n  \u003Cinput class=\"form-control\" type=\"file\" id=\"formFileDisabled\" disabled>\n\u003C/div>\n\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"formFileSm\" class=\"form-label\">Small file input example\u003C/label>\n  \u003Cinput class=\"form-control form-control-sm\" id=\"formFileSm\" type=\"file\">\n\u003C/div>\n\u003Cdiv>\n  \u003Clabel for=\"formFileLg\" class=\"form-label\">Large file input example\u003C/label>\n  \u003Cinput class=\"form-control form-control-lg\" id=\"formFileLg\" type=\"file\">\n\u003C/div>`} />\n\n## Color\n\nSet the `type=\"color\"` and add `.form-control-color` to the `\u003Cinput>`. We use the modifier class to set fixed `height`s and override some inconsistencies between browsers.\n\n\u003CExample code={`\u003Clabel for=\"exampleColorInput\" class=\"form-label\">Color picker\u003C/label>\n\u003Cinput type=\"color\" class=\"form-control form-control-color\" id=\"exampleColorInput\" value=\"#563d7c\" title=\"Choose your color\">`} />\n\n## Datalists\n\nDatalists allow you to create a group of `\u003Coption>`s that can be accessed (and autocompleted) from within an `\u003Cinput>`. These are similar to `\u003Cselect>` elements, but come with more menu styling limitations and differences. While most browsers and operating systems include some support for `\u003Cdatalist>` elements, their styling is inconsistent at best.\n\nLearn more about [support for datalist elements](https://caniuse.com/datalist).\n\n\u003CExample code={`\u003Clabel for=\"exampleDataList\" class=\"form-label\">Datalist example\u003C/label>\n\u003Cinput class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\">\n\u003Cdatalist id=\"datalistOptions\">\n  \u003Coption value=\"San Francisco\">\n  \u003Coption value=\"New York\">\n  \u003Coption value=\"Seattle\">\n  \u003Coption value=\"Los Angeles\">\n  \u003Coption value=\"Chicago\">\n\u003C/datalist>`} />\n\n## CSS\n\n### Sass variables\n\n`$input-*` are shared across most of our form controls (and not buttons).\n\n\u003CScssDocs name=\"form-input-variables\" file=\"scss/_variables.scss\" />\n\n`$form-label-*` and `$form-text-*` are for our `\u003Clabel>`s and `.form-text` component.\n\n\u003CScssDocs name=\"form-label-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"form-text-variables\" file=\"scss/_variables.scss\" />\n\n`$form-file-*` are for file input.\n\n\u003CScssDocs name=\"form-file-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/form-control.mdx","4987aebc6b778fef","forms/form-control.mdx","forms/overview",{"id":608,"data":610,"body":637,"filePath":638,"digest":639,"legacyId":640,"deferredRender":139},{"aliases":611,"description":612,"sections":613,"title":636,"toc":139},"/docs/[[config:docs_version]]/forms/","Examples and usage guidelines for form control styles, layout options, and custom components for creating a wide variety of forms.",[614,617,620,623,626,629,630,633],{"description":615,"title":616},"Style textual inputs and textareas with support for multiple states.","Form control",{"description":618,"title":619},"Improve browser default select elements with a custom initial appearance.","Select",{"description":621,"title":622},"Use our custom radio buttons and checkboxes in forms for selecting input options.","Checks & radios",{"description":624,"title":625},"Replace browser default range inputs with our custom version.","Range",{"description":627,"title":628},"Attach labels and buttons to your inputs for increased semantic value.","Input group",{"description":583,"title":584},{"description":631,"title":632},"Create inline, horizontal, or complex grid-based layouts with your forms.","Layout",{"description":634,"title":635},"Validate your forms with custom or native validation behaviors and styles.","Validation","Forms","## Overview\n\nBootstrap's form controls expand on [our Rebooted form styles]([[docsref:/content/reboot#forms]]) with classes. Use these classes to opt into their customized displays for a more consistent rendering across browsers and devices.\n\nBe sure to use an appropriate `type` attribute on all inputs (e.g., `email` for email address or `number` for numerical information) to take advantage of newer input controls like email verification, number selection, and more.\n\nHere's a quick example to demonstrate Bootstrap's form styles. Keep reading for documentation on required classes, form layout, and more.\n\n\u003CExample code={`\u003Cform>\n  \u003Cdiv class=\"mb-3\">\n    \u003Clabel for=\"exampleInputEmail1\" class=\"form-label\">Email address\u003C/label>\n    \u003Cinput type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n    \u003Cdiv id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"mb-3\">\n    \u003Clabel for=\"exampleInputPassword1\" class=\"form-label\">Password\u003C/label>\n    \u003Cinput type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n  \u003C/div>\n  \u003Cdiv class=\"mb-3 form-check\">\n    \u003Cinput type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n    \u003Clabel class=\"form-check-label\" for=\"exampleCheck1\">Check me out\u003C/label>\n  \u003C/div>\n  \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Submit\u003C/button>\n\u003C/form>`} />\n\n## Disabled forms\n\nAdd the `disabled` boolean attribute on an input to prevent user interactions and make it appear lighter.\n\n```html\n\u003Cinput class=\"form-control\" id=\"disabledInput\" type=\"text\" placeholder=\"Disabled input here...\" disabled>\n```\n\nAdd the `disabled` attribute to a `\u003Cfieldset>` to disable all the controls within. Browsers treat all native form controls (`\u003Cinput>`, `\u003Cselect>`, and `\u003Cbutton>` elements) inside a `\u003Cfieldset disabled>` as disabled, preventing both keyboard and mouse interactions on them.\n\nHowever, if your form also includes custom button-like elements such as `\u003Ca class=\"btn btn-*\">...\u003C/a>`, these will only be given a style of `pointer-events: none`, meaning they are still focusable and operable using the keyboard. In this case, you must manually modify these controls by adding `tabindex=\"-1\"` to prevent them from receiving focus and `aria-disabled=\"disabled\"` to signal their state to assistive technologies.\n\n\u003CExample code={`\u003Cform>\n  \u003Cfieldset disabled>\n    \u003Clegend>Disabled fieldset example\u003C/legend>\n    \u003Cdiv class=\"mb-3\">\n      \u003Clabel for=\"disabledTextInput\" class=\"form-label\">Disabled input\u003C/label>\n      \u003Cinput type=\"text\" id=\"disabledTextInput\" class=\"form-control\" placeholder=\"Disabled input\">\n    \u003C/div>\n    \u003Cdiv class=\"mb-3\">\n      \u003Clabel for=\"disabledSelect\" class=\"form-label\">Disabled select menu\u003C/label>\n      \u003Cselect id=\"disabledSelect\" class=\"form-select\">\n        \u003Coption>Disabled select\u003C/option>\n      \u003C/select>\n    \u003C/div>\n    \u003Cdiv class=\"mb-3\">\n      \u003Cdiv class=\"form-check\">\n        \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"disabledFieldsetCheck\" disabled>\n        \u003Clabel class=\"form-check-label\" for=\"disabledFieldsetCheck\">\n          Can't check this\n        \u003C/label>\n      \u003C/div>\n    \u003C/div>\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Submit\u003C/button>\n  \u003C/fieldset>\n\u003C/form>`} />\n\n## Accessibility\n\nEnsure that all form controls have an appropriate accessible name so that their purpose can be conveyed to users of assistive technologies. The simplest way to achieve this is to use a `\u003Clabel>` element, or—in the case of buttons—to include sufficiently descriptive text as part of the `\u003Cbutton>...\u003C/button>` content.\n\nFor situations where it's not possible to include a visible `\u003Clabel>` or appropriate text content, there are alternative ways of still providing an accessible name, such as:\n\n- `\u003Clabel>` elements hidden using the `.visually-hidden` class\n- Pointing to an existing element that can act as a label using `aria-labelledby`\n- Providing a `title` attribute\n- Explicitly setting the accessible name on an element using `aria-label`\n\nIf none of these are present, assistive technologies may resort to using the `placeholder` attribute as a fallback for the accessible name on `\u003Cinput>` and `\u003Ctextarea>` elements. The examples in this section provide a few suggested, case-specific approaches.\n\nWhile using visually hidden content (`.visually-hidden`, `aria-label`, and even `placeholder` content, which disappears once a form field has content) will benefit assistive technology users, a lack of visible label text may still be problematic for certain users. Some form of visible label is generally the best approach, both for accessibility and usability.\n\n## CSS\n\nMany form variables are set at a general level to be re-used and extended by individual form components. You'll see these most often as `$input-btn-*` and `$input-*` variables.\n\n### Sass variables\n\n`$input-btn-*` variables are shared global variables between our [buttons]([[docsref:/components/buttons]]) and our form components. You'll find these frequently reassigned as values to other component-specific variables.\n\n\u003CScssDocs name=\"input-btn-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/overview.mdx","85fcf727e9350191","forms/overview.mdx","forms/input-group",{"id":641,"data":643,"body":645,"filePath":646,"digest":647,"legacyId":648,"deferredRender":139},{"description":644,"title":628,"toc":139},"Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs, custom selects, and custom file inputs.","## Basic example\n\nPlace one add-on or button on either side of an input. You may also place one on both sides of an input. Remember to place `\u003Clabel>`s outside the input group.\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cspan class=\"input-group-text\" id=\"basic-addon1\">@\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\n  \u003Cspan class=\"input-group-text\" id=\"basic-addon2\">@example.com\u003C/span>\n\u003C/div>\n\n\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"basic-url\" class=\"form-label\">Your vanity URL\u003C/label>\n  \u003Cdiv class=\"input-group\">\n    \u003Cspan class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/\u003C/span>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"basic-url\" aria-describedby=\"basic-addon3 basic-addon4\">\n  \u003C/div>\n  \u003Cdiv class=\"form-text\" id=\"basic-addon4\">Example help text goes outside the input group.\u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cspan class=\"input-group-text\">$\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\">\n  \u003Cspan class=\"input-group-text\">.00\u003C/span>\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\">\n  \u003Cspan class=\"input-group-text\">@\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Server\" aria-label=\"Server\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cspan class=\"input-group-text\">With textarea\u003C/span>\n  \u003Ctextarea class=\"form-control\" aria-label=\"With textarea\">\u003C/textarea>\n\u003C/div>`} />\n\n## Wrapping\n\nInput groups wrap by default via `flex-wrap: wrap` in order to accommodate custom form field validation within an input group. You may disable this with `.flex-nowrap`.\n\n\u003CExample code={`\u003Cdiv class=\"input-group flex-nowrap\">\n  \u003Cspan class=\"input-group-text\" id=\"addon-wrapping\">@\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\">\n\u003C/div>`} />\n\n## Sizing\n\nAdd the relative form sizing classes to the `.input-group` itself and contents within will automatically resize—no need for repeating the form control size classes on each element.\n\n**Sizing on the individual input group elements isn't supported.**\n\n\u003CExample code={`\u003Cdiv class=\"input-group input-group-sm mb-3\">\n  \u003Cspan class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Small\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cspan class=\"input-group-text\" id=\"inputGroup-sizing-default\">Default\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group input-group-lg\">\n  \u003Cspan class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Large\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\">\n\u003C/div>`} />\n\n## Checkboxes and radios\n\nPlace any checkbox or radio option within an input group's addon instead of text. We recommend adding `.mt-0` to the `.form-check-input` when there's no visible text next to the input.\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cdiv class=\"input-group-text\">\n    \u003Cinput class=\"form-check-input mt-0\" type=\"checkbox\" value=\"\" aria-label=\"Checkbox for following text input\">\n  \u003C/div>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with checkbox\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cdiv class=\"input-group-text\">\n    \u003Cinput class=\"form-check-input mt-0\" type=\"radio\" value=\"\" aria-label=\"Radio button for following text input\">\n  \u003C/div>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with radio button\">\n\u003C/div>`} />\n\n## Multiple inputs\n\nWhile multiple `\u003Cinput>`s are supported visually, validation styles are only available for input groups with a single `\u003Cinput>`.\n\n\u003CExample code={`\u003Cdiv class=\"input-group\">\n  \u003Cspan class=\"input-group-text\">First and last name\u003C/span>\n  \u003Cinput type=\"text\" aria-label=\"First name\" class=\"form-control\">\n  \u003Cinput type=\"text\" aria-label=\"Last name\" class=\"form-control\">\n\u003C/div>`} />\n\n## Multiple addons\n\nMultiple add-ons are supported and can be mixed with checkbox and radio input versions.\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cspan class=\"input-group-text\">$\u003C/span>\n  \u003Cspan class=\"input-group-text\">0.00\u003C/span>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Dollar amount (with dot and two decimal places)\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Dollar amount (with dot and two decimal places)\">\n  \u003Cspan class=\"input-group-text\">$\u003C/span>\n  \u003Cspan class=\"input-group-text\">0.00\u003C/span>\n\u003C/div>`} />\n\n## Button addons\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon1\">Button\u003C/button>\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"\" aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Button\u003C/button>\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\">Button\u003C/button>\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\">Button\u003C/button>\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"\" aria-label=\"Example text with two button addons\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username with two button addons\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\">Button\u003C/button>\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\">Button\u003C/button>\n\u003C/div>`} />\n\n## Buttons with dropdowns\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cbutton class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown\u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\">\n  \u003Cbutton class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown\u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cbutton class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown\u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action before\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action before\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with 2 dropdown buttons\">\n  \u003Cbutton class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown\u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n## Segmented buttons\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">Action\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with segmented dropdown button\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cinput type=\"text\" class=\"form-control\" aria-label=\"Text input with segmented dropdown button\">\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">Action\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    \u003Cspan class=\"visually-hidden\">Toggle Dropdown\u003C/span>\n  \u003C/button>\n  \u003Cul class=\"dropdown-menu dropdown-menu-end\">\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Another action\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Something else here\u003C/a>\u003C/li>\n    \u003Cli>\u003Chr class=\"dropdown-divider\">\u003C/li>\n    \u003Cli>\u003Ca class=\"dropdown-item\" href=\"#\">Separated link\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>`} />\n\n## Custom forms\n\nInput groups include support for custom selects and custom file inputs. Browser default versions of these are not supported.\n\n### Custom select\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Clabel class=\"input-group-text\" for=\"inputGroupSelect01\">Options\u003C/label>\n  \u003Cselect class=\"form-select\" id=\"inputGroupSelect01\">\n    \u003Coption selected>Choose...\u003C/option>\n    \u003Coption value=\"1\">One\u003C/option>\n    \u003Coption value=\"2\">Two\u003C/option>\n    \u003Coption value=\"3\">Three\u003C/option>\n  \u003C/select>\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cselect class=\"form-select\" id=\"inputGroupSelect02\">\n    \u003Coption selected>Choose...\u003C/option>\n    \u003Coption value=\"1\">One\u003C/option>\n    \u003Coption value=\"2\">Two\u003C/option>\n    \u003Coption value=\"3\">Three\u003C/option>\n  \u003C/select>\n  \u003Clabel class=\"input-group-text\" for=\"inputGroupSelect02\">Options\u003C/label>\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\">Button\u003C/button>\n  \u003Cselect class=\"form-select\" id=\"inputGroupSelect03\" aria-label=\"Example select with button addon\">\n    \u003Coption selected>Choose...\u003C/option>\n    \u003Coption value=\"1\">One\u003C/option>\n    \u003Coption value=\"2\">Two\u003C/option>\n    \u003Coption value=\"3\">Three\u003C/option>\n  \u003C/select>\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cselect class=\"form-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\">\n    \u003Coption selected>Choose...\u003C/option>\n    \u003Coption value=\"1\">One\u003C/option>\n    \u003Coption value=\"2\">Two\u003C/option>\n    \u003Coption value=\"3\">Three\u003C/option>\n  \u003C/select>\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\">Button\u003C/button>\n\u003C/div>`} />\n\n### Custom file input\n\n\u003CExample code={`\u003Cdiv class=\"input-group mb-3\">\n  \u003Clabel class=\"input-group-text\" for=\"inputGroupFile01\">Upload\u003C/label>\n  \u003Cinput type=\"file\" class=\"form-control\" id=\"inputGroupFile01\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cinput type=\"file\" class=\"form-control\" id=\"inputGroupFile02\">\n  \u003Clabel class=\"input-group-text\" for=\"inputGroupFile02\">Upload\u003C/label>\n\u003C/div>\n\n\u003Cdiv class=\"input-group mb-3\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\" id=\"inputGroupFileAddon03\">Button\u003C/button>\n  \u003Cinput type=\"file\" class=\"form-control\" id=\"inputGroupFile03\" aria-describedby=\"inputGroupFileAddon03\" aria-label=\"Upload\">\n\u003C/div>\n\n\u003Cdiv class=\"input-group\">\n  \u003Cinput type=\"file\" class=\"form-control\" id=\"inputGroupFile04\" aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\">\n  \u003Cbutton class=\"btn btn-outline-secondary\" type=\"button\" id=\"inputGroupFileAddon04\">Button\u003C/button>\n\u003C/div>`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"input-group-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/input-group.mdx","a1c2e0335046e722","forms/input-group.mdx","forms/layout",{"id":649,"data":651,"body":653,"filePath":654,"digest":655,"legacyId":656,"deferredRender":139},{"description":652,"title":632,"toc":139},"Give your forms some structure—from inline to horizontal to custom grid implementations—with our form layout options.","## Forms\n\nEvery group of form fields should reside in a `\u003Cform>` element. Bootstrap provides no default styling for the `\u003Cform>` element, but there are some powerful browser features that are provided by default.\n\n- New to browser forms? Consider reviewing [the MDN form docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) for an overview and complete list of available attributes.\n- `\u003Cbutton>`s within a `\u003Cform>` default to `type=\"submit\"`, so strive to be specific and always include a `type`.\n\nSince Bootstrap applies `display: block` and `width: 100%` to almost all our form controls, forms will by default stack vertically. Additional classes can be used to vary this layout on a per-form basis.\n\n## Utilities\n\n[Margin utilities]([[docsref:/utilities/spacing]]) are the easiest way to add some structure to forms. They provide basic grouping of labels, controls, optional form text, and form validation messaging. We recommend sticking to `margin-bottom` utilities, and using a single direction throughout the form for consistency.\n\nFeel free to build your forms however you like, with `\u003Cfieldset>`s, `\u003Cdiv>`s, or nearly any other element.\n\n\u003CExample code={`\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"formGroupExampleInput\" class=\"form-label\">Example label\u003C/label>\n  \u003Cinput type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Example input placeholder\">\n\u003C/div>\n\u003Cdiv class=\"mb-3\">\n  \u003Clabel for=\"formGroupExampleInput2\" class=\"form-label\">Another label\u003C/label>\n  \u003Cinput type=\"text\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Another input placeholder\">\n\u003C/div>`} />\n\n## Form grid\n\nMore complex forms can be built using our grid classes. Use these for form layouts that require multiple columns, varied widths, and additional alignment options. **Requires the `$enable-grid-classes` Sass variable to be enabled** (on by default).\n\n\u003CExample code={`\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"First name\" aria-label=\"First name\">\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Last name\" aria-label=\"Last name\">\n  \u003C/div>\n\u003C/div>`} />\n\n## Gutters\n\nBy adding [gutter modifier classes]([[docsref:/layout/gutters]]), you can have control over the gutter width in as well the inline as block direction. **Also requires the `$enable-grid-classes` Sass variable to be enabled** (on by default).\n\n\u003CExample code={`\u003Cdiv class=\"row g-3\">\n  \u003Cdiv class=\"col\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"First name\" aria-label=\"First name\">\n  \u003C/div>\n  \u003Cdiv class=\"col\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Last name\" aria-label=\"Last name\">\n  \u003C/div>\n\u003C/div>`} />\n\nMore complex layouts can also be created with the grid system.\n\n\u003CExample code={`\u003Cform class=\"row g-3\">\n  \u003Cdiv class=\"col-md-6\">\n    \u003Clabel for=\"inputEmail4\" class=\"form-label\">Email\u003C/label>\n    \u003Cinput type=\"email\" class=\"form-control\" id=\"inputEmail4\">\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6\">\n    \u003Clabel for=\"inputPassword4\" class=\"form-label\">Password\u003C/label>\n    \u003Cinput type=\"password\" class=\"form-control\" id=\"inputPassword4\">\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Clabel for=\"inputAddress\" class=\"form-label\">Address\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Clabel for=\"inputAddress2\" class=\"form-label\">Address 2\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\">\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6\">\n    \u003Clabel for=\"inputCity\" class=\"form-label\">City\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"inputCity\">\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"inputState\" class=\"form-label\">State\u003C/label>\n    \u003Cselect id=\"inputState\" class=\"form-select\">\n      \u003Coption selected>Choose...\u003C/option>\n      \u003Coption>...\u003C/option>\n    \u003C/select>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-2\">\n    \u003Clabel for=\"inputZip\" class=\"form-label\">Zip\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"inputZip\">\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\">\n      \u003Clabel class=\"form-check-label\" for=\"gridCheck\">\n        Check me out\n      \u003C/label>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Sign in\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## Horizontal form\n\nCreate horizontal forms with the grid by adding the `.row` class to form groups and using the `.col-*-*` classes to specify the width of your labels and controls. Be sure to add `.col-form-label` to your `\u003Clabel>`s as well so they're vertically centered with their associated form controls.\n\nAt times, you maybe need to use margin or padding utilities to create that perfect alignment you need. For example, we've removed the `padding-top` on our stacked radio inputs label to better align the text baseline.\n\n\u003CExample code={`\u003Cform>\n  \u003Cdiv class=\"row mb-3\">\n    \u003Clabel for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email\u003C/label>\n    \u003Cdiv class=\"col-sm-10\">\n      \u003Cinput type=\"email\" class=\"form-control\" id=\"inputEmail3\">\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row mb-3\">\n    \u003Clabel for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Password\u003C/label>\n    \u003Cdiv class=\"col-sm-10\">\n      \u003Cinput type=\"password\" class=\"form-control\" id=\"inputPassword3\">\n    \u003C/div>\n  \u003C/div>\n  \u003Cfieldset class=\"row mb-3\">\n    \u003Clegend class=\"col-form-label col-sm-2 pt-0\">Radios\u003C/legend>\n    \u003Cdiv class=\"col-sm-10\">\n      \u003Cdiv class=\"form-check\">\n        \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"option1\" checked>\n        \u003Clabel class=\"form-check-label\" for=\"gridRadios1\">\n          First radio\n        \u003C/label>\n      \u003C/div>\n      \u003Cdiv class=\"form-check\">\n        \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"option2\">\n        \u003Clabel class=\"form-check-label\" for=\"gridRadios2\">\n          Second radio\n        \u003C/label>\n      \u003C/div>\n      \u003Cdiv class=\"form-check disabled\">\n        \u003Cinput class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios3\" value=\"option3\" disabled>\n        \u003Clabel class=\"form-check-label\" for=\"gridRadios3\">\n          Third disabled radio\n        \u003C/label>\n      \u003C/div>\n    \u003C/div>\n  \u003C/fieldset>\n  \u003Cdiv class=\"row mb-3\">\n    \u003Cdiv class=\"col-sm-10 offset-sm-2\">\n      \u003Cdiv class=\"form-check\">\n        \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\">\n        \u003Clabel class=\"form-check-label\" for=\"gridCheck1\">\n          Example checkbox\n        \u003C/label>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Sign in\u003C/button>\n\u003C/form>`} />\n\n### Horizontal form label sizing\n\nBe sure to use `.col-form-label-sm` or `.col-form-label-lg` to your `\u003Clabel>`s or `\u003Clegend>`s to correctly follow the size of `.form-control-lg` and `.form-control-sm`.\n\n\u003CExample code={`\u003Cdiv class=\"row mb-3\">\n  \u003Clabel for=\"colFormLabelSm\" class=\"col-sm-2 col-form-label col-form-label-sm\">Email\u003C/label>\n  \u003Cdiv class=\"col-sm-10\">\n    \u003Cinput type=\"email\" class=\"form-control form-control-sm\" id=\"colFormLabelSm\" placeholder=\"col-form-label-sm\">\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"row mb-3\">\n  \u003Clabel for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Email\u003C/label>\n  \u003Cdiv class=\"col-sm-10\">\n    \u003Cinput type=\"email\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"col-form-label\">\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"row\">\n  \u003Clabel for=\"colFormLabelLg\" class=\"col-sm-2 col-form-label col-form-label-lg\">Email\u003C/label>\n  \u003Cdiv class=\"col-sm-10\">\n    \u003Cinput type=\"email\" class=\"form-control form-control-lg\" id=\"colFormLabelLg\" placeholder=\"col-form-label-lg\">\n  \u003C/div>\n\u003C/div>`} />\n\n## Column sizing\n\nAs shown in the previous examples, our grid system allows you to place any number of `.col`s within a `.row`. They'll split the available width equally between them. You may also pick a subset of your columns to take up more or less space, while the remaining `.col`s equally split the rest, with specific column classes like `.col-sm-7`.\n\n\u003CExample code={`\u003Cdiv class=\"row g-3\">\n  \u003Cdiv class=\"col-sm-7\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"City\" aria-label=\"City\">\n  \u003C/div>\n  \u003Cdiv class=\"col-sm\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"State\" aria-label=\"State\">\n  \u003C/div>\n  \u003Cdiv class=\"col-sm\">\n    \u003Cinput type=\"text\" class=\"form-control\" placeholder=\"Zip\" aria-label=\"Zip\">\n  \u003C/div>\n\u003C/div>`} />\n\n## Auto-sizing\n\nThe example below uses a flexbox utility to vertically center the contents and changes `.col` to `.col-auto` so that your columns only take up as much space as needed. Put another way, the column sizes itself based on the contents.\n\n\u003CExample code={`\u003Cform class=\"row gy-2 gx-3 align-items-center\">\n  \u003Cdiv class=\"col-auto\">\n    \u003Clabel class=\"visually-hidden\" for=\"autoSizingInput\">Name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"autoSizingInput\" placeholder=\"Jane Doe\">\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Clabel class=\"visually-hidden\" for=\"autoSizingInputGroup\">Username\u003C/label>\n    \u003Cdiv class=\"input-group\">\n      \u003Cdiv class=\"input-group-text\">@\u003C/div>\n      \u003Cinput type=\"text\" class=\"form-control\" id=\"autoSizingInputGroup\" placeholder=\"Username\">\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Clabel class=\"visually-hidden\" for=\"autoSizingSelect\">Preference\u003C/label>\n    \u003Cselect class=\"form-select\" id=\"autoSizingSelect\">\n      \u003Coption selected>Choose...\u003C/option>\n      \u003Coption value=\"1\">One\u003C/option>\n      \u003Coption value=\"2\">Two\u003C/option>\n      \u003Coption value=\"3\">Three\u003C/option>\n    \u003C/select>\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck\">\n      \u003Clabel class=\"form-check-label\" for=\"autoSizingCheck\">\n        Remember me\n      \u003C/label>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Submit\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\nYou can then remix that once again with size-specific column classes.\n\n\u003CExample code={`\u003Cform class=\"row gx-3 gy-2 align-items-center\">\n  \u003Cdiv class=\"col-sm-3\">\n    \u003Clabel class=\"visually-hidden\" for=\"specificSizeInputName\">Name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"specificSizeInputName\" placeholder=\"Jane Doe\">\n  \u003C/div>\n  \u003Cdiv class=\"col-sm-3\">\n    \u003Clabel class=\"visually-hidden\" for=\"specificSizeInputGroupUsername\">Username\u003C/label>\n    \u003Cdiv class=\"input-group\">\n      \u003Cdiv class=\"input-group-text\">@\u003C/div>\n      \u003Cinput type=\"text\" class=\"form-control\" id=\"specificSizeInputGroupUsername\" placeholder=\"Username\">\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-sm-3\">\n    \u003Clabel class=\"visually-hidden\" for=\"specificSizeSelect\">Preference\u003C/label>\n    \u003Cselect class=\"form-select\" id=\"specificSizeSelect\">\n      \u003Coption selected>Choose...\u003C/option>\n      \u003Coption value=\"1\">One\u003C/option>\n      \u003Coption value=\"2\">Two\u003C/option>\n      \u003Coption value=\"3\">Three\u003C/option>\n    \u003C/select>\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck2\">\n      \u003Clabel class=\"form-check-label\" for=\"autoSizingCheck2\">\n        Remember me\n      \u003C/label>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-auto\">\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Submit\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## Inline forms\n\nUse the `.row-cols-*` classes to create responsive horizontal layouts. By adding [gutter modifier classes]([[docsref:/layout/gutters]]), we'll have gutters in horizontal and vertical directions. On narrow mobile viewports, the `.col-12` helps stack the form controls and more. The `.align-items-center` aligns the form elements to the middle, making the `.form-check` align properly.\n\n\u003CExample code={`\u003Cform class=\"row row-cols-lg-auto g-3 align-items-center\">\n  \u003Cdiv class=\"col-12\">\n    \u003Clabel class=\"visually-hidden\" for=\"inlineFormInputGroupUsername\">Username\u003C/label>\n    \u003Cdiv class=\"input-group\">\n      \u003Cdiv class=\"input-group-text\">@\u003C/div>\n      \u003Cinput type=\"text\" class=\"form-control\" id=\"inlineFormInputGroupUsername\" placeholder=\"Username\">\n    \u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"col-12\">\n    \u003Clabel class=\"visually-hidden\" for=\"inlineFormSelectPref\">Preference\u003C/label>\n    \u003Cselect class=\"form-select\" id=\"inlineFormSelectPref\">\n      \u003Coption selected>Choose...\u003C/option>\n      \u003Coption value=\"1\">One\u003C/option>\n      \u003Coption value=\"2\">Two\u003C/option>\n      \u003Coption value=\"3\">Three\u003C/option>\n    \u003C/select>\n  \u003C/div>\n\n  \u003Cdiv class=\"col-12\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input\" type=\"checkbox\" id=\"inlineFormCheck\">\n      \u003Clabel class=\"form-check-label\" for=\"inlineFormCheck\">\n        Remember me\n      \u003C/label>\n    \u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"col-12\">\n    \u003Cbutton type=\"submit\" class=\"btn btn-primary\">Submit\u003C/button>\n  \u003C/div>\n\u003C/form>`} />","src/content/docs/forms/layout.mdx","99ba926149fa95d8","forms/layout.mdx","getting-started/accessibility",{"id":657,"data":659,"body":662,"filePath":663,"digest":664,"legacyId":665,"deferredRender":139},{"description":660,"title":661,"toc":139},"A brief overview of Bootstrap's features and limitations for the creation of accessible content.","Accessibility","Bootstrap provides an easy-to-use framework of ready-made styles, layout tools, and interactive components, allowing developers to create websites and applications that are visually appealing, functionally rich, and accessible out of the box.\n\n## Overview and limitations\n\nThe overall accessibility of any project built with Bootstrap depends in large part on the author's markup, additional styling, and scripting they've included. However, provided that these have been implemented correctly, it should be perfectly possible to create websites and applications with Bootstrap that fulfill [\u003Cabbr title=\"Web Content Accessibility Guidelines\">WCAG\u003C/abbr> 2.2](https://www.w3.org/TR/WCAG/) (A/AA/AAA), [Section 508](https://www.section508.gov/), and similar accessibility standards and requirements.\n\n### Structural markup\n\nBootstrap's styling and layout can be applied to a wide range of markup structures. This documentation aims to provide developers with best practice examples to demonstrate the use of Bootstrap itself and illustrate appropriate semantic markup, including ways in which potential accessibility concerns can be addressed.\n\n### Interactive components\n\nBootstrap's interactive components—such as modal dialogs, dropdown menus, and custom tooltips—are designed to work for touch, mouse, and keyboard users. Through the use of relevant [\u003Cabbr title=\"Web Accessibility Initiative\">WAI\u003C/abbr>-\u003Cabbr title=\"Accessible Rich Internet Applications\">ARIA\u003C/abbr>](https://www.w3.org/WAI/standards-guidelines/aria/) roles and attributes, these components should also be understandable and operable using assistive technologies (such as screen readers).\n\nBecause Bootstrap's components are purposely designed to be fairly generic, authors may need to include further \u003Cabbr title=\"Accessible Rich Internet Applications\">ARIA\u003C/abbr> roles and attributes, as well as JavaScript behavior, to more accurately convey the precise nature and functionality of their component. This is usually noted in the documentation.\n\n### Color contrast\n\nSome combinations of colors that currently make up Bootstrap's default palette—used throughout the framework for things such as button variations, alert variations, form validation indicators—may lead to *insufficient* color contrast (below the recommended [WCAG 2.2 text color contrast ratio of 4.5:1](https://www.w3.org/TR/WCAG/#contrast-minimum) and the [WCAG 2.2 non-text color contrast ratio of 3:1](https://www.w3.org/TR/WCAG/#non-text-contrast)), particularly when used against a light background. Authors are encouraged to test their specific uses of color and, where necessary, manually modify/extend these default colors to ensure adequate color contrast ratios.\n\n### Visually hidden content\n\nContent which should be visually hidden, but remain accessible to assistive technologies such as screen readers, can be styled using the `.visually-hidden` class. This can be useful in situations where additional visual information or cues (such as meaning denoted through the use of color) need to also be conveyed to non-visual users.\n\n```html\n\u003Cp class=\"text-danger\">\n  \u003Cspan class=\"visually-hidden\">Danger: \u003C/span>\n  This action is not reversible\n\u003C/p>\n```\n\nFor visually hidden interactive controls, such as traditional \"skip\" links, use the `.visually-hidden-focusable` class. This will ensure that the control becomes visible once focused (for sighted keyboard users). **Watch out, compared to the equivalent `.sr-only` and `.sr-only-focusable` classes in past versions, Bootstrap 5's `.visually-hidden-focusable` is a standalone class, and must not be used in combination with the `.visually-hidden` class.**\n\n```html\n\u003Ca class=\"visually-hidden-focusable\" href=\"#content\">Skip to main content\u003C/a>\n```\n\n### Reduced motion\n\nBootstrap includes support for the [`prefers-reduced-motion` media feature](https://www.w3.org/TR/mediaqueries-5/#prefers-reduced-motion). In browsers/environments that allow the user to specify their preference for reduced motion, most CSS transition effects in Bootstrap (for instance, when a modal dialog is opened or closed, or the sliding animation in carousels) will be disabled, and meaningful animations (such as spinners) will be slowed down.\n\nOn browsers that support `prefers-reduced-motion`, and where the user has *not* explicitly signaled that they'd prefer reduced motion (i.e. where `prefers-reduced-motion: no-preference`), Bootstrap enables smooth scrolling using the `scroll-behavior` property.\n\n## Additional resources\n\n- [Web Content Accessibility Guidelines (WCAG) 2.2](https://www.w3.org/TR/WCAG/)\n- [The A11Y Project](https://www.a11yproject.com/)\n- [MDN accessibility documentation](https://developer.mozilla.org/en-US/docs/Web/Accessibility)\n- [Tenon.io Accessibility Checker](https://tenon.io/)\n- [Color Contrast Analyser (CCA)](https://www.tpgi.com/color-contrast-checker/)\n- [\"HTML Codesniffer\" bookmarklet for identifying accessibility issues](https://github.com/squizlabs/HTML_CodeSniffer)\n- [Microsoft Accessibility Insights](https://accessibilityinsights.io/)\n- [Deque Axe testing tools](https://www.deque.com/axe/)\n- [Introduction to Web Accessibility](https://www.w3.org/WAI/fundamentals/accessibility-intro/)","src/content/docs/getting-started/accessibility.mdx","7297ba669fe1faac","getting-started/accessibility.mdx","forms/validation",{"id":666,"data":668,"body":673,"filePath":674,"digest":675,"legacyId":676,"deferredRender":139},{"description":669,"extra_js":670,"title":635,"toc":139},"Provide valuable, actionable feedback to your users with HTML5 form validation, via browser default behaviors or custom styles and JavaScript.",[671],{"async":139,"src":672},"[[docsref:/assets/js/validate-forms.js]]","import { getDocsRelativePath } from '@libs/path'\n\n\u003CCallout type=\"warning\">\nWe are aware that currently the client-side custom validation styles and tooltips are not accessible, since they are not exposed to assistive technologies. While we work on a solution, we'd recommend either using the server-side option or the default browser validation method.\n\u003C/Callout>\n\n## How it works\n\nHere's how form validation works with Bootstrap:\n\n- HTML form validation is applied via CSS's two pseudo-classes, `:invalid` and `:valid`. It applies to `\u003Cinput>`, `\u003Cselect>`, and `\u003Ctextarea>` elements.\n- Bootstrap scopes the `:invalid` and `:valid` styles to parent `.was-validated` class, usually applied to the `\u003Cform>`. Otherwise, any required field without a value shows up as invalid on page load. This way, you may choose when to activate them (typically after form submission is attempted).\n- To reset the appearance of the form (for instance, in the case of dynamic form submissions using Ajax), remove the `.was-validated` class from the `\u003Cform>` again after submission.\n- As a fallback, `.is-invalid` and `.is-valid` classes may be used instead of the pseudo-classes for [server-side validation](#server-side). They do not require a `.was-validated` parent class.\n- Due to constraints in how CSS works, we cannot (at present) apply styles to a `\u003Clabel>` that comes before a form control in the DOM without the help of custom JavaScript.\n- All modern browsers support the [constraint validation API](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#the-constraint-validation-api), a series of JavaScript methods for validating form controls.\n- Feedback messages may utilize the [browser defaults](#browser-defaults) (different for each browser, and unstylable via CSS) or our custom feedback styles with additional HTML and CSS.\n- You may provide custom validity messages with `setCustomValidity` in JavaScript.\n\nWith that in mind, consider the following demos for our custom form validation styles, optional server-side classes, and browser defaults.\n\n## Custom styles\n\nFor custom Bootstrap form validation messages, you'll need to add the `novalidate` boolean attribute to your `\u003Cform>`. This disables the browser default feedback tooltips, but still provides access to the form validation APIs in JavaScript. Try to submit the form below; our JavaScript will intercept the submit button and relay feedback to you. When attempting to submit, you'll see the `:invalid` and `:valid` styles applied to your form controls.\n\nCustom feedback styles apply custom colors, borders, focus styles, and background icons to better communicate feedback. Background icons for `\u003Cselect>`s are only available with `.form-select`, and not `.form-control`.\n\n\u003CExample code={`\u003Cform class=\"row g-3 needs-validation\" novalidate>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationCustom01\" class=\"form-label\">First name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationCustom01\" value=\"Mark\" required>\n    \u003Cdiv class=\"valid-feedback\">\n      Looks good!\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationCustom02\" class=\"form-label\">Last name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationCustom02\" value=\"Otto\" required>\n    \u003Cdiv class=\"valid-feedback\">\n      Looks good!\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationCustomUsername\" class=\"form-label\">Username\u003C/label>\n    \u003Cdiv class=\"input-group has-validation\">\n      \u003Cspan class=\"input-group-text\" id=\"inputGroupPrepend\">@\u003C/span>\n      \u003Cinput type=\"text\" class=\"form-control\" id=\"validationCustomUsername\" aria-describedby=\"inputGroupPrepend\" required>\n      \u003Cdiv class=\"invalid-feedback\">\n        Please choose a username.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6\">\n    \u003Clabel for=\"validationCustom03\" class=\"form-label\">City\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationCustom03\" required>\n    \u003Cdiv class=\"invalid-feedback\">\n      Please provide a valid city.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3\">\n    \u003Clabel for=\"validationCustom04\" class=\"form-label\">State\u003C/label>\n    \u003Cselect class=\"form-select\" id=\"validationCustom04\" required>\n      \u003Coption selected disabled value=\"\">Choose...\u003C/option>\n      \u003Coption>...\u003C/option>\n    \u003C/select>\n    \u003Cdiv class=\"invalid-feedback\">\n      Please select a valid state.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3\">\n    \u003Clabel for=\"validationCustom05\" class=\"form-label\">Zip\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationCustom05\" required>\n    \u003Cdiv class=\"invalid-feedback\">\n      Please provide a valid zip.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required>\n      \u003Clabel class=\"form-check-label\" for=\"invalidCheck\">\n        Agree to terms and conditions\n      \u003C/label>\n      \u003Cdiv class=\"invalid-feedback\">\n        You must agree before submitting.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cbutton class=\"btn btn-primary\" type=\"submit\">Submit form\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n\u003CCode containerClass=\"bd-example-snippet\" lang=\"js\" filePath={getDocsRelativePath('/static/docs/[version]/assets/js/validate-forms.js')} />\n\n## Browser defaults\n\nNot interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you'll see a slightly different style of feedback.\n\nWhile these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\n\n\u003CExample code={`\u003Cform class=\"row g-3\">\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationDefault01\" class=\"form-label\">First name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationDefault01\" value=\"Mark\" required>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationDefault02\" class=\"form-label\">Last name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationDefault02\" value=\"Otto\" required>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationDefaultUsername\" class=\"form-label\">Username\u003C/label>\n    \u003Cdiv class=\"input-group\">\n      \u003Cspan class=\"input-group-text\" id=\"inputGroupPrepend2\">@\u003C/span>\n      \u003Cinput type=\"text\" class=\"form-control\" id=\"validationDefaultUsername\" aria-describedby=\"inputGroupPrepend2\" required>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6\">\n    \u003Clabel for=\"validationDefault03\" class=\"form-label\">City\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationDefault03\" required>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3\">\n    \u003Clabel for=\"validationDefault04\" class=\"form-label\">State\u003C/label>\n    \u003Cselect class=\"form-select\" id=\"validationDefault04\" required>\n      \u003Coption selected disabled value=\"\">Choose...\u003C/option>\n      \u003Coption>...\u003C/option>\n    \u003C/select>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3\">\n    \u003Clabel for=\"validationDefault05\" class=\"form-label\">Zip\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationDefault05\" required>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck2\" required>\n      \u003Clabel class=\"form-check-label\" for=\"invalidCheck2\">\n        Agree to terms and conditions\n      \u003C/label>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cbutton class=\"btn btn-primary\" type=\"submit\">Submit form\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## Server-side\n\nWe recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with `.is-invalid` and `.is-valid`. Note that `.invalid-feedback` is also supported with these classes.\n\nFor invalid fields, ensure that the invalid feedback/error message is associated with the relevant form field using `aria-describedby` (noting that this attribute allows more than one `id` to be referenced, in case the field already points to additional form text).\n\nTo fix [issues with border radius](https://github.com/twbs/bootstrap/issues/25110), input groups require an additional `.has-validation` class.\n\n\u003CExample code={`\u003Cform class=\"row g-3\">\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationServer01\" class=\"form-label\">First name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control is-valid\" id=\"validationServer01\" value=\"Mark\" required>\n    \u003Cdiv class=\"valid-feedback\">\n      Looks good!\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationServer02\" class=\"form-label\">Last name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control is-valid\" id=\"validationServer02\" value=\"Otto\" required>\n    \u003Cdiv class=\"valid-feedback\">\n      Looks good!\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4\">\n    \u003Clabel for=\"validationServerUsername\" class=\"form-label\">Username\u003C/label>\n    \u003Cdiv class=\"input-group has-validation\">\n      \u003Cspan class=\"input-group-text\" id=\"inputGroupPrepend3\">@\u003C/span>\n      \u003Cinput type=\"text\" class=\"form-control is-invalid\" id=\"validationServerUsername\" aria-describedby=\"inputGroupPrepend3 validationServerUsernameFeedback\" required>\n      \u003Cdiv id=\"validationServerUsernameFeedback\" class=\"invalid-feedback\">\n        Please choose a username.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6\">\n    \u003Clabel for=\"validationServer03\" class=\"form-label\">City\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control is-invalid\" id=\"validationServer03\" aria-describedby=\"validationServer03Feedback\" required>\n    \u003Cdiv id=\"validationServer03Feedback\" class=\"invalid-feedback\">\n      Please provide a valid city.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3\">\n    \u003Clabel for=\"validationServer04\" class=\"form-label\">State\u003C/label>\n    \u003Cselect class=\"form-select is-invalid\" id=\"validationServer04\" aria-describedby=\"validationServer04Feedback\" required>\n      \u003Coption selected disabled value=\"\">Choose...\u003C/option>\n      \u003Coption>...\u003C/option>\n    \u003C/select>\n    \u003Cdiv id=\"validationServer04Feedback\" class=\"invalid-feedback\">\n      Please select a valid state.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3\">\n    \u003Clabel for=\"validationServer05\" class=\"form-label\">Zip\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control is-invalid\" id=\"validationServer05\" aria-describedby=\"validationServer05Feedback\" required>\n    \u003Cdiv id=\"validationServer05Feedback\" class=\"invalid-feedback\">\n      Please provide a valid zip.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cdiv class=\"form-check\">\n      \u003Cinput class=\"form-check-input is-invalid\" type=\"checkbox\" value=\"\" id=\"invalidCheck3\" aria-describedby=\"invalidCheck3Feedback\" required>\n      \u003Clabel class=\"form-check-label\" for=\"invalidCheck3\">\n        Agree to terms and conditions\n      \u003C/label>\n      \u003Cdiv id=\"invalidCheck3Feedback\" class=\"invalid-feedback\">\n        You must agree before submitting.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cbutton class=\"btn btn-primary\" type=\"submit\">Submit form\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## Supported elements\n\nValidation styles are available for the following form controls and components:\n\n- `\u003Cinput>`s and `\u003Ctextarea>`s with `.form-control` (including up to one `.form-control` in input groups)\n- `\u003Cselect>`s with `.form-select`\n- `.form-check`s\n\n\u003CExample code={`\u003Cform class=\"was-validated\">\n  \u003Cdiv class=\"mb-3\">\n    \u003Clabel for=\"validationTextarea\" class=\"form-label\">Textarea\u003C/label>\n    \u003Ctextarea class=\"form-control\" id=\"validationTextarea\" placeholder=\"Required example textarea\" required>\u003C/textarea>\n    \u003Cdiv class=\"invalid-feedback\">\n      Please enter a message in the textarea.\n    \u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"form-check mb-3\">\n    \u003Cinput type=\"checkbox\" class=\"form-check-input\" id=\"validationFormCheck1\" required>\n    \u003Clabel class=\"form-check-label\" for=\"validationFormCheck1\">Check this checkbox\u003C/label>\n    \u003Cdiv class=\"invalid-feedback\">Example invalid feedback text\u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"form-check\">\n    \u003Cinput type=\"radio\" class=\"form-check-input\" id=\"validationFormCheck2\" name=\"radio-stacked\" required>\n    \u003Clabel class=\"form-check-label\" for=\"validationFormCheck2\">Toggle this radio\u003C/label>\n  \u003C/div>\n  \u003Cdiv class=\"form-check mb-3\">\n    \u003Cinput type=\"radio\" class=\"form-check-input\" id=\"validationFormCheck3\" name=\"radio-stacked\" required>\n    \u003Clabel class=\"form-check-label\" for=\"validationFormCheck3\">Or toggle this other radio\u003C/label>\n    \u003Cdiv class=\"invalid-feedback\">More example invalid feedback text\u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"mb-3\">\n    \u003Cselect class=\"form-select\" required aria-label=\"select example\">\n      \u003Coption value=\"\">Open this select menu\u003C/option>\n      \u003Coption value=\"1\">One\u003C/option>\n      \u003Coption value=\"2\">Two\u003C/option>\n      \u003Coption value=\"3\">Three\u003C/option>\n    \u003C/select>\n    \u003Cdiv class=\"invalid-feedback\">Example invalid select feedback\u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"mb-3\">\n    \u003Cinput type=\"file\" class=\"form-control\" aria-label=\"file example\" required>\n    \u003Cdiv class=\"invalid-feedback\">Example invalid form file feedback\u003C/div>\n  \u003C/div>\n\n  \u003Cdiv class=\"mb-3\">\n    \u003Cbutton class=\"btn btn-primary\" type=\"submit\" disabled>Submit form\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## Tooltips\n\nIf your form layout allows it, you can swap the `.{valid|invalid}-feedback` classes for `.{valid|invalid}-tooltip` classes to display validation feedback in a styled tooltip. Be sure to have a parent with `position: relative` on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.\n\n\u003CExample code={`\u003Cform class=\"row g-3 needs-validation\" novalidate>\n  \u003Cdiv class=\"col-md-4 position-relative\">\n    \u003Clabel for=\"validationTooltip01\" class=\"form-label\">First name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationTooltip01\" value=\"Mark\" required>\n    \u003Cdiv class=\"valid-tooltip\">\n      Looks good!\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4 position-relative\">\n    \u003Clabel for=\"validationTooltip02\" class=\"form-label\">Last name\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationTooltip02\" value=\"Otto\" required>\n    \u003Cdiv class=\"valid-tooltip\">\n      Looks good!\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-4 position-relative\">\n    \u003Clabel for=\"validationTooltipUsername\" class=\"form-label\">Username\u003C/label>\n    \u003Cdiv class=\"input-group has-validation\">\n      \u003Cspan class=\"input-group-text\" id=\"validationTooltipUsernamePrepend\">@\u003C/span>\n      \u003Cinput type=\"text\" class=\"form-control\" id=\"validationTooltipUsername\" aria-describedby=\"validationTooltipUsernamePrepend\" required>\n      \u003Cdiv class=\"invalid-tooltip\">\n        Please choose a unique and valid username.\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6 position-relative\">\n    \u003Clabel for=\"validationTooltip03\" class=\"form-label\">City\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationTooltip03\" required>\n    \u003Cdiv class=\"invalid-tooltip\">\n      Please provide a valid city.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3 position-relative\">\n    \u003Clabel for=\"validationTooltip04\" class=\"form-label\">State\u003C/label>\n    \u003Cselect class=\"form-select\" id=\"validationTooltip04\" required>\n      \u003Coption selected disabled value=\"\">Choose...\u003C/option>\n      \u003Coption>...\u003C/option>\n    \u003C/select>\n    \u003Cdiv class=\"invalid-tooltip\">\n      Please select a valid state.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-md-3 position-relative\">\n    \u003Clabel for=\"validationTooltip05\" class=\"form-label\">Zip\u003C/label>\n    \u003Cinput type=\"text\" class=\"form-control\" id=\"validationTooltip05\" required>\n    \u003Cdiv class=\"invalid-tooltip\">\n      Please provide a valid zip.\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"col-12\">\n    \u003Cbutton class=\"btn btn-primary\" type=\"submit\">Submit form\u003C/button>\n  \u003C/div>\n\u003C/form>`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.3.0\"/>\n\nAs part of Bootstrap's evolving CSS variables approach, forms now use local CSS variables for validation for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\n\n\u003CScssDocs name=\"root-form-validation-variables\" file=\"scss/_root.scss\" />\n\nThese variables are also color mode adaptive, meaning they change color while in dark mode.\n\n### Sass variables\n\n\u003CScssDocs name=\"form-feedback-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"form-validation-colors\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"form-validation-colors-dark\" file=\"scss/_variables-dark.scss\" />\n\n### Sass mixins\n\nTwo mixins are combined, through our [loop](#sass-loops), to generate our form validation feedback styles.\n\n\u003CScssDocs name=\"form-validation-mixins\" file=\"scss/mixins/_forms.scss\" />\n\n### Sass maps\n\nThis is the validation Sass map from `_variables.scss`. Override or extend this to generate different or additional states.\n\n\u003CScssDocs name=\"form-validation-states\" file=\"scss/_variables.scss\" />\n\nMaps of `$form-validation-states` can contain three optional parameters to override tooltips and focus styles.\n\n### Sass loops\n\nUsed to iterate over `$form-validation-states` map values to generate our validation styles. Any modifications to the above Sass map will be reflected in your compiled CSS via this loop.\n\n\u003CScssDocs name=\"form-validation-states-loop\" file=\"scss/forms/_validation.scss\" />\n\n### Customizing\n\nValidation states can be customized via Sass with the `$form-validation-states` map. Located in our `_variables.scss` file, this Sass map is how we generate the default `valid`/`invalid` validation states. Included is a nested map for customizing each state's color, icon, tooltip color, and focus shadow. While no other states are supported by browsers, those using custom styles can easily add more complex form feedback.","src/content/docs/forms/validation.mdx","44adadb296886ccc","forms/validation.mdx","forms/range",{"id":677,"data":679,"body":681,"filePath":682,"digest":683,"legacyId":684,"deferredRender":139},{"description":680,"title":625,"toc":139},"Use our custom range inputs for consistent cross-browser styling and built-in customization.","## Overview\n\nCreate custom `\u003Cinput type=\"range\">` controls with `.form-range`. The track (the background) and thumb (the value) are both styled to appear the same across browsers. As only Firefox supports \"filling\" their track from the left or right of the thumb as a means to visually indicate progress, we do not currently support it.\n\n\u003CExample code={`\u003Clabel for=\"customRange1\" class=\"form-label\">Example range\u003C/label>\n\u003Cinput type=\"range\" class=\"form-range\" id=\"customRange1\">`} />\n\n## Disabled\n\nAdd the `disabled` boolean attribute on an input to give it a grayed out appearance, remove pointer events, and prevent focusing.\n\n\u003CExample code={`\u003Clabel for=\"disabledRange\" class=\"form-label\">Disabled range\u003C/label>\n\u003Cinput type=\"range\" class=\"form-range\" id=\"disabledRange\" disabled>`} />\n\n## Min and max\n\nRange inputs have implicit values for `min` and `max`—`0` and `100`, respectively. You may specify new values for those using the `min` and `max` attributes.\n\n\u003CExample code={`\u003Clabel for=\"customRange2\" class=\"form-label\">Example range\u003C/label>\n\u003Cinput type=\"range\" class=\"form-range\" min=\"0\" max=\"5\" id=\"customRange2\">`} />\n\n## Steps\n\nBy default, range inputs \"snap\" to integer values. To change this, you can specify a `step` value. In the example below, we double the number of steps by using `step=\"0.5\"`.\n\n\u003CExample code={`\u003Clabel for=\"customRange3\" class=\"form-label\">Example range\u003C/label>\n\u003Cinput type=\"range\" class=\"form-range\" min=\"0\" max=\"5\" step=\"0.5\" id=\"customRange3\">`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"form-range-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/range.mdx","b9f76cb9529cddf9","forms/range.mdx","forms/select",{"id":685,"data":687,"body":689,"filePath":690,"digest":691,"legacyId":692,"deferredRender":139},{"description":688,"title":619,"toc":139},"Customize the native `\u003Cselect>`s with custom CSS that changes the element's initial appearance.","## Default\n\nCustom `\u003Cselect>` menus need only a custom class, `.form-select` to trigger the custom styles. Custom styles are limited to the `\u003Cselect>`'s initial appearance and cannot modify the `\u003Coption>`s due to browser limitations.\n\n\u003CExample code={`\u003Cselect class=\"form-select\" aria-label=\"Default select example\">\n  \u003Coption selected>Open this select menu\u003C/option>\n  \u003Coption value=\"1\">One\u003C/option>\n  \u003Coption value=\"2\">Two\u003C/option>\n  \u003Coption value=\"3\">Three\u003C/option>\n\u003C/select>`} />\n\n## Sizing\n\nYou may also choose from small and large custom selects to match our similarly sized text inputs.\n\n\u003CExample code={`\u003Cselect class=\"form-select form-select-lg mb-3\" aria-label=\"Large select example\">\n  \u003Coption selected>Open this select menu\u003C/option>\n  \u003Coption value=\"1\">One\u003C/option>\n  \u003Coption value=\"2\">Two\u003C/option>\n  \u003Coption value=\"3\">Three\u003C/option>\n\u003C/select>\n\n\u003Cselect class=\"form-select form-select-sm\" aria-label=\"Small select example\">\n  \u003Coption selected>Open this select menu\u003C/option>\n  \u003Coption value=\"1\">One\u003C/option>\n  \u003Coption value=\"2\">Two\u003C/option>\n  \u003Coption value=\"3\">Three\u003C/option>\n\u003C/select>`} />\n\nThe `multiple` attribute is also supported:\n\n\u003CExample code={`\u003Cselect class=\"form-select\" multiple aria-label=\"Multiple select example\">\n  \u003Coption selected>Open this select menu\u003C/option>\n  \u003Coption value=\"1\">One\u003C/option>\n  \u003Coption value=\"2\">Two\u003C/option>\n  \u003Coption value=\"3\">Three\u003C/option>\n\u003C/select>`} />\n\nAs is the `size` attribute:\n\n\u003CExample code={`\u003Cselect class=\"form-select\" size=\"3\" aria-label=\"Size 3 select example\">\n  \u003Coption selected>Open this select menu\u003C/option>\n  \u003Coption value=\"1\">One\u003C/option>\n  \u003Coption value=\"2\">Two\u003C/option>\n  \u003Coption value=\"3\">Three\u003C/option>\n\u003C/select>`} />\n\n## Disabled\n\nAdd the `disabled` boolean attribute on a select to give it a grayed out appearance and remove pointer events.\n\n\u003CExample code={`\u003Cselect class=\"form-select\" aria-label=\"Disabled select example\" disabled>\n  \u003Coption selected>Open this select menu\u003C/option>\n  \u003Coption value=\"1\">One\u003C/option>\n  \u003Coption value=\"2\">Two\u003C/option>\n  \u003Coption value=\"3\">Three\u003C/option>\n\u003C/select>`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"form-select-variables\" file=\"scss/_variables.scss\" />","src/content/docs/forms/select.mdx","b86bc209d7512ae1","forms/select.mdx","getting-started/best-practices",{"id":693,"data":695,"body":698,"filePath":699,"digest":700,"legacyId":701,"deferredRender":139},{"description":696,"title":697},"Learn about some of the best practices we've gathered from years of working on and using Bootstrap.","Best practices","We've designed and developed Bootstrap to work in a number of environments. Here are some of the best practices we've gathered from years of working on and using it ourselves.\n\n\u003CCallout>\n**Heads up!** This copy is a work in progress.\n\u003C/Callout>\n\n### General outline\n\n- Working with CSS\n- Working with Sass files\n- Building new CSS components\n- Working with flexbox\n- Ask in [our GitHub Discussions](https://github.com/twbs/bootstrap/discussions)","src/content/docs/getting-started/best-practices.mdx","9554737dfd91abde","getting-started/best-practices.mdx","getting-started/browsers-devices",{"id":702,"data":704,"body":707,"filePath":708,"digest":709,"legacyId":710,"deferredRender":139},{"description":705,"title":706,"toc":139},"Learn about the browsers and devices, from modern to old, that are supported by Bootstrap, including known quirks and bugs for each.","Browsers and devices","## Supported browsers\n\nBootstrap supports the **latest, stable releases** of all major browsers and platforms.\n\nAlternative browsers which use the latest version of WebKit, Blink, or Gecko, whether directly or via the platform's web view API, are not explicitly supported. However, Bootstrap should (in most cases) display and function correctly in these browsers as well. More specific support information is provided below.\n\nYou can find our supported range of browsers and their versions [in our `.browserslistrc file`]([[config:repo]]/blob/v[[config:current_version]]/.browserslistrc):\n\n\u003CCode lang=\"plaintext\" filePath=\".browserslistrc\" />\n\nWe use [Autoprefixer](https://github.com/postcss/autoprefixer) to handle intended browser support via CSS prefixes, which uses [Browserslist](https://github.com/browserslist/browserslist) to manage these browser versions. Consult their documentation for how to integrate these tools into your projects.\n\n### Mobile devices\n\nGenerally speaking, Bootstrap supports the latest versions of each major platform's default browsers. Note that proxy browsers (such as Opera Mini, Opera Mobile's Turbo mode, UC Browser Mini, Amazon Silk) are not supported.\n\n\u003CBsTable class=\"table\">\n| | Chrome | Firefox | Safari | Android Browser &amp; WebView |\n| --- | --- | --- | --- | --- |\n| **Android** | Supported | Supported | \u003Cspan class=\"text-body-secondary\">&mdash;\u003C/span> | v6.0+ |\n| **iOS** | Supported | Supported | Supported | \u003Cspan class=\"text-body-secondary\">&mdash;\u003C/span> |\n\u003C/BsTable>\n\n### Desktop browsers\n\nSimilarly, the latest versions of most desktop browsers are supported.\n\n\u003CBsTable class=\"table\">\n| | Chrome | Firefox | Microsoft Edge | Opera | Safari |\n| --- | --- | --- | --- | --- | --- |\n| **Mac** | Supported | Supported | Supported | Supported | Supported |\n| **Windows** | Supported | Supported | Supported | Supported | \u003Cspan class=\"text-body-secondary\">&mdash;\u003C/span> |\n\u003C/BsTable>\n\nFor Firefox, in addition to the latest normal stable release, we also support the latest [Extended Support Release (ESR)](https://www.mozilla.org/en-US/firefox/enterprise/) version of Firefox.\n\nUnofficially, Bootstrap should look and behave well enough in Chromium and Chrome for Linux, and Firefox for Linux, though they are not officially supported.\n\n## Internet Explorer\n\nInternet Explorer is not supported. **If you require Internet Explorer support, please use Bootstrap v4.**\n\n## Modals and dropdowns on mobile\n\n### Overflow and scrolling\n\nSupport for `overflow: hidden;` on the `\u003Cbody>` element is quite limited in iOS and Android. To that end, when you scroll past the top or bottom of a modal in either of those devices' browsers, the `\u003Cbody>` content will begin to scroll. See [Chrome bug #175502](https://issues.chromium.org/issues/40301599) (fixed in Chrome v40) and [WebKit bug #153852](https://bugs.webkit.org/show_bug.cgi?id=153852).\n\n### iOS text fields and scrolling\n\nAs of iOS 9.2, while a modal is open, if the initial touch of a scroll gesture is within the boundary of a textual `\u003Cinput>` or a `\u003Ctextarea>`, the `\u003Cbody>` content underneath the modal will be scrolled instead of the modal itself. See [WebKit bug #153856](https://bugs.webkit.org/show_bug.cgi?id=153856).\n\n### Navbar Dropdowns\n\nThe `.dropdown-backdrop` element isn't used on iOS in the nav because of the complexity of z-indexing. Thus, to close dropdowns in navbars, you must directly click the dropdown element (or [any other element which will fire a click event in iOS](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile)).\n\n## Browser zooming\n\nPage zooming inevitably presents rendering artifacts in some components, both in Bootstrap and the rest of the web. Depending on the issue, we may be able to fix it (search first and then open an issue if need be). However, we tend to ignore these as they often have no direct solution other than hacky workarounds.\n\n## Validators\n\nIn order to provide the best possible experience to old and buggy browsers, Bootstrap uses [CSS browser hacks](http://browserhacks.com/) in several places to target special CSS to certain browser versions in order to work around bugs in the browsers themselves. These hacks understandably cause CSS validators to complain that they are invalid. In a couple places, we also use bleeding-edge CSS features that aren't yet fully standardized, but these are used purely for progressive enhancement.\n\nThese validation warnings don't matter in practice since the non-hacky portion of our CSS does fully validate and the hacky portions don't interfere with the proper functioning of the non-hacky portion, hence why we deliberately ignore these particular warnings.\n\nOur HTML docs likewise have some trivial and inconsequential HTML validation warnings due to our inclusion of a workaround for [a certain Firefox bug](https://bugzilla.mozilla.org/show_bug.cgi?id=654072).","src/content/docs/getting-started/browsers-devices.mdx","9d81f7891458ea64","getting-started/browsers-devices.mdx","getting-started/contents",{"id":711,"data":713,"body":716,"filePath":717,"digest":718,"legacyId":719,"deferredRender":139},{"description":714,"title":715,"toc":139},"Discover what's included in Bootstrap, including our compiled and source code flavors.","Contents","## Compiled Bootstrap\n\nOnce downloaded, unzip the compressed folder and you'll see something like this:\n\n{/* NOTE: This info is intentionally duplicated in the README. Copy any changes made here over to the README too, but be sure to keep in mind to add the `dist` folder. */}\n\n```text\nbootstrap/\n├── css/\n│   ├── bootstrap-grid.css\n│   ├── bootstrap-grid.css.map\n│   ├── bootstrap-grid.min.css\n│   ├── bootstrap-grid.min.css.map\n│   ├── bootstrap-grid.rtl.css\n│   ├── bootstrap-grid.rtl.css.map\n│   ├── bootstrap-grid.rtl.min.css\n│   ├── bootstrap-grid.rtl.min.css.map\n│   ├── bootstrap-reboot.css\n│   ├── bootstrap-reboot.css.map\n│   ├── bootstrap-reboot.min.css\n│   ├── bootstrap-reboot.min.css.map\n│   ├── bootstrap-reboot.rtl.css\n│   ├── bootstrap-reboot.rtl.css.map\n│   ├── bootstrap-reboot.rtl.min.css\n│   ├── bootstrap-reboot.rtl.min.css.map\n│   ├── bootstrap-utilities.css\n│   ├── bootstrap-utilities.css.map\n│   ├── bootstrap-utilities.min.css\n│   ├── bootstrap-utilities.min.css.map\n│   ├── bootstrap-utilities.rtl.css\n│   ├── bootstrap-utilities.rtl.css.map\n│   ├── bootstrap-utilities.rtl.min.css\n│   ├── bootstrap-utilities.rtl.min.css.map\n│   ├── bootstrap.css\n│   ├── bootstrap.css.map\n│   ├── bootstrap.min.css\n│   ├── bootstrap.min.css.map\n│   ├── bootstrap.rtl.css\n│   ├── bootstrap.rtl.css.map\n│   ├── bootstrap.rtl.min.css\n│   └── bootstrap.rtl.min.css.map\n└── js/\n    ├── bootstrap.bundle.js\n    ├── bootstrap.bundle.js.map\n    ├── bootstrap.bundle.min.js\n    ├── bootstrap.bundle.min.js.map\n    ├── bootstrap.esm.js\n    ├── bootstrap.esm.js.map\n    ├── bootstrap.esm.min.js\n    ├── bootstrap.esm.min.js.map\n    ├── bootstrap.js\n    ├── bootstrap.js.map\n    ├── bootstrap.min.js\n    └── bootstrap.min.js.map\n```\n\nThis is the most basic form of Bootstrap: compiled files for quick drop-in usage in nearly any web project. We provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). Source maps](https://web.dev/articles/source-maps) (`bootstrap.*.map`) are available for use with certain browsers' developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/docs/v2/).\n\n### CSS files\n\nBootstrap includes a handful of options for including some or all of our compiled CSS.\n\n\u003CBsTable class=\"table\">\n| CSS files | Layout | Content | Components | Utilities |\n| --- | --- | --- | --- | --- |\n| `bootstrap.css`\u003Cbr/> `bootstrap.min.css`\u003Cbr/> `bootstrap.rtl.css`\u003Cbr/> `bootstrap.rtl.min.css` | Included | Included | Included | Included |\n| `bootstrap-grid.css`\u003Cbr/> `bootstrap-grid.rtl.css`\u003Cbr/> `bootstrap-grid.min.css`\u003Cbr/> `bootstrap-grid.rtl.min.css` | [Only grid system]([[docsref:/layout/grid]]) | — | — | [Only flex utilities]([[docsref:/utilities/flex]]) |\n| `bootstrap-utilities.css`\u003Cbr/> `bootstrap-utilities.rtl.css`\u003Cbr/> `bootstrap-utilities.min.css`\u003Cbr/> `bootstrap-utilities.rtl.min.css` | — | — | — | Included |\n| `bootstrap-reboot.css`\u003Cbr/> `bootstrap-reboot.rtl.css`\u003Cbr/> `bootstrap-reboot.min.css`\u003Cbr/> `bootstrap-reboot.rtl.min.css` | — | [Only Reboot]([[docsref:/content/reboot]]) | — | — |\n\u003C/BsTable>\n\n### JS files\n\nSimilarly, we have options for including some or all of our compiled JavaScript.\n\n\u003CBsTable class=\"table\">\n| JS Files | Popper |\n| --- | --- |\n| `bootstrap.bundle.js`\u003Cbr/> `bootstrap.bundle.min.js`\u003Cbr/> | Included |\n| `bootstrap.js`\u003Cbr/> `bootstrap.min.js`\u003Cbr/> | – |\n\u003C/BsTable>\n\n## Bootstrap source code\n\nThe Bootstrap source code download includes the compiled CSS and JavaScript assets, along with source Sass, JavaScript, and documentation. More specifically, it includes the following and more:\n\n```text\nbootstrap/\n├── dist/\n│   ├── css/\n│   └── js/\n├── site/\n│   └──content/\n│      └── docs/\n│          └── [[config:docs_version]]/\n│              └── examples/\n├── js/\n└── scss/\n```\n\nThe `scss/` and `js/` are the source code for our CSS and JavaScript. The `dist/` folder includes everything listed in the compiled download section above. The `site/content/docs/` folder includes the source code for our hosted documentation, including our live examples of Bootstrap usage.\n\nBeyond that, any other included file provides support for packages, license information, and development.","src/content/docs/getting-started/contents.mdx","89c302ad293a57d7","getting-started/contents.mdx","getting-started/contribute",{"id":720,"data":722,"body":727,"filePath":728,"digest":729,"legacyId":730,"deferredRender":139},{"added":723,"aliases":724,"description":725,"title":726,"toc":139},{"show_badge":325,"version":499},"/docs/[[config:docs_version]]/getting-started/build-tools/","Help develop Bootstrap with our documentation build scripts and tests.","Contribute","## Tooling setup\n\nBootstrap uses [npm scripts](https://docs.npmjs.com/misc/scripts/) to build the documentation and compile source files. Our [package.json]([[config:repo]]/blob/v[[config:current_version]]/package.json) houses these scripts for compiling code, running tests, and more. These aren't intended for use outside our repository and documentation.\n\nTo use our build system and run our documentation locally, you'll need a copy of Bootstrap's source files and Node. Follow these steps and you should be ready to rock:\n\n1. [Download and install Node.js](https://nodejs.org/en/download/), which we use to manage our dependencies.\n2. Either [download Bootstrap's sources]([[config:download.source]]) or fork and clone [Bootstrap's repository]([[config:repo]]).\n3. Navigate to the root `/bootstrap` directory and run `npm install` to install our local dependencies listed in [package.json]([[config:repo]]/blob/v[[config:current_version]]/package.json).\n\nWhen completed, you'll be able to run the various commands provided from the command line.\n\n## Using npm scripts\n\nOur [package.json]([[config:repo]]/blob/v[[config:current_version]]/package.json) includes numerous tasks for developing the project. Run `npm run` to see all the npm scripts in your terminal. **Primary tasks include:**\n\n\u003CBsTable>\n| Task | Description |\n| --- | --- |\n| `npm start` | Compiles CSS and JavaScript, builds the documentation, and starts a local server. |\n| `npm run dist` | Creates the `dist/` directory with compiled files. Uses [Sass](https://sass-lang.com/), [Autoprefixer](https://github.com/postcss/autoprefixer), and [terser](https://github.com/terser/terser). |\n| `npm test` | Runs tests locally after running `npm run dist` |\n| `npm run docs-serve` | Builds and runs the documentation locally. |\n\u003C/BsTable>\n\n\u003CCallout name=\"info-npm-starter\" />\n\n## Sass\n\nBootstrap uses [Dart Sass](https://sass-lang.com/dart-sass/) for compiling our Sass source files into CSS files (included in our build process), and we recommend you do the same if you're compiling Sass using your own asset pipeline. We previously used Node Sass for Bootstrap v4, but LibSass and packages built on top of it, including Node Sass, are now [deprecated](https://sass-lang.com/blog/libsass-is-deprecated/).\n\nDart Sass uses a rounding precision of 10 and for efficiency reasons does not allow adjustment of this value. We don't lower this precision during further processing of our generated CSS, such as during minification, but if you chose to do so we recommend maintaining a precision of at least 6 to prevent issues with browser rounding.\n\n## Autoprefixer\n\nBootstrap uses [Autoprefixer](https://github.com/postcss/autoprefixer) (included in our build process) to automatically add vendor prefixes to some CSS properties at build time. Doing so saves us time and code by allowing us to write key parts of our CSS a single time while eliminating the need for vendor mixins like those found in v3.\n\nWe maintain the list of browsers supported through Autoprefixer in a separate file within our GitHub repository. See [.browserslistrc]([[config:repo]]/blob/v[[config:current_version]]/.browserslistrc) for details.\n\n## RTLCSS\n\nBootstrap uses [RTLCSS](https://rtlcss.com/) to process compiled CSS and convert them to RTL – basically replacing horizontal direction aware properties (e.g. `padding-left`) with their opposite. It allows us only write our CSS a single time and make minor tweaks using RTLCSS [control](https://rtlcss.com/learn/usage-guide/control-directives/) and [value](https://rtlcss.com/learn/usage-guide/value-directives/) directives.\n\n## Local documentation\n\nRunning our documentation locally requires the use of Astro. Astro is a modern static site generator that allows us to build our documentation with a combination of Markdown and React components. Here's how to get it started:\n\n1. Run through the [tooling setup](#tooling-setup) above to install all dependencies.\n2. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.\n3. Open `http://localhost:4321/` in your browser, and voilà.\n\nLearn more about using Astro by reading its [documentation](https://docs.astro.build/en/getting-started/).\n\n## Troubleshooting\n\nShould you encounter problems with installing dependencies, uninstall all previous dependency versions (global and local). Then, rerun `npm install`.","src/content/docs/getting-started/contribute.mdx","8bc124b03a3fa880","getting-started/contribute.mdx","getting-started/download",{"id":731,"data":733,"body":736,"filePath":737,"digest":738,"legacyId":739,"deferredRender":139},{"description":734,"title":735,"toc":139},"Download Bootstrap to get the compiled CSS and JavaScript, source code, or include it with your favorite package managers like npm, RubyGems, and more.","Download","## Compiled CSS and JS\n\nDownload ready-to-use compiled code for **Bootstrap v[[config:current_version]]** to easily drop into your project, which includes:\n\n- Compiled and minified CSS bundles (see [CSS files comparison]([[docsref:/getting-started/contents#css-files]]))\n- Compiled and minified JavaScript plugins (see [JS files comparison]([[docsref:/getting-started/contents#js-files]]))\n\nThis doesn't include documentation, source files, or any optional JavaScript dependencies like Popper.\n\n\u003Ca href=\"[[config:download.dist]]\" class=\"btn btn-bd-primary\">Download\u003C/a>\n\n## Source files\n\nCompile Bootstrap with your own asset pipeline by downloading our source Sass, JavaScript, and documentation files. This option requires some additional tooling:\n\n- [Sass compiler]([[docsref:/getting-started/contribute#sass]]) for compiling Sass source files into CSS files\n- [Autoprefixer](https://github.com/postcss/autoprefixer) for CSS vendor prefixing\n\nShould you require our full set of [build tools]([[docsref:/getting-started/contribute#tooling-setup]]), they are included for developing Bootstrap and its docs, but they're likely unsuitable for your own purposes.\n\n\u003Ca href=\"[[config:download.source]]\" class=\"btn btn-bd-primary\">Download source\u003C/a>\n\n## Examples\n\nIf you want to download and examine our [examples]([[docsref:/examples]]), you can grab the already built examples:\n\n\u003Ca href=\"[[config:download.dist_examples]]\" class=\"btn btn-bd-primary\">Download Examples\u003C/a>\n\n## CDN via jsDelivr\n\nSkip the download with [jsDelivr](https://www.jsdelivr.com/) to deliver cached version of Bootstrap's compiled CSS and JS to your project.\n\n```html\n\u003Clink href=\"[[config:cdn.css]]\" rel=\"stylesheet\" integrity=\"[[config:cdn.css_hash]]\" crossorigin=\"anonymous\">\n\u003Cscript src=\"[[config:cdn.js_bundle]]\" integrity=\"[[config:cdn.js_bundle_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n```\n\nIf you're using our compiled JavaScript and prefer to include Popper separately, add Popper before our JS, via a CDN preferably.\n\n```html\n\u003Cscript src=\"[[config:cdn.popper]]\" integrity=\"[[config:cdn.popper_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n\u003Cscript src=\"[[config:cdn.js]]\" integrity=\"[[config:cdn.js_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n```\n\n### Alternative CDNs\n\nWe recommend [jsDelivr](https://www.jsdelivr.com/) and use it ourselves in our documentation. However, in some cases—like in some specific countries or environments—you may need to use other CDN providers like [cdnjs](https://cdnjs.com/) or [unpkg](https://unpkg.com/).\n\nYou'll find the same files on these CDN providers, albeit with different URLs. With cdnjs, you can [use this direct Bootstrap package link](https://cdnjs.com/libraries/bootstrap) to copy and paste ready-to-use HTML snippets for each dist file from any version of Bootstrap.\n\n\u003CCallout type=\"warning\">\n**If the SRI hashes differ for a given file, you shouldn't use the files from that CDN, because it means that the file was modified by someone else.**\n\u003C/Callout>\n\nNote that you should compare same length hashes, e.g. `sha384` with `sha384`, otherwise it's expected for them to be different.\nAs such, you can use an online tool like [SRI Hash Generator](https://www.srihash.org/) to make sure that the hashes are the same for a given file.\nAlternatively, assuming you have OpenSSL installed, you can achieve the same from the CLI, for example:\n\n```sh\nopenssl dgst -sha384 -binary bootstrap.min.js | openssl base64 -A\n```\n\n## Package managers\n\nPull in Bootstrap's **source files** into nearly any project with some of the most popular package managers. No matter the package manager, Bootstrap will **require a [Sass compiler]([[docsref:/getting-started/contribute#sass]]) and [Autoprefixer](https://github.com/postcss/autoprefixer)** for a setup that matches our official compiled versions.\n\n### npm\n\nInstall Bootstrap in your Node.js powered apps with [the npm package](https://www.npmjs.com/package/bootstrap):\n\n```sh\nnpm install bootstrap@[[config:current_version]]\n```\n\n`const bootstrap = require('bootstrap')` or `import bootstrap from 'bootstrap'` will load all of Bootstrap's plugins onto a `bootstrap` object.\nThe `bootstrap` module itself exports all of our plugins. You can manually load Bootstrap's plugins individually by loading the `/js/dist/*.js` files under the package's top-level directory.\n\nBootstrap's `package.json` contains some additional metadata under the following keys:\n\n- `sass` - path to Bootstrap's main [Sass](https://sass-lang.com/) source file\n- `style` - path to Bootstrap's non-minified CSS that's been compiled using the default settings (no customization)\n\n\u003CCallout name=\"info-npm-starter\" />\n\n### yarn\n\nInstall Bootstrap in your Node.js powered apps with [the yarn package](https://yarnpkg.com/en/package/bootstrap):\n\n```sh\nyarn add bootstrap@[[config:current_version]]\n```\n\n\u003CCallout type=\"warning\">\n**Yarn 2+ (aka Yarn Berry) doesn't support the `node_modules` directory by default**: using our [Sass & JS example](https://github.com/twbs/examples/tree/main/sass-js) needs some adjustments:\n\n```sh\nyarn config set nodeLinker node-modules # Use the node_modules linker\ntouch yarn.lock # Create an empty yarn.lock file\nyarn install # Install the dependencies\nyarn start # Start the project\n```\n\u003C/Callout>\n\n### RubyGems\n\nInstall Bootstrap in your Ruby apps using [Bundler](https://bundler.io/) (**recommended**) and [RubyGems](https://rubygems.org/) by adding the following line to your [`Gemfile`](https://bundler.io/guides/gemfile.html):\n\n```ruby\ngem 'bootstrap', '~> [[config:current_ruby_version]]'\n```\n\nAlternatively, if you're not using Bundler, you can install the gem by running this command:\n\n```sh\ngem install bootstrap -v [[config:current_ruby_version]]\n```\n\n[See the gem's README](https://github.com/twbs/bootstrap-rubygem/blob/main/README.md) for further details.\n\n### Composer\n\nYou can also install and manage Bootstrap's Sass and JavaScript using [Composer](https://getcomposer.org/):\n\n```sh\ncomposer require twbs/bootstrap:[[config:current_version]]\n```\n\n### NuGet\n\nIf you develop in .NET Framework, you can also install and manage Bootstrap's [CSS](https://www.nuget.org/packages/bootstrap/) or [Sass](https://www.nuget.org/packages/bootstrap.sass/) and JavaScript using [NuGet](https://www.nuget.org/). Newer projects should use [libman](https://learn.microsoft.com/en-us/aspnet/core/client-side/libman/) or another method as NuGet is designed for compiled code, not frontend assets.\n\n```powershell\nInstall-Package bootstrap\n```\n\n```powershell\nInstall-Package bootstrap.sass\n```","src/content/docs/getting-started/download.mdx","4b42e9d2b86449f9","getting-started/download.mdx","getting-started/introduction",{"id":740,"data":742,"body":749,"filePath":750,"digest":751,"legacyId":752,"deferredRender":139},{"aliases":743,"description":747,"title":748,"toc":139},[744,745,746],"/docs/[[config:docs_version]]/getting-started/","/docs/getting-started/","/getting-started/","Bootstrap is a powerful, feature-packed frontend toolkit. Build anything—from prototype to production—in minutes.","Get started with Bootstrap","## Quick start\n\nGet started by including Bootstrap's production-ready CSS and JavaScript via CDN without the need for any build steps. See it in practice with this [Bootstrap CodePen demo](https://codepen.io/team/bootstrap/pen/qBamdLj).\n\n\u003Cbr/>\n\n1. **Create a new `index.html` file in your project root.** Include the `\u003Cmeta name=\"viewport\">` tag as well for [proper responsive behavior](https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag) in mobile devices.\n\n   ```html\n   \u003C!doctype html>\n   \u003Chtml lang=\"en\">\n     \u003Chead>\n       \u003Cmeta charset=\"utf-8\">\n       \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n       \u003Ctitle>Bootstrap demo\u003C/title>\n     \u003C/head>\n     \u003Cbody>\n       \u003Ch1>Hello, world!\u003C/h1>\n     \u003C/body>\n   \u003C/html>\n   ```\n\n2. **Include Bootstrap's CSS and JS.** Place the `\u003Clink>` tag in the `\u003Chead>` for our CSS, and the `\u003Cscript>` tag for our JavaScript bundle (including Popper for positioning dropdowns, popovers, and tooltips) before the closing `\u003C/body>`. Learn more about our [CDN links](#cdn-links).\n\n   ```html\n   \u003C!doctype html>\n   \u003Chtml lang=\"en\">\n     \u003Chead>\n       \u003Cmeta charset=\"utf-8\">\n       \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n       \u003Ctitle>Bootstrap demo\u003C/title>\n       \u003Clink href=\"[[config:cdn.css]]\" rel=\"stylesheet\" integrity=\"[[config:cdn.css_hash]]\" crossorigin=\"anonymous\">\n     \u003C/head>\n     \u003Cbody>\n       \u003Ch1>Hello, world!\u003C/h1>\n       \u003Cscript src=\"[[config:cdn.js_bundle]]\" integrity=\"[[config:cdn.js_bundle_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n     \u003C/body>\n   \u003C/html>\n   ```\n\n   You can also include [Popper](https://popper.js.org/docs/v2/) and our JS separately. If you don't plan to use dropdowns, popovers, or tooltips, save some kilobytes by not including Popper.\n\n   ```html\n   \u003Cscript src=\"[[config:cdn.popper]]\" integrity=\"[[config:cdn.popper_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n   \u003Cscript src=\"[[config:cdn.js]]\" integrity=\"[[config:cdn.js_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n   ```\n\n3. **Hello, world!** Open the page in your browser of choice to see your Bootstrapped page. Now you can start building with Bootstrap by creating your own [layout]([[docsref:/layout/grid]]), adding dozens of [components]([[docsref:/components/buttons]]), and utilizing [our official examples]([[docsref:/examples]]).\n\n## CDN links\n\nAs reference, here are our primary CDN links.\n\n\u003CBsTable>\n| Description | URL |\n| --- | --- |\n| CSS | `[[config:cdn.css]]` |\n| JS | `[[config:cdn.js_bundle]]` |\n\u003C/BsTable>\n\nYou can also use the CDN to fetch any of our [additional builds listed in the Contents page]([[docsref:/getting-started/contents]]).\n\n## Next steps\n\n- Read a bit more about some [important global environment settings](#important-globals) that Bootstrap utilizes.\n- Read about what's included in Bootstrap in our [contents section]([[docsref:/getting-started/contents/]]) and the list of [components that require JavaScript](#js-components) below.\n- Need a little more power? Consider building with Bootstrap by [including the source files via package manager]([[docsref:/getting-started/download#package-managers]]).\n- Looking to use Bootstrap as a module with `\u003Cscript type=\"module\">`? Please refer to our [using Bootstrap as a module]([[docsref:/getting-started/javascript#using-bootstrap-as-a-module]]) section.\n\n## JS components\n\nCurious which components explicitly require our JavaScript and Popper? If you're at all unsure about the general page structure, keep reading for an example page template.\n\n- Accordions for extending our Collapse plugin\n- Alerts for dismissing\n- Buttons for toggling states and checkbox/radio functionality\n- Carousel for all slide behaviors, controls, and indicators\n- Collapse for toggling visibility of content\n- Dropdowns for displaying and positioning (also requires [Popper](https://popper.js.org/docs/v2/))\n- Modals for displaying, positioning, and scroll behavior\n- Navbar for extending our Collapse and Offcanvas plugins to implement responsive behaviors\n- Navs with the Tab plugin for toggling content panes\n- Offcanvases for displaying, positioning, and scroll behavior\n- Scrollspy for scroll behavior and navigation updates\n- Toasts for displaying and dismissing\n- Tooltips and popovers for displaying and positioning (also requires [Popper](https://popper.js.org/docs/v2/))\n\n## Important globals\n\nBootstrap employs a handful of important global styles and settings, all of which are almost exclusively geared towards the *normalization* of cross browser styles. Let's dive in.\n\n### HTML5 doctype\n\nBootstrap requires the use of the HTML5 doctype. Without it, you'll see some funky and incomplete styling.\n\n```html\n\u003C!doctype html>\n\u003Chtml lang=\"en\">\n  ...\n\u003C/html>\n```\n\n### Viewport meta\n\nBootstrap is developed *mobile first*, a strategy in which we optimize code for mobile devices first and then scale up components as necessary using CSS media queries. To ensure proper rendering and touch zooming for all devices, add the responsive viewport meta tag to your `\u003Chead>`.\n\n```html\n\u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n```\n\nYou can see an example of this in action in the [quick start](#quick-start).\n\n### Box-sizing\n\nFor more straightforward sizing in CSS, we switch the global `box-sizing` value from `content-box` to `border-box`. This ensures `padding` does not affect the final computed width of an element, but it can cause problems with some third-party software like Google Maps and Google Custom Search Engine.\n\nOn the rare occasion you need to override it, use something like the following:\n\n```css\n.selector-for-some-widget {\n  box-sizing: content-box;\n}\n```\n\nWith the above snippet, nested elements—including generated content via `::before` and `::after`—will all inherit the specified `box-sizing` for that `.selector-for-some-widget`.\n\nLearn more about [box model and sizing at CSS Tricks](https://css-tricks.com/box-sizing/).\n\n### Reboot\n\nFor improved cross-browser rendering, we use [Reboot]([[docsref:/content/reboot]]) to correct inconsistencies across browsers and devices while providing slightly more opinionated resets to common HTML elements.\n\n## Community\n\nStay up-to-date on the development of Bootstrap and reach out to the community with these helpful resources.\n\n- Read and subscribe to [The Official Bootstrap Blog]([[config:blog]]).\n- Ask questions and explore [our GitHub Discussions](https://github.com/twbs/bootstrap/discussions).\n- Discuss, ask questions, and more on [the community Discord](https://discord.gg/bZUvakRU3M) or [Bootstrap subreddit](https://www.reddit.com/r/bootstrap/).\n- Chat with fellow Bootstrappers in IRC. On the `irc.libera.chat` server, in the `#bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-5`](https://stackoverflow.com/questions/tagged/bootstrap-5)).\n- Developers should use the keyword `bootstrap` on packages that modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/search?q=keywords:bootstrap) or similar delivery mechanisms for maximum discoverability.\n\nYou can also follow [@getbootstrap on Twitter](https://twitter.com/[[config:twitter]]) for the latest gossip and awesome music videos.","src/content/docs/getting-started/introduction.mdx","76999280ffc14984","getting-started/introduction.mdx","getting-started/javascript",{"id":753,"data":755,"body":758,"filePath":759,"digest":760,"legacyId":761,"deferredRender":139},{"description":756,"title":757,"toc":139},"Bring Bootstrap to life with our optional JavaScript plugins. Learn about each plugin, our data and programmatic API options, and more.","JavaScript","## Individual or compiled\n\nPlugins can be included individually (using Bootstrap's individual `js/dist/*.js`), or all at once using `bootstrap.js` or the minified `bootstrap.min.js` (don't include both).\n\nIf you use a bundler (Webpack, Parcel, Vite...), you can use `/js/dist/*.js` files which are UMD ready.\n\n## Usage with JavaScript frameworks\n\nWhile the Bootstrap CSS can be used with any framework, **the Bootstrap JavaScript is not fully compatible with JavaScript frameworks like React, Vue, and Angular** which assume full knowledge of the DOM. Both Bootstrap and the framework may attempt to mutate the same DOM element, resulting in bugs like dropdowns that are stuck in the \"open\" position.\n\nA better alternative for those using this type of frameworks is to use a framework-specific package **instead of** the Bootstrap JavaScript. Here are some of the most popular options:\n\n- React: [React Bootstrap](https://react-bootstrap.github.io/)\n  \u003CCallout>\n  **Try it yourself!** Download the source code and working demo for using Bootstrap with React, Next.js, and React Bootstrap from the [twbs/examples repository](https://github.com/twbs/examples/tree/main/react-nextjs). You can also [open the example in StackBlitz](https://stackblitz.com/github/twbs/examples/tree/main/react-nextjs?file=src%2Fpages%2Findex.tsx).\n  \u003C/Callout>\n- Vue: [BootstrapVue](https://bootstrap-vue.org/) (Bootstrap 4)\n- Vue 3: [BootstrapVueNext](https://bootstrap-vue-next.github.io/bootstrap-vue-next/) (Bootstrap 5, currently in alpha)\n- Angular: [ng-bootstrap](https://ng-bootstrap.github.io/) or [ngx-bootstrap](https://valor-software.com/ngx-bootstrap)\n\n## Using Bootstrap as a module\n\n\u003CCallout>\n**Try it yourself!** Download the source code and working demo for using Bootstrap as an ES module from the [twbs/examples repository](https://github.com/twbs/examples/tree/main/sass-js-esm). You can also [open the example in StackBlitz](https://stackblitz.com/github/twbs/examples/tree/main/sass-js-esm?file=index.html).\n\u003C/Callout>\n\nWe provide a version of Bootstrap built as `ESM` (`bootstrap.esm.js` and `bootstrap.esm.min.js`) which allows you to use Bootstrap as a module in the browser, if your [targeted browsers support it](https://caniuse.com/es6-module).\n\n{/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n```html\n\u003Cscript type=\"module\">\n  import { Toast } from 'bootstrap.esm.min.js'\n\n  Array.from(document.querySelectorAll('.toast'))\n    .forEach(toastNode => new Toast(toastNode))\n\u003C/script>\n```\n\nCompared to JS bundlers, using ESM in the browser requires you to use the full path and filename instead of the module name. [Read more about JS modules in the browser.](https://v8.dev/features/modules#specifiers) That's why we use `'bootstrap.esm.min.js'` instead of `'bootstrap'` above. However, this is further complicated by our Popper dependency, which imports Popper into our JavaScript like so:\n\n{/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n```js\nimport * as Popper from \"@popperjs/core\"\n```\n\nIf you try this as-is, you'll see an error in the console like the following:\n\n```text\nUncaught TypeError: Failed to resolve module specifier \"@popperjs/core\". Relative references must start with either \"/\", \"./\", or \"../\".\n```\n\nTo fix this, you can use an `importmap` to resolve the arbitrary module names to complete paths. If your [targeted browsers](https://caniuse.com/?search=importmap) do not support `importmap`, you'll need to use the [es-module-shims](https://github.com/guybedford/es-module-shims) project. Here's how it works for Bootstrap and Popper:\n\n{/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n```html\n\u003C!doctype html>\n\u003Chtml lang=\"en\">\n  \u003Chead>\n    \u003Cmeta charset=\"utf-8\">\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \u003Clink href=\"[[config:cdn.css]]\" rel=\"stylesheet\" integrity=\"[[config:cdn.css_hash]]\" crossorigin=\"anonymous\">\n    \u003Ctitle>Hello, modularity!\u003C/title>\n  \u003C/head>\n  \u003Cbody>\n    \u003Ch1>Hello, modularity!\u003C/h1>\n    \u003Cbutton id=\"popoverButton\" type=\"button\" class=\"btn btn-primary btn-lg\" data-bs-toggle=\"popover\" title=\"ESM in Browser\" data-bs-content=\"Bang!\">Custom popover\u003C/button>\n\n    \u003Cscript async src=\"https://cdn.jsdelivr.net/npm/es-module-shims@1/dist/es-module-shims.min.js\" crossorigin=\"anonymous\">\u003C/script>\n    \u003Cscript type=\"importmap\">\n    {\n      \"imports\": {\n        \"@popperjs/core\": \"[[config:cdn.popper_esm]]\",\n        \"bootstrap\": \"https://cdn.jsdelivr.net/npm/bootstrap@[[config:current_version]]/dist/js/bootstrap.esm.min.js\"\n      }\n    }\n    \u003C/script>\n    \u003Cscript type=\"module\">\n      import * as bootstrap from 'bootstrap'\n\n      new bootstrap.Popover(document.getElementById('popoverButton'))\n    \u003C/script>\n  \u003C/body>\n\u003C/html>\n```\n\n## Dependencies\n\nSome plugins and CSS components depend on other plugins. If you include plugins individually, make sure to check for these dependencies in the docs.\n\nOur dropdowns, popovers, and tooltips also depend on [Popper](https://popper.js.org/docs/v2/).\n\n## Data attributes\n\nNearly all Bootstrap plugins can be enabled and configured through HTML alone with data attributes (our preferred way of using JavaScript functionality). Be sure to **only use one set of data attributes on a single element** (e.g., you cannot trigger a tooltip and modal from the same button.)\n\n\u003CJsDataAttributes />\n\n## Selectors\n\nWe use the native `querySelector` and `querySelectorAll` methods to query DOM elements for performance reasons, so you must use [valid selectors](https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier). If you use special selectors like `collapse:Example`, be sure to escape them.\n\n## Events\n\nBootstrap provides custom events for most plugins' unique actions. Generally, these come in an infinitive and past participle form - where the infinitive (ex. `show`) is triggered at the start of an event, and its past participle form (ex. `shown`) is triggered on the completion of an action.\n\nAll infinitive events provide [`preventDefault()`](https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault) functionality. This provides the ability to stop the execution of an action before it starts. Returning false from an event handler will also automatically call `preventDefault()`.\n\n```js\nconst myModal = document.querySelector('#myModal')\n\nmyModal.addEventListener('show.bs.modal', event => {\n  return event.preventDefault() // stops modal from being shown\n})\n```\n\n## Programmatic API\n\nAll constructors accept an optional options object or nothing (which initiates a plugin with its default behavior):\n\n```js\nconst myModalEl = document.querySelector('#myModal')\nconst modal = new bootstrap.Modal(myModalEl) // initialized with defaults\n\nconst configObject = { keyboard: false }\nconst modal1 = new bootstrap.Modal(myModalEl, configObject) // initialized with no keyboard\n```\n\nIf you'd like to get a particular plugin instance, each plugin exposes a `getInstance` method. For example, to retrieve an instance directly from an element:\n\n```js\nbootstrap.Popover.getInstance(myPopoverEl)\n```\n\nThis method will return `null` if an instance is not initiated over the requested element.\n\nAlternatively, `getOrCreateInstance` can be used to get the instance associated with a DOM element, or create a new one in case it wasn't initialized.\n\n```js\nbootstrap.Popover.getOrCreateInstance(myPopoverEl, configObject)\n```\n\nIn case an instance wasn't initialized, it may accept and use an optional configuration object as second argument.\n\n### CSS selectors in constructors\n\nIn addition to the `getInstance` and `getOrCreateInstance` methods, all plugin constructors can accept a DOM element or a valid [CSS selector](#selectors) as the first argument. Plugin elements are found with the `querySelector` method since our plugins only support a single element.\n\n```js\nconst modal = new bootstrap.Modal('#myModal')\nconst dropdown = new bootstrap.Dropdown('[data-bs-toggle=\"dropdown\"]')\nconst offcanvas = bootstrap.Offcanvas.getInstance('#myOffcanvas')\nconst alert = bootstrap.Alert.getOrCreateInstance('#myAlert')\n```\n\n### Asynchronous functions and transitions\n\nAll programmatic API methods are **asynchronous** and return to the caller once the transition is started, but **before it ends**. In order to execute an action once the transition is complete, you can listen to the corresponding event.\n\n```js\nconst myCollapseEl = document.querySelector('#myCollapse')\n\nmyCollapseEl.addEventListener('shown.bs.collapse', event => {\n  // Action to execute once the collapsible area is expanded\n})\n```\n\nIn addition, a method call on a **transitioning component will be ignored**.\n\n```js\nconst myCarouselEl = document.querySelector('#myCarousel')\nconst carousel = bootstrap.Carousel.getInstance(myCarouselEl) // Retrieve a Carousel instance\n\nmyCarouselEl.addEventListener('slid.bs.carousel', event => {\n  carousel.to('2') // Will slide to the slide 2 as soon as the transition to slide 1 is finished\n})\n\ncarousel.to('1') // Will start sliding to the slide 1 and returns to the caller\ncarousel.to('2') // !! Will be ignored, as the transition to the slide 1 is not finished !!\n```\n\n#### `dispose` method\n\nWhile it may seem correct to use the `dispose` method immediately after `hide()`, it will lead to incorrect results. Here's an example of the problem use:\n\n```js\nconst myModal = document.querySelector('#myModal')\nmyModal.hide() // it is asynchronous\n\nmyModal.addEventListener('shown.bs.hidden', event => {\n  myModal.dispose()\n})\n```\n\n### Default settings\n\nYou can change the default settings for a plugin by modifying the plugin's `Constructor.Default` object:\n\n```js\n// changes default for the modal plugin's `keyboard` option to false\nbootstrap.Modal.Default.keyboard = false\n```\n\n## Methods and properties\n\nEvery Bootstrap plugin exposes the following methods and static properties.\n\n\u003CBsTable class=\"table\">\n| Method | Description |\n| --- | --- |\n| `dispose` | Destroys an element's modal. (Removes stored data on the DOM element) |\n| `getInstance` | *Static* method which allows you to get the modal instance associated with a DOM element. |\n| `getOrCreateInstance` | *Static* method which allows you to get the modal instance associated with a DOM element, or create a new one in case it wasn't initialized. |\n\u003C/BsTable>\n\n\u003CBsTable class=\"table\">\n| Static property | Description |\n| --- | --- |\n| `NAME` | Returns the plugin name. (Example: `bootstrap.Tooltip.NAME`) |\n| `VERSION` | The version of each of Bootstrap's plugins can be accessed via the `VERSION` property of the plugin's constructor (Example: `bootstrap.Tooltip.VERSION`) |\n\u003C/BsTable>\n\n## Sanitizer\n\nTooltips and Popovers use our built-in sanitizer to sanitize options which accept HTML.\n\nThe default `allowList` value is the following:\n\n\u003CJsDocs name=\"allow-list\" file=\"js/src/util/sanitizer.js\" />\n\nIf you want to add new values to this default `allowList` you can do the following:\n\n```js\nconst myDefaultAllowList = bootstrap.Tooltip.Default.allowList\n\n// To allow table elements\nmyDefaultAllowList.table = []\n\n// To allow td elements and data-bs-option attributes on td elements\nmyDefaultAllowList.td = ['data-bs-option']\n\n// You can push your custom regex to validate your attributes.\n// Be careful about your regular expressions being too lax\nconst myCustomRegex = /^data-my-app-[\\w-]+/\nmyDefaultAllowList['*'].push(myCustomRegex)\n```\n\nIf you want to bypass our sanitizer because you prefer to use a dedicated library, for example [DOMPurify](https://www.npmjs.com/package/dompurify), you should do the following:\n\n```js\nconst yourTooltipEl = document.querySelector('#yourTooltip')\nconst tooltip = new bootstrap.Tooltip(yourTooltipEl, {\n  sanitizeFn(content) {\n    return DOMPurify.sanitize(content)\n  }\n})\n```\n\n## Optionally using jQuery\n\n**You don't need jQuery in Bootstrap 5**, but it's still possible to use our components with jQuery. If Bootstrap detects `jQuery` in the `window` object, it'll add all of our components in jQuery's plugin system. This allows you to do the following:\n\n```js\n// to enable tooltips with the default configuration\n$('[data-bs-toggle=\"tooltip\"]').tooltip()\n\n// to initialize tooltips with given configuration\n$('[data-bs-toggle=\"tooltip\"]').tooltip({\n  boundary: 'clippingParents',\n  customClass: 'myClass'\n})\n\n// to trigger the `show` method\n$('#myTooltip').tooltip('show')\n```\n\nThe same goes for our other components.\n\n### No conflict\n\nSometimes it is necessary to use Bootstrap plugins with other UI frameworks. In these circumstances, namespace collisions can occasionally occur. If this happens, you may call `.noConflict` on the plugin you wish to revert the value of.\n\n```js\nconst bootstrapButton = $.fn.button.noConflict() // return $.fn.button to previously assigned value\n$.fn.bootstrapBtn = bootstrapButton // give $().bootstrapBtn the Bootstrap functionality\n```\n\nBootstrap does not officially support third-party JavaScript libraries like Prototype or jQuery UI. Despite `.noConflict` and namespaced events, there may be compatibility problems that you need to fix on your own.\n\n### jQuery events\n\nBootstrap will detect jQuery if `jQuery` is present in the `window` object and there is no `data-bs-no-jquery` attribute set on `\u003Cbody>`. If jQuery is found, Bootstrap will emit events thanks to jQuery's event system. So if you want to listen to Bootstrap's events, you'll have to use the jQuery methods (`.on`, `.one`) instead of `addEventListener`.\n\n```js\n$('#myTab a').on('shown.bs.tab', () => {\n  // do something...\n})\n```\n\n## Disabled JavaScript\n\nBootstrap's plugins have no special fallback when JavaScript is disabled. If you care about the user experience in this case, use [`\u003Cnoscript>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript) to explain the situation (and how to re-enable JavaScript) to your users, and/or add your own custom fallbacks.","src/content/docs/getting-started/javascript.mdx","d34e7c86e8f62107","getting-started/javascript.mdx","getting-started/parcel",{"id":762,"data":764,"body":768,"filePath":769,"digest":770,"legacyId":771,"deferredRender":139},{"description":765,"thumbnail":766,"title":767,"toc":139},"The official guide for how to include and bundle Bootstrap's CSS and JavaScript in your project using Parcel.","guides/bootstrap-parcel@2x.png","Bootstrap and Parcel","\u003Cimg class=\"d-block mx-auto mb-4 img-fluid rounded-3\" srcset=\"/docs/[[config:docs_version]]/assets/img/guides/bootstrap-parcel.png, /docs/[[config:docs_version]]/assets/img/guides/bootstrap-parcel@2x.png 2x\" src=\"/docs/[[config:docs_version]]/assets/img/guides/bootstrap-parcel.png\" width=\"800\" height=\"400\" alt=\"\"/>\n\n\u003CCallout>\n**Want to skip to the end?** Download the source code and working demo for this guide from the [twbs/examples repository](https://github.com/twbs/examples/tree/main/parcel). You can also [open the example in StackBlitz](https://stackblitz.com/github/twbs/examples/tree/main/parcel?file=index.html) but not run it because Parcel isn't currently supported there.\n\u003C/Callout>\n\n## What is Parcel?\n\n[Parcel](https://parceljs.org/) is a web application bundler designed to simplify the development process with a zero-configuration setup out of the box. It offers features found in more advanced bundlers while focusing on ease of use, making it ideal for developers seeking a quick start.\n\n## Setup\n\nWe're building a Parcel project with Bootstrap from scratch, so there are some prerequisites and upfront steps before we can really get started. This guide requires you to have Node.js installed and some familiarity with the terminal.\n\n1. **Create a project folder and set up npm.** We'll create the `my-project` folder and initialize npm with the `-y` argument to avoid it asking us all the interactive questions.\n\n   ```sh\n   mkdir my-project && cd my-project\n   npm init -y\n   ```\n\n2. **Install Parcel.** Unlike our Webpack guide, there's only a single build tool dependency here. Parcel will automatically install language transformers (like Sass) as it detects them. We use `--save-dev` to signal that this dependency is only for development use and not for production.\n\n   ```sh\n   npm i --save-dev parcel\n   ```\n\n3. **Install Bootstrap.** Now we can install Bootstrap. We'll also install Popper since our dropdowns, popovers, and tooltips depend on it for their positioning. If you don't plan on using those components, you can omit Popper here.\n\n   ```sh\n   npm i --save bootstrap @popperjs/core\n   ```\n\nNow that we have all the necessary dependencies installed, we can get to work creating the project files and importing Bootstrap.\n\n## Project structure\n\nWe've already created the `my-project` folder and initialized npm. Now we'll also create our `src` folder, stylesheet, and JavaScript file to round out the project structure. Run the following from `my-project`, or manually create the folder and file structure shown below.\n\n```sh\nmkdir {src,src/js,src/scss}\ntouch src/index.html src/js/main.js src/scss/styles.scss\n```\n\nWhen you're done, your complete project should look like this:\n\n```text\nmy-project/\n├── src/\n│   ├── js/\n│   │   └── main.js\n│   ├── scss/\n│   │   └── styles.scss\n│   └── index.html\n├── package-lock.json\n└── package.json\n```\n\nAt this point, everything is in the right place, but Parcel needs an HTML page and npm script to start our server.\n\n## Configure Parcel\n\nWith dependencies installed and our project folder ready for us to start coding, we can now configure Parcel and run our project locally. Parcel itself requires no configuration file by design, but we do need an npm script and an HTML file to start our server.\n\n1. **Fill in the `src/index.html` file.** Parcel needs a page to render, so we use our `index.html` page to set up some basic HTML, including our CSS and JavaScript files.\n\n   ```html\n   \u003C!doctype html>\n   \u003Chtml lang=\"en\">\n     \u003Chead>\n       \u003Cmeta charset=\"utf-8\">\n       \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n       \u003Ctitle>Bootstrap w/ Parcel\u003C/title>\n       \u003Clink rel=\"stylesheet\" href=\"scss/styles.scss\">\n       \u003Cscript type=\"module\" src=\"js/main.js\">\u003C/script>\n     \u003C/head>\n     \u003Cbody>\n       \u003Cdiv class=\"container py-4 px-3 mx-auto\">\n         \u003Ch1>Hello, Bootstrap and Parcel!\u003C/h1>\n         \u003Cbutton class=\"btn btn-primary\">Primary button\u003C/button>\n       \u003C/div>\n     \u003C/body>\n   \u003C/html>\n   ```\n\n   We're including a little bit of Bootstrap styling here with the `div class=\"container\"` and `\u003Cbutton>` so that we see when Bootstrap's CSS is loaded by Parcel.\n\n   Parcel will automatically detect we're using Sass and install the [Sass Parcel plugin](https://parceljs.org/languages/sass/) to support it. However, if you wish, you can also manually run `npm i --save-dev @parcel/transformer-sass`.\n\n2. **Add the Parcel npm scripts.** Open the `package.json` and add the following `start` script to the `scripts` object. We'll use this script to start our Parcel development server and render the HTML file we created after it's compiled into the `dist` directory.\n\n   ```json\n   {\n      // ...\n      \"scripts\": {\n        \"start\": \"parcel serve src/index.html --public-url / --dist-dir dist\",\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n      },\n      // ...\n   }\n   ```\n\n3. **And finally, we can start Parcel.** From the `my-project` folder in your terminal, run that newly added npm script:\n\n   ```sh\n   npm start\n   ```\n\n   \u003Cimg class=\"img-fluid\" src=\"/docs/[[config:docs_version]]/assets/img/guides/parcel-dev-server.png\" alt=\"Parcel dev server running\" />\n\nIn the next and final section to this guide, we'll import all of Bootstrap's CSS and JavaScript.\n\n## Import Bootstrap\n\nImporting Bootstrap into Parcel requires two imports, one into our `styles.scss` and one into our `main.js`.\n\n1. **Import Bootstrap's CSS.** Add the following to `src/scss/styles.scss` to import all of Bootstrap's source Sass.\n\n   ```scss\n   // Import all of Bootstrap's CSS\n   @import \"bootstrap/scss/bootstrap\";\n   ```\n\n   *You can also import our stylesheets individually if you want. [Read our Sass import docs]([[docsref:/customize/sass#importing]]) for details.*\n\n2. **Import Bootstrap's JS.** Add the following to `src/js/main.js` to import all of Bootstrap's JS. Popper will be imported automatically through Bootstrap.\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   // Import all of Bootstrap's JS\n   import * as bootstrap from 'bootstrap'\n   ```\n\n   You can also import JavaScript plugins individually as needed to keep bundle sizes down:\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   import Alert from 'bootstrap/js/dist/alert'\n\n   // or, specify which plugins you need:\n   import { Tooltip, Toast, Popover } from 'bootstrap'\n   ```\n\n   *[Read our JavaScript docs]([[docsref:/getting-started/javascript/]]) for more information on how to use Bootstrap's plugins.*\n\n3. **And you're done! 🎉** With Bootstrap's source Sass and JS fully loaded, your local development server should now look like this:\n\n   \u003Cimg class=\"img-fluid\" src=\"/docs/[[config:docs_version]]/assets/img/guides/parcel-dev-server-bootstrap.png\" alt=\"Parcel dev server running with Bootstrap\" />\n\n   Now you can start adding any Bootstrap components you want to use. Be sure to [check out the complete Parcel example project](https://github.com/twbs/examples/tree/main/parcel) for how to include additional custom Sass and optimize your build by importing only the parts of Bootstrap's CSS and JS that you need.\n\n\u003CGuideFooter />","src/content/docs/getting-started/parcel.mdx","e03bf37ddb4c933c","getting-started/parcel.mdx","getting-started/rfs",{"id":772,"data":774,"body":777,"filePath":778,"digest":779,"legacyId":780,"deferredRender":139},{"description":775,"title":776,"toc":139},"Bootstrap's resizing engine responsively scales common CSS properties to better utilize available space across viewports and devices.","RFS","## What is RFS?\n\nBootstrap's side project [RFS](https://github.com/twbs/rfs/tree/[[config:rfs_version]]) is a unit resizing engine which was initially developed to resize font sizes (hence its abbreviation for Responsive Font Sizes). Nowadays RFS is capable of rescaling most CSS properties with unit values like `margin`, `padding`, `border-radius`, or even `box-shadow`.\n\nThe mechanism automatically calculates the appropriate values based on the dimensions of the browser viewport. It will be compiled into `calc()` functions with a mix of `rem` and viewport units to enable the responsive scaling behavior.\n\n## Using RFS\n\nThe mixins are included in Bootstrap and are available once you include Bootstrap's `scss`. RFS can also be [installed standalone](https://github.com/twbs/rfs/tree/[[config:rfs_version]]#installation) if needed.\n\n### Using the mixins\n\nThe `rfs()` mixin has shorthands for `font-size`, `margin`, `margin-top`, `margin-right`, `margin-bottom`, `margin-left`, `padding`, `padding-top`, `padding-right`, `padding-bottom`, and `padding-left`. See the example below for source Sass and compiled CSS.\n\n```scss\n.title {\n  @include font-size(4rem);\n}\n```\n\n```css\n.title {\n  font-size: calc(1.525rem + 3.3vw);\n}\n\n@media (min-width: 1200px) {\n  .title {\n    font-size: 4rem;\n  }\n}\n```\n\nAny other property can be passed to the `rfs()` mixin like this:\n\n```scss\n.selector {\n  @include rfs(4rem, border-radius);\n}\n```\n\n`!important` can also just be added to whatever value you want:\n\n```scss\n.selector {\n  @include padding(2.5rem !important);\n}\n```\n\n### Using the functions\n\nWhen you don't want to use the includes, there are also two functions:\n\n- `rfs-value()` converts a value into a `rem` value if a `px` value is passed, in other cases it returns the same result.\n- `rfs-fluid-value()` returns the fluid version of a value if the property needs rescaling.\n\nIn this example, we use one of Bootstrap's built-in [responsive breakpoint mixins]([[docsref:/layout/breakpoints]]) to only apply styling below the `lg` breakpoint.\n\n```scss\n.selector {\n  @include media-breakpoint-down(lg) {\n    padding: rfs-fluid-value(2rem);\n    font-size: rfs-fluid-value(1.125rem);\n  }\n}\n```\n\n```css\n@media (max-width: 991.98px) {\n  .selector {\n    padding: calc(1.325rem + 0.9vw);\n    font-size: 1.125rem; /* 1.125rem is small enough, so RFS won't rescale this */\n  }\n}\n```\n\n## Extended documentation\n\nRFS is a separate project under the Bootstrap organization. More about RFS and its configuration can be found on its [GitHub repository](https://github.com/twbs/rfs/tree/[[config:rfs_version]]).","src/content/docs/getting-started/rfs.mdx","50fcab42d402abc9","getting-started/rfs.mdx","getting-started/rtl",{"id":781,"data":783,"body":786,"filePath":787,"digest":788,"legacyId":789,"deferredRender":139},{"description":784,"title":785,"toc":139},"Learn how to enable support for right-to-left text in Bootstrap across our layout, components, and utilities.","RTL","## Get familiar\n\nWe recommend getting familiar with Bootstrap first by reading through our [Getting Started Introduction page]([[docsref:/getting-started/introduction]]). Once you've run through it, continue reading here for how to enable RTL.\n\nYou may also want to read up on [the RTLCSS project](https://rtlcss.com/), as it powers our approach to RTL.\n\n\u003CCallout type=\"warning\">\n**Bootstrap's RTL feature is still experimental** and will evolve based on user feedback. Spotted something or have an improvement to suggest? [Open an issue]([[config:repo]]/issues/new/choose), we'd love to get your insights.\n\u003C/Callout>\n\n## Required HTML\n\nThere are two strict requirements for enabling RTL in Bootstrap-powered pages.\n\n1. Set `dir=\"rtl\"` on the `\u003Chtml>` element.\n2. Add an appropriate `lang` attribute, like `lang=\"ar\"`, on the `\u003Chtml>` element.\n\nFrom there, you'll need to include an RTL version of our CSS. For example, here's the stylesheet for our compiled and minified CSS with RTL enabled:\n\n```html\n\u003Clink rel=\"stylesheet\" href=\"[[config:cdn.css_rtl]]\" integrity=\"[[config:cdn.css_rtl_hash]]\" crossorigin=\"anonymous\">\n```\n\n### Starter template\n\nYou can see the above requirements reflected in this modified RTL starter template.\n\n```html\n\u003C!doctype html>\n\u003Chtml lang=\"ar\" dir=\"rtl\">\n  \u003Chead>\n    \u003C!-- Required meta tags -->\n    \u003Cmeta charset=\"utf-8\">\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \u003C!-- Bootstrap CSS -->\n    \u003Clink rel=\"stylesheet\" href=\"[[config:cdn.css_rtl]]\" integrity=\"[[config:cdn.css_rtl_hash]]\" crossorigin=\"anonymous\">\n\n    \u003Ctitle>مرحبًا بالعالم!\u003C/title>\n  \u003C/head>\n  \u003Cbody>\n    \u003Ch1>مرحبًا بالعالم!\u003C/h1>\n\n    \u003C!-- Optional JavaScript; choose one of the two! -->\n\n    \u003C!-- Option 1: Bootstrap Bundle with Popper -->\n    \u003Cscript src=\"[[config:cdn.js_bundle]]\" integrity=\"[[config:cdn.js_bundle_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n\n    \u003C!-- Option 2: Separate Popper and Bootstrap JS -->\n    \u003C!--\n    \u003Cscript src=\"[[config:cdn.popper]]\" integrity=\"[[config:cdn.popper_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n    \u003Cscript src=\"[[config:cdn.js]]\" integrity=\"[[config:cdn.js_hash]]\" crossorigin=\"anonymous\">\u003C/script>\n    -->\n  \u003C/body>\n\u003C/html>\n```\n\n### RTL examples\n\nGet started with one of our several [RTL examples]([[docsref:/examples/#rtl]]).\n\n## Approach\n\nOur approach to building RTL support into Bootstrap comes with two important decisions that impact how we write and use our CSS:\n\n1. **First, we decided to build it with the [RTLCSS](https://rtlcss.com/) project.** This gives us some powerful features for managing changes and overrides when moving from LTR to RTL. It also allows us to build two versions of Bootstrap from one codebase.\n\n2. **Second, we've renamed a handful of directional classes to adopt a logical properties approach.** Most of you have already interacted with logical properties thanks to our flex utilities—they replace direction properties like `left` and `right` in favor `start` and `end`. That makes the class names and values appropriate for LTR and RTL without any overhead.\n\n  For example, instead of `.ml-3` for `margin-left`, use `.ms-3`.\n\nWorking with RTL, through our source Sass or compiled CSS, shouldn't be much different from our default LTR though.\n\n## Customize from source\n\nWhen it comes to [customization]([[docsref:/customize/sass]]), the preferred way is to take advantage of variables, maps, and mixins. This approach works the same for RTL, even if it's post-processed from the compiled files, thanks to [how RTLCSS works](https://rtlcss.com/learn/getting-started/why-rtlcss/).\n\n### Custom RTL values\n\nUsing [RTLCSS value directives](https://rtlcss.com/learn/usage-guide/value-directives/), you can make a variable output a different value for RTL. For example, to decrease the weight for `$font-weight-bold` throughout the codebase, you may use the `/*rtl: {value}*/` syntax:\n\n```scss\n$font-weight-bold: 700 #{/* rtl:600 */} !default;\n```\n\nWhich would output to the following for our default CSS and RTL CSS:\n\n```css\n/* bootstrap.css */\ndt {\n  font-weight: 700 /* rtl:600 */;\n}\n\n/* bootstrap.rtl.css */\ndt {\n  font-weight: 600;\n}\n```\n\n### Alternative font stack\n\nIn the case you're using a custom font, be aware that not all fonts support the non-Latin alphabet. To switch from Pan-European to Arabic family, you may need to use `/*rtl:insert: {value}*/` in your font stack to modify the names of font families.\n\nFor example, to switch from `Helvetica Neue` font for LTR to `Helvetica Neue Arabic` for RTL, your Sass code could look like this:\n\n```scss\n$font-family-sans-serif:\n  Helvetica Neue #{\"/* rtl:insert:Arabic */\"},\n  // Cross-platform generic font family (default user interface font)\n  system-ui,\n  // Safari for macOS and iOS (San Francisco)\n  -apple-system,\n  // Chrome \u003C 56 for macOS (San Francisco)\n  BlinkMacSystemFont,\n  // Windows\n  \"Segoe UI\",\n  // Android\n  Roboto,\n  // Basic web fallback\n  Arial,\n  // Linux\n  \"Noto Sans\",\n  // Sans serif fallback\n  sans-serif,\n  // Emoji fonts\n  \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\" !default;\n```\n\n### LTR and RTL at the same time\n\nNeed both LTR and RTL on the same page? Thanks to [RTLCSS String Maps](https://rtlcss.com/learn/usage-guide/string-map/), this is pretty straightforward. Wrap your `@import`s with a class, and set a custom rename rule for RTLCSS:\n\n```scss\n/* rtl:begin:options: {\n  \"autoRename\": true,\n  \"stringMap\":[ {\n    \"name\": \"ltr-rtl\",\n    \"priority\": 100,\n    \"search\": [\"ltr\"],\n    \"replace\": [\"rtl\"],\n    \"options\": {\n      \"scope\": \"*\",\n      \"ignoreCase\": false\n    }\n  } ]\n} */\n.ltr {\n  @import \"../node_modules/bootstrap/scss/bootstrap\";\n}\n/*rtl:end:options*/\n```\n\nAfter running Sass then RTLCSS, each selector in your CSS files will be prepended by `.ltr`, and `.rtl` for RTL files. Now you're able to use both files on the same page, and simply use `.ltr` or `.rtl` on your components wrappers to use one or the other direction.\n\n\u003CCallout type=\"warning\">\n**Edge cases and known limitations** to consider when working with a combined LTR and RTL implementation:\n\n1. When switching `.ltr` and `.rtl`, make sure you add `dir` and `lang` attributes accordingly.\n2. Loading both files can be a real performance bottleneck: consider some [optimization]([[docsref:/customize/optimize]]), and maybe try to [load one of those files asynchronously](https://www.filamentgroup.com/lab/load-css-simpler/).\n3. Nesting styles this way will prevent our `form-validation-state()` mixin from working as intended, thus require you tweak it a bit by yourself. [See #31223](https://github.com/twbs/bootstrap/issues/31223).\n\u003C/Callout>\n\nDo you want to automate this process and address several edge cases involving both directions within a single stylesheet? Then, consider using [PostCSS RTLCSS](https://github.com/elchininet/postcss-rtlcss) as a [PostCSS](https://github.com/postcss/postcss) plugin to process your source files. PostCSS RTLCSS uses [RTLCSS](https://rtlcss.com) behind the scenes to manage the direction flipping process, but it separates the flipped declarations into rules with a different prefix for LTR and RTL, something that allows you to have both directions within the same stylesheet file. By doing this, you can switch between LTR and RTL orientations by simply changing the `dir` of the page (or even by modifying a specific class if you configure the plugin accordingly).\n\n\u003CCallout type=\"warning\">\n**Important things to take into account** when using PostCSS RTLCSS to build a combined LTR and RTL implementation:\n\n1. It is recommended that you add the `dir` attribute to the `html` element. This way, the entire page will be affected when you change the direction. Also, make sure you add the `lang` attribute accordingly.\n2. Having a single bundle with both directions will increase the size of the final stylesheet (on average, by 20%-30%): consider some [optimization]([[docsref:/customize/optimize]]).\n3. Take into account that PostCSS RTLCSS is not compatible with `/* rtl:remove */` directives because it doesn't remove any CSS rule. You should replace your `/* rtl:remove */`, `/* rtl:begin:remove */` and `/* rtl:end:remove */` directives with `/* rtl:freeze */`, `/* rtl:begin:freeze */` and `/* rtl:end:freeze */` directives respectively. These directives will prefix the targeted rules or declarations with the current direction but will not create an RTL counterpart (same result as the `remove` ones in RTLCSS).\n\u003C/Callout>\n\n## The breadcrumb case\n\nThe [breadcrumb separator]([[docsref:/components/breadcrumb]]#dividers) is the only case requiring its own brand-new variable— namely `$breadcrumb-divider-flipped` —defaulting to `$breadcrumb-divider`.\n\n## Additional resources\n\n- [RTLCSS](https://rtlcss.com/)\n- [RTL Styling 101](https://rtlstyling.com/posts/rtl-styling)","src/content/docs/getting-started/rtl.mdx","17b1bab3d6c46a1a","getting-started/rtl.mdx","getting-started/webpack",{"id":790,"data":792,"body":796,"filePath":797,"digest":798,"legacyId":799,"deferredRender":139},{"description":793,"thumbnail":794,"title":795,"toc":139},"The official guide for how to include and bundle Bootstrap's CSS and JavaScript in your project using Webpack.","guides/bootstrap-webpack@2x.png","Bootstrap and Webpack","\u003Cimg class=\"d-block mx-auto mb-4 img-fluid rounded-3\" srcset=\"/docs/[[config:docs_version]]/assets/img/guides/bootstrap-webpack.png, /docs/[[config:docs_version]]/assets/img/guides/bootstrap-webpack@2x.png 2x\" src=\"/docs/[[config:docs_version]]/assets/img/guides/bootstrap-webpack.png\" width=\"800\" height=\"400\" alt=\"\"/>\n\n\u003CCallout>\n**Want to skip to the end?** Download the source code and working demo for this guide from the [twbs/examples repository](https://github.com/twbs/examples/tree/main/webpack). You can also [open the example in StackBlitz](https://stackblitz.com/github/twbs/examples/tree/main/webpack?file=index.html) for live editing.\n\u003C/Callout>\n\n## What is Webpack?\n\n[Webpack](https://webpack.js.org/) is a JavaScript module bundler that processes modules and their dependencies to generate static assets. It simplifies managing complex web applications with multiple files and dependencies.\n\n## Setup\n\nWe're building a Webpack project with Bootstrap from scratch, so there are some prerequisites and upfront steps before we can really get started. This guide requires you to have Node.js installed and some familiarity with the terminal.\n\n1. **Create a project folder and set up npm.** We'll create the `my-project` folder and initialize npm with the `-y` argument to avoid it asking us all the interactive questions.\n\n   ```sh\n   mkdir my-project && cd my-project\n   npm init -y\n   ```\n\n2. **Install Webpack.** Next we need to install our Webpack development dependencies: `webpack` for the core of Webpack, `webpack-cli` so we can run Webpack commands from the terminal, and `webpack-dev-server` so we can run a local development server. Additionally, we'll install `html-webpack-plugin` to be able to store our `index.html` in `src` directory instead of the default `dist` one. We use `--save-dev` to signal that these dependencies are only for development use and not for production.\n\n   ```sh\n   npm i --save-dev webpack webpack-cli webpack-dev-server html-webpack-plugin\n   ```\n\n3. **Install Bootstrap.** Now we can install Bootstrap. We'll also install Popper since our dropdowns, popovers, and tooltips depend on it for their positioning. If you don't plan on using those components, you can omit Popper here.\n\n   ```sh\n   npm i --save bootstrap @popperjs/core\n   ```\n\n4. **Install additional dependencies.** In addition to Webpack and Bootstrap, we need a few more dependencies to properly import and bundle Bootstrap's CSS and JS with Webpack. These include Sass, some loaders, and Autoprefixer.\n\n   ```sh\n   npm i --save-dev autoprefixer css-loader postcss-loader sass sass-loader style-loader\n   ```\n\nNow that we have all the necessary dependencies installed, we can get to work creating the project files and importing Bootstrap.\n\n## Project structure\n\nWe've already created the `my-project` folder and initialized npm. Now we'll also create our `src` and `dist` folders to round out the project structure. Run the following from `my-project`, or manually create the folder and file structure shown below.\n\n```sh\nmkdir {src,src/js,src/scss}\ntouch src/index.html src/js/main.js src/scss/styles.scss webpack.config.js\n```\n\nWhen you're done, your complete project should look like this:\n\n```text\nmy-project/\n├── src/\n│   ├── js/\n│   │   └── main.js\n│   ├── scss/\n│   │   └── styles.scss\n│   └── index.html\n├── package-lock.json\n├── package.json\n└── webpack.config.js\n```\n\nAt this point, everything is in the right place, but Webpack won't work because we haven't filled in our `webpack.config.js` yet.\n\n## Configure Webpack\n\nWith dependencies installed and our project folder ready for us to start coding, we can now configure Webpack and run our project locally.\n\n1. **Open `webpack.config.js` in your editor.** Since it's blank, we'll need to add some boilerplate config to it so we can start our server. This part of the config tells Webpack where to look for our project's JavaScript, where to output the compiled code to (`dist`), and how the development server should behave (pulling from the `dist` folder with hot reload).\n\n   ```js\n   'use strict'\n   const path = require('path')\n   const HtmlWebpackPlugin = require('html-webpack-plugin')\n\n   module.exports = {\n     mode: 'development',\n     entry: './src/js/main.js',\n     output: {\n       filename: 'main.js',\n       path: path.resolve(__dirname, 'dist')\n     },\n     devServer: {\n       static: path.resolve(__dirname, 'dist'),\n       port: 8080,\n       hot: true\n     },\n     plugins: [\n       new HtmlWebpackPlugin({ template: './src/index.html' })\n     ]\n   }\n   ```\n\n2. **Next we fill in our `src/index.html`.** This is the HTML page Webpack will load in the browser to utilize the bundled CSS and JS we'll add to it in later steps. Before we can do that, we have to give it something to render and include the `output` JS from the previous step.\n\n   ```html\n   \u003C!doctype html>\n   \u003Chtml lang=\"en\">\n     \u003Chead>\n       \u003Cmeta charset=\"utf-8\">\n       \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n       \u003Ctitle>Bootstrap w/ Webpack\u003C/title>\n     \u003C/head>\n     \u003Cbody>\n       \u003Cdiv class=\"container py-4 px-3 mx-auto\">\n         \u003Ch1>Hello, Bootstrap and Webpack!\u003C/h1>\n         \u003Cbutton class=\"btn btn-primary\">Primary button\u003C/button>\n       \u003C/div>\n     \u003C/body>\n   \u003C/html>\n   ```\n\n   We're including a little bit of Bootstrap styling here with the `div class=\"container\"` and `\u003Cbutton>` so that we see when Bootstrap's CSS is loaded by Webpack.\n\n3. **Now we need an npm script to run Webpack.** Open `package.json` and add the `start` script shown below (you should already have the test script). We'll use this script to start our local Webpack dev server. You can also add a `build` script shown below to build your project.\n\n   ```json\n   {\n     // ...\n     \"scripts\": {\n       \"start\": \"webpack serve\",\n       \"build\": \"webpack build --mode=production\",\n       \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n     },\n     // ...\n   }\n   ```\n\n4. **And finally, we can start Webpack.** From the `my-project` folder in your terminal, run that newly added npm script:\n\n   ```sh\n   npm start\n   ```\n\n   \u003Cimg class=\"img-fluid\" src=\"/docs/[[config:docs_version]]/assets/img/guides/webpack-dev-server.png\" alt=\"Webpack dev server running\"/>\n\nIn the next and final section to this guide, we'll set up the Webpack loaders and import all of Bootstrap's CSS and JavaScript.\n\n## Import Bootstrap\n\nImporting Bootstrap into Webpack requires the loaders we installed in the first section. We've installed them with npm, but now Webpack needs to be configured to use them.\n\n1. **Set up the loaders in `webpack.config.js`.** Your configuration file is now complete and should match the snippet below. The only new part here is the `module` section.\n\n   ```js\n   'use strict'\n   const path = require('path')\n   const autoprefixer = require('autoprefixer')\n   const HtmlWebpackPlugin = require('html-webpack-plugin')\n\n   module.exports = {\n     mode: 'development',\n     entry: './src/js/main.js',\n     output: {\n       filename: 'main.js',\n       path: path.resolve(__dirname, 'dist')\n     },\n     devServer: {\n       static: path.resolve(__dirname, 'dist'),\n       port: 8080,\n       hot: true\n     },\n     plugins: [\n       new HtmlWebpackPlugin({ template: './src/index.html' })\n     ],\n     module: {\n       rules: [\n         {\n           test: /\\.(scss)$/,\n           use: [\n             {\n               // Adds CSS to the DOM by injecting a `\u003Cstyle>` tag\n               loader: 'style-loader'\n             },\n             {\n               // Interprets `@import` and `url()` like `import/require()` and will resolve them\n               loader: 'css-loader'\n             },\n             {\n               // Loader for webpack to process CSS with PostCSS\n               loader: 'postcss-loader',\n               options: {\n                 postcssOptions: {\n                   plugins: [\n                     autoprefixer\n                   ]\n                 }\n               }\n             },\n             {\n               // Loads a SASS/SCSS file and compiles it to CSS\n               loader: 'sass-loader'\n             }\n           ]\n         }\n       ]\n     }\n   }\n   ```\n\n   Here's a recap of why we need all these loaders. `style-loader` injects the CSS into a `\u003Cstyle>` element in the `\u003Chead>` of the HTML page, `css-loader` helps with using `@import` and `url()`, `postcss-loader` is required for Autoprefixer, and `sass-loader` allows us to use Sass.\n\n2. **Now, let's import Bootstrap's CSS.** Add the following to `src/scss/styles.scss` to import all of Bootstrap's source Sass.\n\n   ```scss\n   // Import all of Bootstrap's CSS\n   @import \"bootstrap/scss/bootstrap\";\n   ```\n\n   *You can also import our stylesheets individually if you want. [Read our Sass import docs]([[docsref:/customize/sass#importing]]) for details.*\n\n3. **Next we load the CSS and import Bootstrap's JavaScript.** Add the following to `src/js/main.js` to load the CSS and import all of Bootstrap's JS. Popper will be imported automatically through Bootstrap.\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   // Import our custom CSS\n   import '../scss/styles.scss'\n\n   // Import all of Bootstrap's JS\n   import * as bootstrap from 'bootstrap'\n   ```\n\n   You can also import JavaScript plugins individually as needed to keep bundle sizes down:\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   import Alert from 'bootstrap/js/dist/alert'\n\n   // or, specify which plugins you need:\n   import { Tooltip, Toast, Popover } from 'bootstrap'\n   ```\n\n   *[Read our JavaScript docs]([[docsref:/getting-started/javascript/]]) for more information on how to use Bootstrap's plugins.*\n\n4. **And you're done! 🎉** With Bootstrap's source Sass and JS fully loaded, your local development server should now look like this:\n\n   \u003Cimg class=\"img-fluid\" src=\"/docs/[[config:docs_version]]/assets/img/guides/webpack-dev-server-bootstrap.png\" alt=\"Webpack dev server running with Bootstrap\"/>\n\n   Now you can start adding any Bootstrap components you want to use. Be sure to [check out the complete Webpack example project](https://github.com/twbs/examples/tree/main/webpack) for how to include additional custom Sass and optimize your build by importing only the parts of Bootstrap's CSS and JS that you need.\n\n## Production optimizations\n\nDepending on your setup, you may want to implement some additional security and speed optimizations useful for running the project in production. Note that these optimizations are not applied on [the Webpack example project](https://github.com/twbs/examples/tree/main/webpack) and are up to you to implement.\n\n### Extracting CSS\n\nThe `style-loader` we configured above conveniently emits CSS into the bundle so that manually loading a CSS file in `dist/index.html` isn't necessary. This approach may not work with a strict Content Security Policy, however, and it may become a bottleneck in your application due to the large bundle size.\n\nTo separate the CSS so that we can load it directly from `dist/index.html`, use the `mini-css-extract-loader` Webpack plugin.\n\nFirst, install the plugin:\n\n```sh\nnpm install --save-dev mini-css-extract-plugin\n```\n\nThen instantiate and use the plugin in the Webpack configuration:\n\n```diff\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -3,6 +3,7 @@\n const path = require('path')\n const autoprefixer = require('autoprefixer')\n const HtmlWebpackPlugin = require('html-webpack-plugin')\n+const miniCssExtractPlugin = require('mini-css-extract-plugin')\n\n module.exports = {\n   mode: 'development',\n@@ -17,7 +18,8 @@ module.exports = {\n     hot: true\n   },\n   plugins: [\n-    new HtmlWebpackPlugin({ template: './src/index.html' })\n+    new HtmlWebpackPlugin({ template: './src/index.html' }),\n+    new miniCssExtractPlugin()\n   ],\n   module: {\n     rules: [\n@@ -25,8 +27,8 @@ module.exports = {\n         test: /\\.(scss)$/,\n         use: [\n           {\n-            // Adds CSS to the DOM by injecting a `\u003Cstyle>` tag\n-            loader: 'style-loader'\n+            // Extracts CSS for each JS file that includes CSS\n+            loader: miniCssExtractPlugin.loader\n           },\n           {\n```\n\nAfter running `npm run build` again, there will be a new file `dist/main.css`, which will contain all of the CSS imported by `src/js/main.js`. If you view `dist/index.html` in your browser now, the style will be missing, as it is now in `dist/main.css`. You can include the generated CSS in `dist/index.html` like this:\n\n```diff\n--- a/dist/index.html\n+++ b/dist/index.html\n@@ -3,6 +3,7 @@\n   \u003Chead>\n     \u003Cmeta charset=\"utf-8\">\n     \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+    \u003Clink rel=\"stylesheet\" href=\"./main.css\">\n     \u003Ctitle>Bootstrap w/ Webpack\u003C/title>\n   \u003C/head>\n   \u003Cbody>\n```\n\n### Extracting SVG files\n\nBootstrap's CSS includes multiple references to SVG files via inline `data:` URIs. If you define a Content Security Policy for your project that blocks `data:` URIs for images, then these SVG files will not load. You can get around this problem by extracting the inline SVG files using Webpack's asset modules feature.\n\nConfigure Webpack to extract inline SVG files like this:\n\n```diff\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -23,6 +23,14 @@ module.exports = {\n   },\n   module: {\n     rules: [\n+      {\n+        mimetype: 'image/svg+xml',\n+        scheme: 'data',\n+        type: 'asset/resource',\n+        generator: {\n+          filename: 'icons/[hash].svg'\n+        }\n+      },\n       {\n         test: /\\.(scss)$/,\n         use: [\n```\n\nAfter running `npm run build` again, you'll find the SVG files extracted into `dist/icons` and properly referenced from CSS.\n\n\u003CGuideFooter />","src/content/docs/getting-started/webpack.mdx","5f3e7e8daa0c2838","getting-started/webpack.mdx","getting-started/vite",{"id":800,"data":802,"body":808,"filePath":809,"digest":810,"legacyId":811,"deferredRender":139},{"added":803,"description":805,"thumbnail":806,"title":807,"toc":139},{"show_badge":325,"version":804},"5.2","The official guide for how to include and bundle Bootstrap's CSS and JavaScript in your project using Vite.","guides/bootstrap-vite@2x.png","Bootstrap and Vite","\u003Cimg class=\"d-block mx-auto mb-4 img-fluid rounded-3\" srcset=\"/docs/[[config:docs_version]]/assets/img/guides/bootstrap-vite.png, /docs/[[config:docs_version]]/assets/img/guides/bootstrap-vite@2x.png 2x\" src=\"/docs/[[config:docs_version]]/assets/img/guides/bootstrap-vite.png\" width=\"800\" height=\"400\" alt=\"\" />\n\n\u003CCallout>\n**Want to skip to the end?** Download the source code and working demo for this guide from the [twbs/examples repository](https://github.com/twbs/examples/tree/main/vite). You can also [open the example in StackBlitz](https://stackblitz.com/github/twbs/examples/tree/main/vite?file=index.html) for live editing.\n\u003C/Callout>\n\n## What is Vite?\n\n[Vite](https://vite.dev/) is a modern frontend build tool designed for speed and simplicity. It provides an efficient and streamlined development experience, especially for modern JavaScript frameworks.\n\n## Setup\n\nWe're building a Vite project with Bootstrap from scratch, so there are some prerequisites and upfront steps before we can really get started. This guide requires you to have Node.js installed and some familiarity with the terminal.\n\n1. **Create a project folder and set up npm.** We'll create the `my-project` folder and initialize npm with the `-y` argument to avoid it asking us all the interactive questions.\n\n   ```sh\n   mkdir my-project && cd my-project\n   npm init -y\n   ```\n\n2. **Install Vite.** Unlike our Webpack guide, there’s only a single build tool dependency here. We use `--save-dev` to signal that this dependency is only for development use and not for production.\n\n   ```sh\n   npm i --save-dev vite\n   ```\n\n3. **Install Bootstrap.** Now we can install Bootstrap. We'll also install Popper since our dropdowns, popovers, and tooltips depend on it for their positioning. If you don't plan on using those components, you can omit Popper here.\n\n   ```sh\n   npm i --save bootstrap @popperjs/core\n   ```\n\n4. **Install additional dependency.** In addition to Vite and Bootstrap, we need another dependency (Sass) to properly import and bundle Bootstrap's CSS.\n\n   ```sh\n   npm i --save-dev sass\n   ```\n\nNow that we have all the necessary dependencies installed and set up, we can get to work creating the project files and importing Bootstrap.\n\n## Project structure\n\nWe've already created the `my-project` folder and initialized npm. Now we'll also create our `src` folder, stylesheet, and JavaScript file to round out the project structure. Run the following from `my-project`, or manually create the folder and file structure shown below.\n\n```sh\nmkdir {src,src/js,src/scss}\ntouch src/index.html src/js/main.js src/scss/styles.scss vite.config.js\n```\n\nWhen you're done, your complete project should look like this:\n\n```text\nmy-project/\n├── src/\n│   ├── js/\n│   │   └── main.js\n│   └── scss/\n│   |   └── styles.scss\n|   └── index.html\n├── package-lock.json\n├── package.json\n└── vite.config.js\n```\n\nAt this point, everything is in the right place, but Vite won't work because we haven't filled in our `vite.config.js` yet.\n\n## Configure Vite\n\nWith dependencies installed and our project folder ready for us to start coding, we can now configure Vite and run our project locally.\n\n1. **Open `vite.config.js` in your editor.** Since it's blank, we'll need to add some boilerplate config to it so we can start our server. This part of the config tells Vite where to look for our project's JavaScript and how the development server should behave (pulling from the `src` folder with hot reload).\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   import { resolve } from 'path'\n\n   export default {\n     root: resolve(__dirname, 'src'),\n     build: {\n       outDir: '../dist'\n     },\n     server: {\n       port: 8080\n     }\n   }\n   ```\n\n2. **Next we fill in `src/index.html`.** This is the HTML page Vite will load in the browser to utilize the bundled CSS and JS we'll add to it in later steps.\n\n   ```html\n   \u003C!doctype html>\n   \u003Chtml lang=\"en\">\n     \u003Chead>\n       \u003Cmeta charset=\"utf-8\">\n       \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n       \u003Ctitle>Bootstrap w/ Vite\u003C/title>\n       \u003Cscript type=\"module\" src=\"./js/main.js\">\u003C/script>\n     \u003C/head>\n     \u003Cbody>\n       \u003Cdiv class=\"container py-4 px-3 mx-auto\">\n         \u003Ch1>Hello, Bootstrap and Vite!\u003C/h1>\n         \u003Cbutton class=\"btn btn-primary\">Primary button\u003C/button>\n       \u003C/div>\n     \u003C/body>\n   \u003C/html>\n   ```\n\n   We're including a little bit of Bootstrap styling here with the `div class=\"container\"` and `\u003Cbutton>` so that we see when Bootstrap's CSS is loaded by Vite.\n\n3. **Now we need an npm script to run Vite.** Open `package.json` and add the `start` script shown below (you should already have the test script). We'll use this script to start our local Vite dev server.\n\n   ```json\n   {\n     // ...\n     \"scripts\": {\n       \"start\": \"vite\",\n       \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n     },\n     // ...\n   }\n   ```\n\n4. **And finally, we can start Vite.** From the `my-project` folder in your terminal, run that newly added npm script:\n\n   ```sh\n   npm start\n   ```\n\n   \u003Cimg class=\"img-fluid\" src=\"/docs/[[config:docs_version]]/assets/img/guides/vite-dev-server.png\" alt=\"Vite dev server running\" />\n\nIn the next and final section to this guide, we’ll import all of Bootstrap’s CSS and JavaScript.\n\n## Import Bootstrap\n\n1. **Import Bootstrap's CSS.** Add the following to `src/scss/styles.scss` to import all of Bootstrap's source Sass.\n\n   ```scss\n   // Import all of Bootstrap's CSS\n   @import \"bootstrap/scss/bootstrap\";\n   ```\n\n   *You can also import our stylesheets individually if you want. [Read our Sass import docs]([[docsref:/customize/sass#importing]]) for details.*\n\n3. **Next we load the CSS and import Bootstrap's JavaScript.** Add the following to `src/js/main.js` to load the CSS and import all of Bootstrap's JS. Popper will be imported automatically through Bootstrap.\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   // Import our custom CSS\n   import '../scss/styles.scss'\n\n   // Import all of Bootstrap's JS\n   import * as bootstrap from 'bootstrap'\n   ```\n\n   You can also import JavaScript plugins individually as needed to keep bundle sizes down:\n\n   {/* TODO(Astro migration): \u003C!-- eslint-skip --> */}\n   ```js\n   import Alert from 'bootstrap/js/dist/alert';\n\n   // or, specify which plugins you need:\n   import { Tooltip, Toast, Popover } from 'bootstrap';\n   ```\n\n   *[Read our JavaScript docs]([[docsref:/getting-started/javascript/]]) for more information on how to use Bootstrap's plugins.*\n\n4. **And you're done! 🎉** With Bootstrap's source Sass and JS fully loaded, your local development server should now look like this:\n\n   \u003Cimg class=\"img-fluid\" src=\"/docs/[[config:docs_version]]/assets/img/guides/vite-dev-server-bootstrap.png\" alt=\"Vite dev server running with Bootstrap\" />\n\n   Now you can start adding any Bootstrap components you want to use. Be sure to [check out the complete Vite example project](https://github.com/twbs/examples/tree/main/vite) for how to include additional custom Sass and optimize your build by importing only the parts of Bootstrap's CSS and JS that you need.\n\n\u003CGuideFooter />","src/content/docs/getting-started/vite.mdx","0823f7675719deb1","getting-started/vite.mdx","helpers/clearfix",{"id":812,"data":814,"body":818,"filePath":819,"digest":820,"legacyId":821,"deferredRender":139},{"aliases":815,"description":816,"title":817},"/docs/[[config:docs_version]]/helpers/","Quickly and easily clear floated content within a container by adding a clearfix utility.","Clearfix","Easily clear `float`s by adding `.clearfix` **to the parent element**. Can also be used as a mixin.\n\nUse in HTML:\n\n```html\n\u003Cdiv class=\"clearfix\">...\u003C/div>\n```\n\nThe mixin source code:\n\n\u003CScssDocs name=\"clearfix\" file=\"scss/mixins/_clearfix.scss\" />\n\nUse the mixin in SCSS:\n\n```scss\n.element {\n  @include clearfix;\n}\n```\n\nThe following example shows how the clearfix can be used. Without the clearfix the wrapping div would not span around the buttons which would cause a broken layout.\n\n\u003CExample code={`\u003Cdiv class=\"bg-info clearfix\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary float-start\">Example Button floated left\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary float-end\">Example Button floated right\u003C/button>\n\u003C/div>`} />","src/content/docs/helpers/clearfix.mdx","3f1c961cb85d0fcb","helpers/clearfix.mdx","helpers/color-background",{"id":822,"data":824,"body":828,"filePath":829,"digest":830,"legacyId":831,"deferredRender":139},{"added":825,"description":826,"title":827,"toc":139},{"version":804},"Set a background color with contrasting foreground color.","Color and background","import { getData } from '@libs/data'\n\n## Overview\n\nColor and background helpers combine the power of our [`.text-*` utilities]([[docsref:/utilities/colors]]) and [`.bg-*` utilities]([[docsref:/utilities/background]]) in one class. Using our Sass `color-contrast()` function, we automatically determine a contrasting `color` for a particular `background-color`.\n\n\u003CCallout type=\"warning\">\n**Heads up!** There's currently no support for a CSS-native `color-contrast` function, so we use our own via Sass. This means that customizing our theme colors via CSS variables may cause color contrast issues with these utilities.\n\u003C/Callout>\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"text-bg-${themeColor.name} p-3\">${themeColor.title} with contrasting color\u003C/div>`)} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## With components\n\nUse them in place of combined `.text-*` and `.bg-*` classes, like on [badges]([[docsref:/components/badge#background-colors]]):\n\n\u003CExample code={`\u003Cspan class=\"badge text-bg-primary\">Primary\u003C/span>\n\u003Cspan class=\"badge text-bg-info\">Info\u003C/span>`} />\n\nOr on [cards]([[docsref:/components/card#background-and-color]]):\n\n\u003CExample code={`\u003Cdiv class=\"card text-bg-primary mb-3\" style=\"max-width: 18rem;\">\n  \u003Cdiv class=\"card-header\">Header\u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n\u003C/div>\n\u003Cdiv class=\"card text-bg-info mb-3\" style=\"max-width: 18rem;\">\n  \u003Cdiv class=\"card-header\">Header\u003C/div>\n  \u003Cdiv class=\"card-body\">\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n  \u003C/div>\n\u003C/div>`} />","src/content/docs/helpers/color-background.mdx","d2735557bf0a602c","helpers/color-background.mdx","helpers/colored-links",{"id":832,"data":834,"body":837,"filePath":838,"digest":839,"legacyId":840,"deferredRender":139},{"description":835,"title":836,"toc":139},"Colored links with hover states","Colored links","import { getData } from '@libs/data'\n\n## Link colors\n\nYou can use the `.link-*` classes to colorize links. Unlike the [`.text-*` classes]([[docsref:/utilities/colors]]), these classes have a `:hover` and `:focus` state. Some of the link styles use a relatively light foreground color, and should only be used on a dark background in order to have sufficient contrast.\n\n\u003CCallout>\n**Heads up!** `.link-body-emphasis` is currently the only colored link that adapts to color modes. It's treated as a special case until v6 arrives and we can more thoroughly rebuild our theme colors for color modes. Until then, it's a unique, high-contrast link color with custom `:hover` and `:focus` styles. However, it still responds to the new link utilities.\n\u003C/Callout>\n\n\u003CExample code={[\n  ...getData('theme-colors').map((themeColor) => `\u003Cp>\u003Ca href=\"#\" class=\"link-${themeColor.name}\">${themeColor.title} link\u003C/a>\u003C/p>`),\n  `\u003Cp>\u003Ca href=\"#\" class=\"link-body-emphasis\">Emphasis link\u003C/a>\u003C/p>`\n]} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## Link utilities\n\n\u003CAddedIn version=\"5.3.0\"/>\n\nColored links can also be modified by our [link utilities]([[docsref:/utilities/link/]]).\n\n\u003CExample code={[\n  ...getData('theme-colors').map((themeColor) => `\u003Cp>\u003Ca href=\"#\" class=\"link-${themeColor.name} link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover\">${themeColor.title} link\u003C/a>\u003C/p>`),\n  `\u003Cp>\u003Ca href=\"#\" class=\"link-body-emphasis link-offset-2 link-underline-opacity-25 link-underline-opacity-75-hover\">Emphasis link\u003C/a>\u003C/p>`\n]} />","src/content/docs/helpers/colored-links.mdx","aa46fbbe4d927d43","helpers/colored-links.mdx","helpers/icon-link",{"id":841,"data":843,"body":847,"filePath":848,"digest":849,"legacyId":850,"deferredRender":139},{"added":844,"description":845,"title":846,"toc":139},{"version":252},"Quickly create stylized hyperlinks with Bootstrap Icons or other icons.","Icon link","The icon link helper component modifies our default link styles to enhance their appearance and quickly align any pairing of icon and text. Alignment is set via inline flexbox styling and a default `gap` value. We stylize the underline with a custom offset and color. Icons are automatically sized to `1em` to best match their associated text's `font-size`.\n\nIcon links assume [Bootstrap Icons](https://icons.getbootstrap.com) are being used, but you can use any icon or image you like.\n\n\u003CCallout>\nWhen icons are purely decorative, they should be hidden from assistive technologies using `aria-hidden=\"true\"`, as we've done in our examples. For icons that convey meaning, provide an appropriate text alternative by adding `role=\"img\"` and an appropriate `aria-label=\"...\"` to the SVGs.\n\u003C/Callout>\n\n## Example\n\nTake a regular `\u003Ca>` element, add `.icon-link`, and insert an icon on either the left or right of your link text. The icon is automatically sized, placed, and colored.\n\n\u003CExample code={`\u003Ca class=\"icon-link\" href=\"#\">\n  \u003Csvg class=\"bi\" aria-hidden=\"true\">\u003Cuse xlink:href=\"#box-seam\">\u003C/use>\u003C/svg>\n  Icon link\n\u003C/a>`} />\n\n\u003CExample code={`\u003Ca class=\"icon-link\" href=\"#\">\n  Icon link\n  \u003Csvg class=\"bi\" aria-hidden=\"true\">\u003Cuse xlink:href=\"#arrow-right\">\u003C/use>\u003C/svg>\n\u003C/a>`} />\n\n## Style on hover\n\nAdd `.icon-link-hover` to move the icon to the right on hover.\n\n\u003CExample code={`\u003Ca class=\"icon-link icon-link-hover\" href=\"#\">\n  Icon link\n  \u003Csvg class=\"bi\" aria-hidden=\"true\">\u003Cuse xlink:href=\"#arrow-right\">\u003C/use>\u003C/svg>\n\u003C/a>`} />\n\n## Customize\n\nModify the styling of an icon link with our link CSS variables, Sass variables, utilities, or custom styles.\n\n### CSS variables\n\nModify the `--bs-link-*` and `--bs-icon-link-*` CSS variables as needed to change the default appearance.\n\nCustomize the hover `transform` by overriding the `--bs-icon-link-transform` CSS variable:\n\n\u003CExample code={`\u003Ca class=\"icon-link icon-link-hover\" style=\"--bs-icon-link-transform: translate3d(0, -.125rem, 0);\" href=\"#\">\n  \u003Csvg class=\"bi\" aria-hidden=\"true\">\u003Cuse xlink:href=\"#clipboard\">\u003C/use>\u003C/svg>\n  Icon link\n\u003C/a>`} />\n\nCustomize the color by overriding the `--bs-link-*` CSS variable:\n\n\u003CExample code={`\u003Ca class=\"icon-link icon-link-hover\" style=\"--bs-link-hover-color-rgb: 25, 135, 84;\" href=\"#\">\n  Icon link\n  \u003Csvg class=\"bi\" aria-hidden=\"true\">\u003Cuse xlink:href=\"#arrow-right\">\u003C/use>\u003C/svg>\n\u003C/a>`} />\n\n## Sass variables\n\nCustomize the icon link Sass variables to modify all icon link styles across your Bootstrap-powered project.\n\n\u003CScssDocs name=\"icon-link-variables\" file=\"scss/_variables.scss\" />\n\n### Sass utilities API\n\nModify icon links with any of [our link utilities]([[docsref:/utilities/link/]]) for modifying underline color and offset.\n\n\u003CExample code={`\u003Ca class=\"icon-link icon-link-hover link-success link-underline-success link-underline-opacity-25\" href=\"#\">\n  Icon link\n  \u003Csvg class=\"bi\" aria-hidden=\"true\">\u003Cuse xlink:href=\"#arrow-right\">\u003C/use>\u003C/svg>\n\u003C/a>`} />","src/content/docs/helpers/icon-link.mdx","f91aca8a5b8b3dbc","helpers/icon-link.mdx","helpers/focus-ring",{"id":851,"data":853,"body":857,"filePath":858,"digest":859,"legacyId":860,"deferredRender":139},{"added":854,"description":855,"title":856,"toc":139},{"version":252},"Utility classes that allows you to add and modify custom focus ring styles to elements and components.","Focus ring","import { getData } from '@libs/data'\n\nThe `.focus-ring` helper removes the default `outline` on `:focus`, replacing it with a `box-shadow` that can be more broadly customized. The new shadow is made up of a series of CSS variables, inherited from the `:root` level, that can be modified for any element or component.\n\n## Example\n\nClick directly on the link below to see the focus ring in action, or into the example below and then press \u003Ckbd>Tab\u003C/kbd>.\n\n\u003CExample code={`\u003Ca href=\"#\" class=\"d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2\">\n  Custom focus ring\n\u003C/a>`} />\n\n## Customize\n\nModify the styling of a focus ring with our CSS variables, Sass variables, utilities, or custom styles.\n\n### CSS variables\n\nModify the `--bs-focus-ring-*` CSS variables as needed to change the default appearance.\n\n\u003CExample code={`\u003Ca href=\"#\" class=\"d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2\" style=\"--bs-focus-ring-color: rgba(var(--bs-success-rgb), .25)\">\n  Green focus ring\n\u003C/a>`} />\n\n`.focus-ring` sets styles via global CSS variables that can be overridden on any parent element, as shown above. These variables are generated from their Sass variable counterparts.\n\n\u003CScssDocs name=\"root-focus-variables\" file=\"scss/_root.scss\" />\n\nBy default, there is no `--bs-focus-ring-x`, `--bs-focus-ring-y`, or `--bs-focus-ring-blur`, but we provide CSS variables with fallbacks to initial `0` values. Modify them to change the default appearance.\n\n\u003CExample code={`\u003Ca href=\"#\" class=\"d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2\" style=\"--bs-focus-ring-x: 10px; --bs-focus-ring-y: 10px; --bs-focus-ring-blur: 4px\">\n  Blurry offset focus ring\n\u003C/a>`} />\n\n### Sass variables\n\nCustomize the focus ring Sass variables to modify all usage of the focus ring styles across your Bootstrap-powered project.\n\n\u003CScssDocs name=\"focus-ring-variables\" file=\"scss/_variables.scss\" />\n\n### Sass utilities API\n\nIn addition to `.focus-ring`, we have several `.focus-ring-*` utilities to modify the helper class defaults. Modify the color with any of our [theme colors]([[docsref:/customize/color#theme-colors]]). Note that the light and dark variants may not be visible on all background colors given current color mode support.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cp>\u003Ca href=\"#\" class=\"d-inline-flex focus-ring focus-ring-${themeColor.name} py-1 px-2 text-decoration-none border rounded-2\">${themeColor.title} focus\u003C/a>\u003C/p>`)} />\n\nFocus ring utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-focus-ring\" file=\"scss/_utilities.scss\" />","src/content/docs/helpers/focus-ring.mdx","562a54ab99ec77a3","helpers/focus-ring.mdx","helpers/position",{"id":861,"data":863,"body":866,"filePath":867,"digest":868,"legacyId":869,"deferredRender":139},{"description":864,"title":865,"toc":139},"Use these helpers for quickly configuring the position of an element.","Position","## Fixed top\n\nPosition an element at the top of the viewport, from edge to edge. Be sure you understand the ramifications of fixed position in your project; you may need to add additional CSS.\n\n```html\n\u003Cdiv class=\"fixed-top\">...\u003C/div>\n```\n\n## Fixed bottom\n\nPosition an element at the bottom of the viewport, from edge to edge. Be sure you understand the ramifications of fixed position in your project; you may need to add additional CSS.\n\n```html\n\u003Cdiv class=\"fixed-bottom\">...\u003C/div>\n```\n\n## Sticky top\n\nPosition an element at the top of the viewport, from edge to edge, but only after you scroll past it.\n\n```html\n\u003Cdiv class=\"sticky-top\">...\u003C/div>\n```\n\n## Responsive sticky top\n\nResponsive variations also exist for `.sticky-top` utility.\n\n```html\n\u003Cdiv class=\"sticky-sm-top\">Stick to the top on viewports sized SM (small) or wider\u003C/div>\n\u003Cdiv class=\"sticky-md-top\">Stick to the top on viewports sized MD (medium) or wider\u003C/div>\n\u003Cdiv class=\"sticky-lg-top\">Stick to the top on viewports sized LG (large) or wider\u003C/div>\n\u003Cdiv class=\"sticky-xl-top\">Stick to the top on viewports sized XL (extra-large) or wider\u003C/div>\n\u003Cdiv class=\"sticky-xxl-top\">Stick to the top on viewports sized XXL (extra-extra-large) or wider\u003C/div>\n```\n\n## Sticky bottom\n\nPosition an element at the bottom of the viewport, from edge to edge, but only after you scroll past it.\n\n```html\n\u003Cdiv class=\"sticky-bottom\">...\u003C/div>\n```\n\n## Responsive sticky bottom\n\nResponsive variations also exist for `.sticky-bottom` utility.\n\n```html\n\u003Cdiv class=\"sticky-sm-bottom\">Stick to the bottom on viewports sized SM (small) or wider\u003C/div>\n\u003Cdiv class=\"sticky-md-bottom\">Stick to the bottom on viewports sized MD (medium) or wider\u003C/div>\n\u003Cdiv class=\"sticky-lg-bottom\">Stick to the bottom on viewports sized LG (large) or wider\u003C/div>\n\u003Cdiv class=\"sticky-xl-bottom\">Stick to the bottom on viewports sized XL (extra-large) or wider\u003C/div>\n\u003Cdiv class=\"sticky-xxl-bottom\">Stick to the bottom on viewports sized XXL (extra-extra-large) or wider\u003C/div>\n```","src/content/docs/helpers/position.mdx","283c24febbd99b27","helpers/position.mdx","helpers/ratio",{"id":870,"data":872,"body":875,"filePath":876,"digest":877,"legacyId":878,"deferredRender":139},{"description":873,"title":874,"toc":139},"Use generated pseudo elements to make an element maintain the aspect ratio of your choosing. Perfect for responsively handling video or slideshow embeds based on the width of the parent.","Ratios","## About\n\nUse the ratio helper to manage the aspect ratios of external content like `\u003Ciframe>`s, `\u003Cembed>`s, `\u003Cvideo>`s, and `\u003Cobject>`s. These helpers also can be used on any standard HTML child element (e.g., a `\u003Cdiv>` or `\u003Cimg>`). Styles are applied from the parent `.ratio` class directly to the child.\n\nAspect ratios are declared in a Sass map and included in each class via CSS variable, which also allows [custom aspect ratios](#custom-ratios).\n\n\u003CCallout>\n**Pro-Tip!** You don't need `frameborder=\"0\"` on your `\u003Ciframe>`s as we override that for you in [Reboot]([[docsref:/content/reboot]]).\n\u003C/Callout>\n\n## Example\n\nWrap any embed, like an `\u003Ciframe>`, in a parent element with `.ratio` and an aspect ratio class. The immediate child element is automatically sized thanks to our universal selector `.ratio > *`.\n\n\u003CExample code={`\u003Cdiv class=\"ratio ratio-16x9\">\n  \u003Ciframe src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" title=\"YouTube video\" allowfullscreen>\u003C/iframe>\n\u003C/div>`} />\n\n## Aspect ratios\n\nAspect ratios can be customized with modifier classes. By default the following ratio classes are provided:\n\n\u003CExample class=\"bd-example-ratios\" code={`\u003Cdiv class=\"ratio ratio-1x1\">\n  \u003Cdiv>1x1\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"ratio ratio-4x3\">\n  \u003Cdiv>4x3\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"ratio ratio-16x9\">\n  \u003Cdiv>16x9\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"ratio ratio-21x9\">\n  \u003Cdiv>21x9\u003C/div>\n\u003C/div>`} />\n\n## Custom ratios\n\nEach `.ratio-*` class includes a CSS custom property (or CSS variable) in the selector. You can override this CSS variable to create custom aspect ratios on the fly with some quick math on your part.\n\nFor example, to create a 2x1 aspect ratio, set `--bs-aspect-ratio: 50%` on the `.ratio`.\n\n\u003CExample class=\"bd-example-ratios\" code={`\u003Cdiv class=\"ratio\" style=\"--bs-aspect-ratio: 50%;\">\n  \u003Cdiv>2x1\u003C/div>\n\u003C/div>`} />\n\nThis CSS variable makes it easy to modify the aspect ratio across breakpoints. The following is 4x3 to start, but changes to a custom 2x1 at the medium breakpoint.\n\n```scss\n.ratio-4x3 {\n  @include media-breakpoint-up(md) {\n    --bs-aspect-ratio: 50%; // 2x1\n  }\n}\n```\n\n\u003CExample class=\"bd-example-ratios bd-example-ratios-breakpoint\" code={`\u003Cdiv class=\"ratio ratio-4x3\">\n  \u003Cdiv>4x3, then 2x1\u003C/div>\n\u003C/div>`} />\n\n\n## Sass maps\n\nWithin `_variables.scss`, you can change the aspect ratios you want to use. Here's our default `$ratio-aspect-ratios` map. Modify the map as you like and recompile your Sass to put them to use.\n\n\u003CScssDocs name=\"aspect-ratios\" file=\"scss/_variables.scss\" />","src/content/docs/helpers/ratio.mdx","13873c288c73f69e","helpers/ratio.mdx","helpers/stacks",{"id":879,"data":881,"body":885,"filePath":886,"digest":887,"legacyId":888,"deferredRender":139},{"added":882,"description":883,"title":884,"toc":139},{"version":499},"Shorthand helpers that build on top of our flexbox utilities to make component layout faster and easier than ever.","Stacks","Stacks offer a shortcut for applying a number of flexbox properties to quickly and easily create layouts in Bootstrap. All credit for the concept and implementation goes to the open source [Pylon project](https://almonk.github.io/pylon/).\n\n\u003CCallout type=\"warning\">\n**Heads up!** Support for gap utilities with flexbox isn't available in Safari prior to 14.5, so consider verifying your intended browser support. Grid layout should have no issues. [Read more](https://caniuse.com/flexbox-gap).\n\u003C/Callout>\n\n## Vertical\n\nUse `.vstack` to create vertical layouts. Stacked items are full-width by default. Use `.gap-*` utilities to add space between items.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"vstack gap-3\">\n  \u003Cdiv class=\"p-2\">First item\u003C/div>\n  \u003Cdiv class=\"p-2\">Second item\u003C/div>\n  \u003Cdiv class=\"p-2\">Third item\u003C/div>\n\u003C/div>`} />\n\n## Horizontal\n\nUse `.hstack` for horizontal layouts. Stacked items are vertically centered by default and only take up their necessary width. Use `.gap-*` utilities to add space between items.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"hstack gap-3\">\n  \u003Cdiv class=\"p-2\">First item\u003C/div>\n  \u003Cdiv class=\"p-2\">Second item\u003C/div>\n  \u003Cdiv class=\"p-2\">Third item\u003C/div>\n\u003C/div>`} />\n\nUsing horizontal margin utilities like `.ms-auto` as spacers:\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"hstack gap-3\">\n  \u003Cdiv class=\"p-2\">First item\u003C/div>\n  \u003Cdiv class=\"p-2 ms-auto\">Second item\u003C/div>\n  \u003Cdiv class=\"p-2\">Third item\u003C/div>\n\u003C/div>`} />\n\nAnd with [vertical rules]([[docsref:/helpers/vertical-rule]]):\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"hstack gap-3\">\n  \u003Cdiv class=\"p-2\">First item\u003C/div>\n  \u003Cdiv class=\"p-2 ms-auto\">Second item\u003C/div>\n  \u003Cdiv class=\"vr\">\u003C/div>\n  \u003Cdiv class=\"p-2\">Third item\u003C/div>\n\u003C/div>`} />\n\n## Examples\n\nUse `.vstack` to stack buttons and other elements:\n\n\u003CExample code={`\u003Cdiv class=\"vstack gap-2 col-md-5 mx-auto\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary\">Save changes\u003C/button>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-secondary\">Cancel\u003C/button>\n\u003C/div>`} />\n\nCreate an inline form with `.hstack`:\n\n\u003CExample code={`\u003Cdiv class=\"hstack gap-3\">\n  \u003Cinput class=\"form-control me-auto\" type=\"text\" placeholder=\"Add your item here...\" aria-label=\"Add your item here...\">\n  \u003Cbutton type=\"button\" class=\"btn btn-secondary\">Submit\u003C/button>\n  \u003Cdiv class=\"vr\">\u003C/div>\n  \u003Cbutton type=\"button\" class=\"btn btn-outline-danger\">Reset\u003C/button>\n\u003C/div>`} />\n\n## CSS\n\n\u003CScssDocs name=\"stacks\" file=\"scss/helpers/_stacks.scss\" />","src/content/docs/helpers/stacks.mdx","21c929105bed4df7","helpers/stacks.mdx","helpers/text-truncation",{"id":889,"data":891,"body":894,"filePath":895,"digest":896,"legacyId":897,"deferredRender":139},{"description":892,"title":893,"toc":325},"Truncate long strings of text with an ellipsis.","Text truncation","For longer content, you can add a `.text-truncate` class to truncate the text with an ellipsis. **Requires `display: inline-block` or `display: block`.**\n\n\u003CExample code={`\u003C!-- Block level -->\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col-2 text-truncate\">\n    This text is quite long, and will be truncated once displayed.\n  \u003C/div>\n\u003C/div>\n\n\u003C!-- Inline level -->\n\u003Cspan class=\"d-inline-block text-truncate\" style=\"max-width: 150px;\">\n  This text is quite long, and will be truncated once displayed.\n\u003C/span>`} />","src/content/docs/helpers/text-truncation.mdx","8bc7768bd2eb2b6e","helpers/text-truncation.mdx","helpers/stretched-link",{"id":898,"data":900,"body":903,"filePath":904,"digest":905,"legacyId":906,"deferredRender":139},{"description":901,"title":902},"Make any HTML element or Bootstrap component clickable by \"stretching\" a nested link via CSS.","Stretched link","Add `.stretched-link` to a link to make its [containing block](https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block) clickable via a `::after` pseudo element. In most cases, this means that an element with `position: relative;` that contains a link with the `.stretched-link` class is clickable. Please note given [how CSS `position` works](https://www.w3.org/TR/CSS21/visuren.html#propdef-position), `.stretched-link` cannot be mixed with most table elements.\n\nCards have `position: relative` by default in Bootstrap, so in this case you can safely add the `.stretched-link` class to a link in the card without any other HTML changes.\n\nMultiple links and tap targets are not recommended with stretched links. However, some `position` and `z-index` styles can help should this be required.\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text={false} title=\"Card image cap\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card with stretched link\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n    \u003Ca href=\"#\" class=\"btn btn-primary stretched-link\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\nMost custom components do not have `position: relative` by default, so we need to add the `.position-relative` here to prevent the link from stretching outside the parent element.\n\n\u003CExample code={`\u003Cdiv class=\"d-flex position-relative\">\n  \u003CPlaceholder width=\"144\" height=\"144\" class=\"flex-shrink-0 me-3\" text={false} title=\"Generic placeholder image22222\" />\n  \u003Cdiv>\n    \u003Ch5 class=\"mt-0\">Custom component with stretched link\u003C/h5>\n    \u003Cp>This is some placeholder content for the custom component. It is intended to mimic what some real-world content would look like, and we're using it here to give the component a bit of body and size.\u003C/p>\n    \u003Ca href=\"#\" class=\"stretched-link\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample code={`\u003Cdiv class=\"row g-0 bg-body-secondary position-relative\">\n  \u003Cdiv class=\"col-md-6 mb-md-0 p-md-4\">\n    \u003CPlaceholder width=\"100%\" height=\"200\" class=\"w-100\" text={false} title=\"Generic placeholder image\" />\n  \u003C/div>\n  \u003Cdiv class=\"col-md-6 p-4 ps-md-0\">\n    \u003Ch5 class=\"mt-0\">Columns with stretched link\u003C/h5>\n    \u003Cp>Another instance of placeholder content for this other custom component. It is intended to mimic what some real-world content would look like, and we're using it here to give the component a bit of body and size.\u003C/p>\n    \u003Ca href=\"#\" class=\"stretched-link\">Go somewhere\u003C/a>\n  \u003C/div>\n\u003C/div>`} />\n\n## Identifying the containing block\n\nIf the stretched link doesn't seem to work, the [containing block](https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#Identifying_the_containing_block) will probably be the cause. The following CSS properties will make an element the containing block:\n\n- A `position` value other than `static`\n- A `transform` or `perspective` value other than `none`\n- A `will-change` value of `transform` or `perspective`\n- A `filter` value other than `none` or a `will-change` value of `filter` (only works on Firefox)\n\n\u003CExample code={`\u003Cdiv class=\"card\" style=\"width: 18rem;\">\n  \u003CPlaceholder width=\"100%\" height=\"180\" class=\"card-img-top\" text={false} title=\"Card image cap\" />\n  \u003Cdiv class=\"card-body\">\n    \u003Ch5 class=\"card-title\">Card with stretched links\u003C/h5>\n    \u003Cp class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.\u003C/p>\n    \u003Cp class=\"card-text\">\n      \u003Ca href=\"#\" class=\"stretched-link text-danger\" style=\"position: relative;\">Stretched link will not work here, because \u003Ccode>position: relative\u003C/code> is added to the link\u003C/a>\n    \u003C/p>\n    \u003Cp class=\"card-text bg-body-tertiary\" style=\"transform: rotate(0);\">\n      This \u003Ca href=\"#\" class=\"text-warning stretched-link\">stretched link\u003C/a> will only be spread over the \u003Ccode>p\u003C/code>-tag, because a transform is applied to it.\n    \u003C/p>\n  \u003C/div>\n\u003C/div>`} />","src/content/docs/helpers/stretched-link.mdx","8bf85fea5f693105","helpers/stretched-link.mdx","helpers/visually-hidden",{"id":907,"data":909,"body":913,"filePath":914,"digest":915,"legacyId":916,"deferredRender":139},{"aliases":910,"description":911,"title":912},"/docs/[[config:docs_version]]/helpers/screen-readers/","Use these helpers to visually hide elements but keep them accessible to assistive technologies.","Visually hidden","Visually hide an element while still allowing it to be exposed to assistive technologies (such as screen readers) with `.visually-hidden`. Use `.visually-hidden-focusable` to visually hide an element by default, but to display it when it's focused (e.g. by a keyboard-only user). `.visually-hidden-focusable` can also be applied to a container–thanks to `:focus-within`, the container will be displayed when any child element of the container receives focus.\n\n\u003CExample code={`\u003Ch2 class=\"visually-hidden\">Title for screen readers\u003C/h2>\n\u003Ca class=\"visually-hidden-focusable\" href=\"#content\">Skip to main content\u003C/a>\n\u003Cdiv class=\"visually-hidden-focusable\">A container with a \u003Ca href=\"#\">focusable element\u003C/a>.\u003C/div>`} />\n\nBoth `visually-hidden` and `visually-hidden-focusable` can also be used as mixins.\n\n```scss\n// Usage as a mixin\n\n.visually-hidden-title {\n  @include visually-hidden;\n}\n\n.skip-navigation {\n  @include visually-hidden-focusable;\n}\n```","src/content/docs/helpers/visually-hidden.mdx","ad52a33d7a019095","helpers/visually-hidden.mdx","helpers/vertical-rule",{"id":917,"data":919,"body":923,"filePath":924,"digest":925,"legacyId":926,"deferredRender":139},{"added":920,"description":921,"title":922,"toc":139},{"version":499},"Use the custom vertical rule helper to create vertical dividers like the `\u003Chr>` element.","Vertical rule","## How it works\n\nVertical rules are inspired by the `\u003Chr>` element, allowing you to create vertical dividers in common layouts. They're styled just like `\u003Chr>` elements:\n\n- They're `1px` wide\n- They have `min-height` of `1em`\n- Their color is set via `currentColor` and `opacity`\n\nCustomize them with additional styles as needed.\n\n## Example\n\n\u003CExample code={`\u003Cdiv class=\"vr\">\u003C/div>`} />\n\nVertical rules scale their height in flex layouts:\n\n\u003CExample code={`\u003Cdiv class=\"d-flex\" style=\"height: 200px;\">\n  \u003Cdiv class=\"vr\">\u003C/div>\n\u003C/div>`} />\n\n## With stacks\n\nThey can also be used in [stacks]([[docsref:/helpers/stacks]]):\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"hstack gap-3\">\n  \u003Cdiv class=\"p-2\">First item\u003C/div>\n  \u003Cdiv class=\"p-2 ms-auto\">Second item\u003C/div>\n  \u003Cdiv class=\"vr\">\u003C/div>\n  \u003Cdiv class=\"p-2\">Third item\u003C/div>\n\u003C/div>`} />\n\n## CSS\n\n### Sass variables\n\nCustomize the vertical rule Sass variable to change its width.\n\n\u003CScssDocs name=\"vr-variables\" file=\"scss/_variables.scss\" />","src/content/docs/helpers/vertical-rule.mdx","2cd5ea2f87727263","helpers/vertical-rule.mdx","layout/breakpoints",{"id":927,"data":929,"body":933,"filePath":934,"digest":935,"legacyId":936,"deferredRender":139},{"aliases":930,"description":931,"title":932,"toc":139},"/docs/[[config:docs_version]]/layout/","Breakpoints are customizable widths that determine how your responsive layout behaves across device or viewport sizes in Bootstrap.","Breakpoints","## Core concepts\n\n- **Breakpoints are the building blocks of responsive design.** Use them to control when your layout can be adapted at a particular viewport or device size.\n\n- **Use media queries to architect your CSS by breakpoint.** Media queries are a feature of CSS that allow you to conditionally apply styles based on a set of browser and operating system parameters. We most commonly use `min-width` in our media queries.\n\n- **Mobile first, responsive design is the goal.** Bootstrap's CSS aims to apply the bare minimum of styles to make a layout work at the smallest breakpoint, and then layers on styles to adjust that design for larger devices. This optimizes your CSS, improves rendering time, and provides a great experience for your visitors.\n\n## Available breakpoints\n\nBootstrap includes six default breakpoints, sometimes referred to as _grid tiers_, for building responsively. These breakpoints can be customized if you're using our source Sass files.\n\n\u003CBsTable>\n| Breakpoint | Class infix | Dimensions |\n| --- | --- | --- |\n| Extra small | \u003Cem>None\u003C/em> |&lt;576px |\n| Small | `sm` | &ge;576px |\n| Medium | `md` | &ge;768px |\n| Large | `lg` | &ge;992px |\n| Extra large | `xl` | &ge;1200px |\n| Extra extra large | `xxl` | &ge;1400px |\n\u003C/BsTable>\n\n\nEach breakpoint was chosen to comfortably hold containers whose widths are multiples of 12. Breakpoints are also representative of a subset of common device sizes and viewport dimensions—they don't specifically target every use case or device. Instead, the ranges provide a strong and consistent foundation to build on for nearly any device.\n\nThese breakpoints are customizable via Sass—you'll find them in a Sass map in our `_variables.scss` stylesheet.\n\n\u003CScssDocs name=\"grid-breakpoints\" file=\"scss/_variables.scss\" />\n\nFor more information and examples on how to modify our Sass maps and variables, please refer to [the CSS section of the Grid documentation]([[docsref:/layout/grid#css]]).\n\n## Media queries\n\nSince Bootstrap is developed to be mobile first, we use a handful of [media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries) to create sensible breakpoints for our layouts and interfaces. These breakpoints are mostly based on minimum viewport widths and allow us to scale up elements as the viewport changes.\n\n### Min-width\n\nBootstrap primarily uses the following media query ranges—or breakpoints—in our source Sass files for our layout, grid system, and components.\n\n```scss\n// Source mixins\n\n// No media query necessary for xs breakpoint as it's effectively `@media (min-width: 0) { ... }`\n@include media-breakpoint-up(sm) { ... }\n@include media-breakpoint-up(md) { ... }\n@include media-breakpoint-up(lg) { ... }\n@include media-breakpoint-up(xl) { ... }\n@include media-breakpoint-up(xxl) { ... }\n\n// Usage\n\n// Example: Hide starting at `min-width: 0`, and then show at the `sm` breakpoint\n.custom-class {\n  display: none;\n}\n@include media-breakpoint-up(sm) {\n  .custom-class {\n    display: block;\n  }\n}\n```\n\nThese Sass mixins translate in our compiled CSS using the values declared in our Sass variables. For example:\n\n```scss\n// X-Small devices (portrait phones, less than 576px)\n// No media query for `xs` since this is the default in Bootstrap\n\n// Small devices (landscape phones, 576px and up)\n@media (min-width: 576px) { ... }\n\n// Medium devices (tablets, 768px and up)\n@media (min-width: 768px) { ... }\n\n// Large devices (desktops, 992px and up)\n@media (min-width: 992px) { ... }\n\n// X-Large devices (large desktops, 1200px and up)\n@media (min-width: 1200px) { ... }\n\n// XX-Large devices (larger desktops, 1400px and up)\n@media (min-width: 1400px) { ... }\n```\n\n### Max-width\n\nWe occasionally use media queries that go in the other direction (the given screen size _or smaller_):\n\n```scss\n// No media query necessary for xs breakpoint as it's effectively `@media (max-width: 0) { ... }`\n@include media-breakpoint-down(sm) { ... }\n@include media-breakpoint-down(md) { ... }\n@include media-breakpoint-down(lg) { ... }\n@include media-breakpoint-down(xl) { ... }\n@include media-breakpoint-down(xxl) { ... }\n\n// Example: Style from medium breakpoint and down\n@include media-breakpoint-down(md) {\n  .custom-class {\n    display: block;\n  }\n}\n```\n\nThese mixins take those declared breakpoints, subtract `.02px` from them, and use them as our `max-width` values. For example:\n\n```scss\n// `xs` returns only a ruleset and no media query\n// ... { ... }\n\n// `sm` applies to x-small devices (portrait phones, less than 576px)\n@media (max-width: 575.98px) { ... }\n\n// `md` applies to small devices (landscape phones, less than 768px)\n@media (max-width: 767.98px) { ... }\n\n// `lg` applies to medium devices (tablets, less than 992px)\n@media (max-width: 991.98px) { ... }\n\n// `xl` applies to large devices (desktops, less than 1200px)\n@media (max-width: 1199.98px) { ... }\n\n// `xxl` applies to x-large devices (large desktops, less than 1400px)\n@media (max-width: 1399.98px) { ... }\n```\n\n\u003CCallout name=\"info-mediaqueries-breakpoints\" type=\"warning\" />\n\n### Single breakpoint\n\nThere are also media queries and mixins for targeting a single segment of screen sizes using the minimum and maximum breakpoint widths.\n\n```scss\n@include media-breakpoint-only(xs) { ... }\n@include media-breakpoint-only(sm) { ... }\n@include media-breakpoint-only(md) { ... }\n@include media-breakpoint-only(lg) { ... }\n@include media-breakpoint-only(xl) { ... }\n@include media-breakpoint-only(xxl) { ... }\n```\n\nFor example the `@include media-breakpoint-only(md) { ... }` will result in :\n\n```scss\n@media (min-width: 768px) and (max-width: 991.98px) { ... }\n```\n\n### Between breakpoints\n\nSimilarly, media queries may span multiple breakpoint widths:\n\n```scss\n@include media-breakpoint-between(md, xl) { ... }\n```\n\nWhich results in:\n\n```scss\n// Example\n// Apply styles starting from medium devices and up to extra large devices\n@media (min-width: 768px) and (max-width: 1199.98px) { ... }\n```","src/content/docs/layout/breakpoints.mdx","dc7987c35c544d2f","layout/breakpoints.mdx","layout/containers",{"id":937,"data":939,"body":942,"filePath":943,"digest":944,"legacyId":945,"deferredRender":139},{"description":940,"title":941,"toc":139},"Containers are a fundamental building block of Bootstrap that contain, pad, and align your content within a given device or viewport.","Containers","## How they work\n\nContainers are the most basic layout element in Bootstrap and are **required when using our default grid system**. Containers are used to contain, pad, and (sometimes) center the content within them. While containers *can* be nested, most layouts do not require a nested container.\n\nBootstrap comes with three different containers:\n\n- `.container`, which sets a `max-width` at each responsive breakpoint\n- `.container-{breakpoint}`, which is `width: 100%` until the specified breakpoint\n- `.container-fluid`, which is `width: 100%` at all breakpoints\n\nThe table below illustrates how each container's `max-width` compares to the original `.container` and `.container-fluid` across each breakpoint.\n\nSee them in action and compare them in our [Grid example]([[docsref:/examples/grid#containers]]).\n\n\u003CBsTable>\n|  | Extra small\u003Cdiv class=\"fw-normal\">&lt;576px\u003C/div> | Small\u003Cdiv class=\"fw-normal\">&ge;576px\u003C/div> | Medium\u003Cdiv class=\"fw-normal\">&ge;768px\u003C/div> | Large\u003Cdiv class=\"fw-normal\">&ge;992px\u003C/div> | X-Large\u003Cdiv class=\"fw-normal\">&ge;1200px\u003C/div> | XX-Large\u003Cdiv class=\"fw-normal\">&ge;1400px\u003C/div> |\n| --- | --- | --- | --- | --- | --- | --- |\n| `.container` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | 540px | 720px | 960px | 1140px | 1320px |\n| `.container-sm` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | 540px | 720px | 960px | 1140px | 1320px |\n| `.container-md` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | 720px | 960px | 1140px | 1320px |\n| `.container-lg` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | 960px | 1140px | 1320px |\n| `.container-xl` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | 1140px | 1320px |\n| `.container-xxl` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | 1320px |\n| `.container-fluid` | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> | \u003Cspan class=\"text-body-secondary\">100%\u003C/span> |\n\u003C/BsTable>\n\n## Default container\n\nOur default `.container` class is a responsive, fixed-width container, meaning its `max-width` changes at each breakpoint.\n\n```html\n\u003Cdiv class=\"container\">\n  \u003C!-- Content here -->\n\u003C/div>\n```\n\n## Responsive containers\n\nResponsive containers allow you to specify a class that is 100% wide until the specified breakpoint is reached, after which we apply `max-width`s for each of the higher breakpoints. For example, `.container-sm` is 100% wide to start until the `sm` breakpoint is reached, where it will scale up with `md`, `lg`, `xl`, and `xxl`.\n\n```html\n\u003Cdiv class=\"container-sm\">100% wide until small breakpoint\u003C/div>\n\u003Cdiv class=\"container-md\">100% wide until medium breakpoint\u003C/div>\n\u003Cdiv class=\"container-lg\">100% wide until large breakpoint\u003C/div>\n\u003Cdiv class=\"container-xl\">100% wide until extra large breakpoint\u003C/div>\n\u003Cdiv class=\"container-xxl\">100% wide until extra extra large breakpoint\u003C/div>\n```\n\n## Fluid containers\n\nUse `.container-fluid` for a full width container, spanning the entire width of the viewport.\n\n```html\n\u003Cdiv class=\"container-fluid\">\n  ...\n\u003C/div>\n```\n\n## CSS\n\n### Sass variables\n\nAs shown above, Bootstrap generates a series of predefined container classes to help you build the layouts you desire. You may customize these predefined container classes by modifying the Sass map (found in `_variables.scss`) that powers them:\n\nFor more information and examples on how to modify our Sass maps and variables, please refer to [the CSS section of the Grid documentation]([[docsref:/layout/grid#css]]).\n\n### Sass mixins\n\n\u003CScssDocs name=\"container-max-widths\" file=\"scss/_variables.scss\" />\n\nIn addition to customizing the Sass, you can also create your own containers with our Sass mixin.\n\n```scss\n// Source mixin\n@mixin make-container($padding-x: $container-padding-x) {\n  width: 100%;\n  padding-right: $padding-x;\n  padding-left: $padding-x;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n// Usage\n.custom-container {\n  @include make-container();\n}\n```","src/content/docs/layout/containers.mdx","10b2f26ad50e3244","layout/containers.mdx","layout/columns",{"id":946,"data":948,"body":951,"filePath":952,"digest":953,"legacyId":954,"deferredRender":139},{"description":949,"title":950,"toc":139},"Learn how to modify columns with a handful of options for alignment, ordering, and offsetting thanks to our flexbox grid system. Plus, see how to use column classes to manage widths of non-grid elements.","Columns","\u003CCallout>\n**Heads up!** Be sure to [read the Grid page]([[docsref:/layout/grid]]) first before diving into how to modify and customize your grid columns.\n\u003C/Callout>\n\n## How they work\n\n- **Columns build on the grid's flexbox architecture.** Flexbox means we have options for changing individual columns and [modifying groups of columns at the row level]([[docsref:/layout/grid#row-columns]]). You choose how columns grow, shrink, or otherwise change.\n\n- **When building grid layouts, all content goes in columns.** The hierarchy of Bootstrap's grid goes from [container]([[docsref:/layout/containers]]) to row to column to your content. On rare occasions, you may combine content and column, but be aware there can be unintended consequences.\n\n- **Bootstrap includes predefined classes for creating fast, responsive layouts.** With [six breakpoints]([[docsref:/layout/breakpoints]]) and a dozen columns at each grid tier, we have dozens of classes already built for you to create your desired layouts. This can be disabled via Sass if you wish.\n\n## Alignment\n\nUse flexbox alignment utilities to vertically and horizontally align columns.\n\n### Vertical alignment\n\nChange the vertical alignment with any of the responsive `align-items-*` classes.\n\n\u003CExample class=\"bd-example-row bd-example-row-flex-cols\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row align-items-start\">\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row bd-example-row-flex-cols\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row align-items-center\">\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row bd-example-row-flex-cols\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row align-items-end\">\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      One of three columns\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nOr, change the alignment of each column individually with any of the responsive `.align-self-*` classes.\n\n\u003CExample class=\"bd-example-row bd-example-row-flex-cols\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col align-self-start\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col align-self-center\">\n      One of three columns\n    \u003C/div>\n    \u003Cdiv class=\"col align-self-end\">\n      One of three columns\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Horizontal alignment\n\nChange the horizontal alignment with any of the responsive `justify-content-*` classes.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row justify-content-start\">\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row justify-content-center\">\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row justify-content-end\">\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row justify-content-around\">\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row justify-content-between\">\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row justify-content-evenly\">\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n    \u003Cdiv class=\"col-4\">\n      One of two columns\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Column wrapping\n\nIf more than 12 columns are placed within a single row, each group of extra columns will, as one unit, wrap onto a new line.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-9\">.col-9\u003C/div>\n    \u003Cdiv class=\"col-4\">.col-4\u003Cbr>Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit.\u003C/div>\n    \u003Cdiv class=\"col-6\">.col-6\u003Cbr>Subsequent columns continue along the new line.\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Column breaks\n\nBreaking columns to a new line in flexbox requires a small hack: add an element with `width: 100%` wherever you want to wrap your columns to a new line. Normally this is accomplished with multiple `.row`s, but not every implementation method can account for this.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-6 col-sm-3\">.col-6 .col-sm-3\u003C/div>\n    \u003Cdiv class=\"col-6 col-sm-3\">.col-6 .col-sm-3\u003C/div>\n\n    \u003C!-- Force next columns to break to new line -->\n    \u003Cdiv class=\"w-100\">\u003C/div>\n\n    \u003Cdiv class=\"col-6 col-sm-3\">.col-6 .col-sm-3\u003C/div>\n    \u003Cdiv class=\"col-6 col-sm-3\">.col-6 .col-sm-3\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nYou may also apply this break at specific breakpoints with our [responsive display utilities]([[docsref:/utilities/display]]).\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-6 col-sm-4\">.col-6 .col-sm-4\u003C/div>\n    \u003Cdiv class=\"col-6 col-sm-4\">.col-6 .col-sm-4\u003C/div>\n\n    \u003C!-- Force next columns to break to new line at md breakpoint and up -->\n    \u003Cdiv class=\"w-100 d-none d-md-block\">\u003C/div>\n\n    \u003Cdiv class=\"col-6 col-sm-4\">.col-6 .col-sm-4\u003C/div>\n    \u003Cdiv class=\"col-6 col-sm-4\">.col-6 .col-sm-4\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Reordering\n\n### Order classes\n\nUse `.order-` classes for controlling the **visual order** of your content. These classes are responsive, so you can set the `order` by breakpoint (e.g., `.order-1.order-md-2`). Includes support for `1` through `5` across all six grid tiers.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      First in DOM, no order applied\n    \u003C/div>\n    \u003Cdiv class=\"col order-5\">\n      Second in DOM, with a larger order\n    \u003C/div>\n    \u003Cdiv class=\"col order-1\">\n      Third in DOM, with an order of 1\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nThere are also responsive `.order-first` and `.order-last` classes that change the `order` of an element by applying `order: -1` and `order: 6`, respectively. These classes can also be intermixed with the numbered `.order-*` classes as needed.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col order-last\">\n      First in DOM, ordered last\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      Second in DOM, unordered\n    \u003C/div>\n    \u003Cdiv class=\"col order-first\">\n      Third in DOM, ordered first\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\nIf you need more `.order-*` classes, you can add new ones by modifying our `$utilities` Sass map. [Read our Sass maps and loops docs]([[docsref:/customize/sass#maps-and-loops]]) or [our Modify utilities docs]([[docsref:/utilities/api#modify-utilities]]) for details.\n\n```scss\n$utilities: map-merge(\n  $utilities,\n  (\n    \"order\": map-merge(\n      map-get($utilities, \"order\"),\n      (\n        values: map-merge(\n          map-get(map-get($utilities, \"order\"), \"values\"),\n          (\n            6: 6, // Add a new `.order-{breakpoint}-6` utility\n            last: 7 // Change the `.order-{breakpoint}-last` utility to use the next number\n          )\n        ),\n      ),\n    ),\n  )\n);\n```\n\n### Offsetting columns\n\nYou can offset grid columns in two ways: our responsive `.offset-` grid classes and our [margin utilities]([[docsref:/utilities/spacing]]). Grid classes are sized to match columns while margins are more useful for quick layouts where the width of the offset is variable.\n\n#### Offset classes\n\nMove columns to the right using `.offset-md-*` classes. These classes increase the left margin of a column by `*` columns. For example, `.offset-md-4` moves `.col-md-4` over four columns.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-md-4\">.col-md-4\u003C/div>\n    \u003Cdiv class=\"col-md-4 offset-md-4\">.col-md-4 .offset-md-4\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-md-3 offset-md-3\">.col-md-3 .offset-md-3\u003C/div>\n    \u003Cdiv class=\"col-md-3 offset-md-3\">.col-md-3 .offset-md-3\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-md-6 offset-md-3\">.col-md-6 .offset-md-3\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nIn addition to column clearing at responsive breakpoints, you may need to reset offsets. See this in action in [the grid example]([[docsref:/examples/grid]]).\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-sm-5 col-md-6\">.col-sm-5 .col-md-6\u003C/div>\n    \u003Cdiv class=\"col-sm-5 offset-sm-2 col-md-6 offset-md-0\">.col-sm-5 .offset-sm-2 .col-md-6 .offset-md-0\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-sm-6 col-md-5 col-lg-6\">.col-sm-6 .col-md-5 .col-lg-6\u003C/div>\n    \u003Cdiv class=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0\">.col-sm-6 .col-md-5 .offset-md-2 .col-lg-6 .offset-lg-0\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n#### Margin utilities\n\nWith the move to flexbox in v4, you can use margin utilities like `.me-auto` to force sibling columns away from one another.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-md-4\">.col-md-4\u003C/div>\n    \u003Cdiv class=\"col-md-4 ms-auto\">.col-md-4 .ms-auto\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-md-3 ms-md-auto\">.col-md-3 .ms-md-auto\u003C/div>\n    \u003Cdiv class=\"col-md-3 ms-md-auto\">.col-md-3 .ms-md-auto\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-auto me-auto\">.col-auto .me-auto\u003C/div>\n    \u003Cdiv class=\"col-auto\">.col-auto\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Standalone column classes\n\nThe `.col-*` classes can also be used outside a `.row` to give an element a specific width. Whenever column classes are used as non-direct children of a row, the paddings are omitted.\n\n\u003CExample class=\"bd-example-row\" code={`\n\u003Cdiv class=\"col-3 p-3 mb-2\">\n  .col-3: width of 25%\n\u003C/div>\n\n\u003Cdiv class=\"col-sm-9 p-3\">\n  .col-sm-9: width of 75% above sm breakpoint\n\u003C/div>`} />\n\nThe classes can be used together with utilities to create responsive floated images. Make sure to wrap the content in a [`.clearfix`]([[docsref:/helpers/clearfix]]) wrapper to clear the float if the text is shorter.\n\n\u003CExample code={`\u003Cdiv class=\"clearfix\">\n  \u003CPlaceholder width=\"100%\" height=\"210\" class=\"col-md-6 float-md-end mb-3 ms-md-3\" text=\"Responsive floated image\" />\n\n  \u003Cp>\n    A paragraph of placeholder text. We're using it here to show the use of the clearfix class. We're adding quite a few meaningless phrases here to demonstrate how the columns interact here with the floated image.\n  \u003C/p>\n\n  \u003Cp>\n    As you can see the paragraphs gracefully wrap around the floated image. Now imagine how this would look with some actual content in here, rather than just this boring placeholder text that goes on and on, but actually conveys no tangible information at. It simply takes up space and should not really be read.\n  \u003C/p>\n\n  \u003Cp>\n    And yet, here you are, still persevering in reading this placeholder text, hoping for some more insights, or some hidden easter egg of content. A joke, perhaps. Unfortunately, there's none of that here.\n  \u003C/p>\n\u003C/div>`} />","src/content/docs/layout/columns.mdx","267bb72987235133","layout/columns.mdx","layout/css-grid",{"id":955,"data":957,"body":961,"filePath":962,"digest":963,"legacyId":964,"deferredRender":139},{"added":958,"description":959,"title":960,"toc":139},{"version":499},"Learn how to enable, use, and customize our alternate layout system built on CSS Grid with examples and code snippets.","CSS Grid","Bootstrap's default grid system represents the culmination of over a decade of CSS layout techniques, tried and tested by millions of people. But, it was also created without many of the modern CSS features and techniques we're seeing in browsers like the new CSS Grid.\n\n\u003CCallout type=\"warning\">\n**Heads up—our CSS Grid system is experimental and opt-in as of v5.1.0!** We included it in our documentation's CSS to demonstrate it for you, but it's disabled by default. Keep reading to learn how to enable it in your projects.\n\u003C/Callout>\n\n## How it works\n\nWith Bootstrap 5, we've added the option to enable a separate grid system that's built on CSS Grid, but with a Bootstrap twist. You still get classes you can apply on a whim to build responsive layouts, but with a different approach under the hood.\n\n- **CSS Grid is opt-in.** Disable the default grid system by setting `$enable-grid-classes: false` and enable the CSS Grid by setting `$enable-cssgrid: true`. Then, recompile your Sass.\n\n- **Replace instances of `.row` with `.grid`.** The `.grid` class sets `display: grid` and creates a `grid-template` that you build on with your HTML.\n\n- **Replace `.col-*` classes with `.g-col-*` classes.** This is because our CSS Grid columns use the `grid-column` property instead of `width`.\n\n- **Columns and gutter sizes are set via CSS variables.** Set these on the parent `.grid` and customize however you want, inline or in a stylesheet, with `--bs-columns` and `--bs-gap`.\n\nIn the future, Bootstrap will likely shift to a hybrid solution as the `gap` property has achieved nearly full browser support for flexbox.\n\n## Key differences\n\nCompared to the default grid system:\n\n- Flex utilities don't affect the CSS Grid columns in the same way.\n\n- Gaps replaces gutters. The `gap` property replaces the horizontal `padding` from our default grid system and functions more like `margin`.\n\n- As such, unlike `.row`s, `.grid`s have no negative margins and margin utilities cannot be used to change the grid gutters. Grid gaps are applied horizontally and vertically by default. See the [customizing section](#customizing) for more details.\n\n- Inline and custom styles should be viewed as replacements for modifier classes (e.g., `style=\"--bs-columns: 3;\"` vs `class=\"row-cols-3\"`).\n\n- Nesting works similarly, but may require you to reset your column counts on each instance of a nested `.grid`. See the [nesting section](#nesting) for details.\n\n## Examples\n\n### Three columns\n\nThree equal-width columns across all viewports and devices can be created by using the `.g-col-4` classes. Add [responsive classes](#responsive) to change the layout by viewport size.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv class=\"g-col-4\">.g-col-4\u003C/div>\n  \u003Cdiv class=\"g-col-4\">.g-col-4\u003C/div>\n  \u003Cdiv class=\"g-col-4\">.g-col-4\u003C/div>\n\u003C/div>`} />\n\n### Responsive\n\nUse responsive classes to adjust your layout across viewports. Here we start with two columns on the narrowest viewports, and then grow to three columns on medium viewports and above.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv class=\"g-col-6 g-col-md-4\">.g-col-6 .g-col-md-4\u003C/div>\n  \u003Cdiv class=\"g-col-6 g-col-md-4\">.g-col-6 .g-col-md-4\u003C/div>\n  \u003Cdiv class=\"g-col-6 g-col-md-4\">.g-col-6 .g-col-md-4\u003C/div>\n\u003C/div>`} />\n\nCompare that to this two column layout at all viewports.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\u003C/div>`} />\n\n## Wrapping\n\nGrid items automatically wrap to the next line when there's no more room horizontally. Note that the `gap` applies to horizontal and vertical gaps between grid items.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\u003C/div>`} />\n\n## Starts\n\nStart classes aim to replace our default grid's offset classes, but they're not entirely the same. CSS Grid creates a grid template through styles that tell browsers to \"start at this column\" and \"end at this column.\" Those properties are `grid-column-start` and `grid-column-end`. Start classes are shorthand for the former. Pair them with the column classes to size and align your columns however you need. Start classes begin at `1` as `0` is an invalid value for these properties.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv class=\"g-col-3 g-start-2\">.g-col-3 .g-start-2\u003C/div>\n  \u003Cdiv class=\"g-col-4 g-start-6\">.g-col-4 .g-start-6\u003C/div>\n\u003C/div>`} />\n\n## Auto columns\n\nWhen there are no classes on the grid items (the immediate children of a `.grid`), each grid item will automatically be sized to one column.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n\u003C/div>`} />\n\nThis behavior can be mixed with grid column classes.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\">\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n  \u003Cdiv>1\u003C/div>\n\u003C/div>`} />\n\n## Nesting\n\nSimilar to our default grid system, our CSS Grid allows for easy nesting of `.grid`s. However, unlike the default, this grid inherits changes in the rows, columns, and gaps. Consider the example below:\n\n- We override the default number of columns with a local CSS variable: `--bs-columns: 3`.\n- In the first auto-column, the column count is inherited and each column is one-third of the available width.\n- In the second auto-column, we've reset the column count on the nested `.grid` to 12 (our default).\n- The third auto-column has no nested content.\n\nIn practice this allows for more complex and custom layouts when compared to our default grid system.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center overflow-x-auto\" style=\"--bs-columns: 3;\">\n  \u003Cdiv>\n    First auto-column\n    \u003Cdiv class=\"grid\">\n      \u003Cdiv>Auto-column\u003C/div>\n      \u003Cdiv>Auto-column\u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv>\n    Second auto-column\n    \u003Cdiv class=\"grid\" style=\"--bs-columns: 12;\">\n      \u003Cdiv class=\"g-col-6\">6 of 12\u003C/div>\n      \u003Cdiv class=\"g-col-4\">4 of 12\u003C/div>\n      \u003Cdiv class=\"g-col-2\">2 of 12\u003C/div>\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv>Third auto-column\u003C/div>\n\u003C/div>`} />\n\n## Customizing\n\nCustomize the number of columns, the number of rows, and the width of the gaps with local CSS variables.\n\n\u003CBsTable>\n| Variable | Fallback value | Description |\n| --- | --- | --- |\n| `--bs-rows` | `1` | The number of rows in your grid template |\n| `--bs-columns` | `12` | The number of columns in your grid template |\n| `--bs-gap` | `1.5rem` | The size of the gap between columns (vertical and horizontal) |\n\u003C/BsTable>\n\nThese CSS variables have no default value; instead, they apply fallback values that are used _until_ a local instance is provided. For example, we use `var(--bs-rows, 1)` for our CSS Grid rows, which ignores `--bs-rows` because that hasn't been set anywhere yet. Once it is, the `.grid` instance will use that value instead of the fallback value of `1`.\n\n### No grid classes\n\nImmediate children elements of `.grid` are grid items, so they'll be sized without explicitly adding a `.g-col` class.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"--bs-columns: 3;\">\n  \u003Cdiv>Auto-column\u003C/div>\n  \u003Cdiv>Auto-column\u003C/div>\n  \u003Cdiv>Auto-column\u003C/div>\n\u003C/div>`} />\n\n### Columns and gaps\n\nAdjust the number of columns and the gap.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"--bs-columns: 4; --bs-gap: 5rem;\">\n  \u003Cdiv class=\"g-col-2\">.g-col-2\u003C/div>\n  \u003Cdiv class=\"g-col-2\">.g-col-2\u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"--bs-columns: 10; --bs-gap: 1rem;\">\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-4\">.g-col-4\u003C/div>\n\u003C/div>`} />\n\n### Adding rows\n\nAdding more rows and changing the placement of columns:\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"--bs-rows: 3; --bs-columns: 3;\">\n  \u003Cdiv>Auto-column\u003C/div>\n  \u003Cdiv class=\"g-start-2\" style=\"grid-row: 2\">Auto-column\u003C/div>\n  \u003Cdiv class=\"g-start-3\" style=\"grid-row: 3\">Auto-column\u003C/div>\n\u003C/div>`} />\n\n### Gaps\n\nChange the vertical gaps only by modifying the `row-gap`. Note that we use `gap` on `.grid`s, but `row-gap` and `column-gap` can be modified as needed.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"row-gap: 0;\">\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\u003C/div>`} />\n\nBecause of that, you can have different vertical and horizontal `gap`s, which can take a single value (all sides) or a pair of values (vertical and horizontal). This can be applied with an inline style for `gap`, or with our `--bs-gap` CSS variable.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"--bs-gap: .25rem 1rem;\">\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n  \u003Cdiv class=\"g-col-6\">.g-col-6\u003C/div>\n\u003C/div>`} />\n\n## Sass\n\nOne limitation of the CSS Grid is that our default classes are still generated by two Sass variables, `$grid-columns` and `$grid-gutter-width`. This effectively predetermines the number of classes generated in our compiled CSS. You have two options here:\n\n- Modify those default Sass variables and recompile your CSS.\n- Use inline or custom styles to augment the provided classes.\n\nFor example, you can increase the column count and change the gap size, and then size your \"columns\" with a mix of inline styles and predefined CSS Grid column classes (e.g., `.g-col-4`).\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv class=\"grid text-center\" style=\"--bs-columns: 18; --bs-gap: .5rem;\">\n  \u003Cdiv style=\"grid-column: span 14;\">14 columns\u003C/div>\n  \u003Cdiv class=\"g-col-4\">.g-col-4\u003C/div>\n\u003C/div>`} />","src/content/docs/layout/css-grid.mdx","4abedb7a4fa352a0","layout/css-grid.mdx","layout/gutters",{"id":965,"data":967,"body":970,"filePath":971,"digest":972,"legacyId":973,"deferredRender":139},{"description":968,"title":969,"toc":139},"Gutters are the padding between your columns, used to responsively space and align content in the Bootstrap grid system.","Gutters","## How they work\n\n- **Gutters are the gaps between column content, created by horizontal `padding`.** We set `padding-right` and `padding-left` on each column, and use negative `margin` to offset that at the start and end of each row to align content.\n\n- **Gutters start at `1.5rem` (`24px`) wide.** This allows us to match our grid to the [padding and margin spacers]([[docsref:/utilities/spacing]]) scale.\n\n- **Gutters can be responsively adjusted.** Use breakpoint-specific gutter classes to modify horizontal gutters, vertical gutters, and all gutters.\n\n## Horizontal gutters\n\n`.gx-*` classes can be used to control the horizontal gutter widths. The `.container` or `.container-fluid` parent may need to be adjusted if larger gutters are used too to avoid unwanted overflow, using a matching padding utility. For example, in the following example we've increased the padding with `.px-4`:\n\n\u003CExample class=\"bd-example-cols\" code={`\u003Cdiv class=\"container px-4 text-center\">\n  \u003Cdiv class=\"row gx-5\">\n    \u003Cdiv class=\"col\">\n     \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nAn alternative solution is to add a wrapper around the `.row` with the `.overflow-hidden` class:\n\n\u003CExample class=\"bd-example-cols\" code={`\u003Cdiv class=\"container overflow-hidden text-center\">\n  \u003Cdiv class=\"row gx-5\">\n    \u003Cdiv class=\"col\">\n     \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Vertical gutters\n\n`.gy-*` classes can be used to control the vertical gutter widths within a row when columns wrap to new lines. Like the horizontal gutters, the vertical gutters can cause some overflow below the `.row` at the end of a page. If this occurs, you add a wrapper around `.row` with the `.overflow-hidden` class:\n\n\u003CExample class=\"bd-example-cols\" code={`\u003Cdiv class=\"container overflow-hidden text-center\">\n  \u003Cdiv class=\"row gy-5\">\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Horizontal & vertical gutters\n\nUse `.g-*` classes to control the horizontal and vertical grid gutters. In the example below, we use a smaller gutter width, so there isn't a need for the `.overflow-hidden` wrapper class.\n\n\u003CExample class=\"bd-example-cols\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row g-2\">\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      \u003Cdiv class=\"p-3\">Custom column padding\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Row columns gutters\n\nGutter classes can also be added to [row columns]([[docsref:/layout/grid#row-columns]]). In the following example, we use responsive row columns and responsive gutter classes.\n\n\u003CExample class=\"bd-example-cols\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-2 row-cols-lg-5 g-2 g-lg-3\">\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      \u003Cdiv class=\"p-3\">Row column\u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## No gutters\n\nThe gutters between columns in our predefined grid classes can be removed with `.g-0`. This removes the negative `margin`s from `.row` and the horizontal `padding` from all immediate children columns.\n\n**Need an edge-to-edge design?** Drop the parent `.container` or `.container-fluid` and add `.mx-0` to the `.row` to prevent overflow.\n\nIn practice, here's how it looks. Note that you can continue to use this with all other predefined grid classes (including column widths, responsive tiers, reorders, and more).\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"row g-0 text-center\">\n  \u003Cdiv class=\"col-sm-6 col-md-8\">.col-sm-6 .col-md-8\u003C/div>\n  \u003Cdiv class=\"col-6 col-md-4\">.col-6 .col-md-4\u003C/div>\n\u003C/div>`} />\n\n## Change the gutters\n\nClasses are built from the `$gutters` Sass map which is inherited from the `$spacers` Sass map.\n\n```scss\n$grid-gutter-width: 1.5rem;\n$gutters: (\n  0: 0,\n  1: $spacer * .25,\n  2: $spacer * .5,\n  3: $spacer,\n  4: $spacer * 1.5,\n  5: $spacer * 3,\n);\n```","src/content/docs/layout/gutters.mdx","67c02754be207a7c","layout/gutters.mdx","layout/z-index",{"id":974,"data":976,"body":979,"filePath":980,"digest":981,"legacyId":982,"deferredRender":139},{"description":977,"title":978},"While not a part of Bootstrap's grid system, z-indexes play an important part in how our components overlay and interact with one another.","Z-index","Several Bootstrap components utilize `z-index`, the CSS property that helps control layout by providing a third axis to arrange content. We utilize a default z-index scale in Bootstrap that's been designed to properly layer navigation, tooltips and popovers, modals, and more.\n\nThese higher values start at an arbitrary number, high and specific enough to ideally avoid conflicts. We need a standard set of these across our layered components—tooltips, popovers, navbars, dropdowns, modals—so we can be reasonably consistent in the behaviors. There's no reason we couldn't have used `100`+ or `500`+.\n\nWe don't encourage customization of these individual values; should you change one, you likely need to change them all.\n\n\u003CScssDocs name=\"zindex-stack\" file=\"scss/_variables.scss\" />\n\nTo handle overlapping borders within components (e.g., buttons and inputs in input groups), we use low single digit `z-index` values of `1`, `2`, and `3` for default, hover, and active states. On hover/focus/active, we bring a particular element to the forefront with a higher `z-index` value to show their border over the sibling elements.","src/content/docs/layout/z-index.mdx","42bc5a07c2236618","layout/z-index.mdx","layout/utilities",{"id":983,"data":985,"body":988,"filePath":989,"digest":990,"legacyId":991,"deferredRender":139},{"description":986,"title":987,"toc":139},"For faster mobile-friendly and responsive development, Bootstrap includes dozens of utility classes for showing, hiding, aligning, and spacing content.","Utilities for layout","## Changing `display`\n\nUse our [display utilities]([[docsref:/utilities/display]]) for responsively toggling common values of the `display` property. Mix it with our grid system, content, or components to show or hide them across specific viewports.\n\n## Flexbox options\n\nBootstrap is built with flexbox, but not every element's `display` has been changed to `display: flex` as this would add many unnecessary overrides and unexpectedly change key browser behaviors. Most of [our components]([[docsref:/components/alerts]]) are built with flexbox enabled.\n\nShould you need to add `display: flex` to an element, do so with `.d-flex` or one of the responsive variants (e.g., `.d-sm-flex`). You'll need this class or `display` value to allow the use of our extra [flexbox utilities]([[docsref:/utilities/flex]]) for sizing, alignment, spacing, and more.\n\n## Margin and padding\n\nUse the `margin` and `padding` [spacing utilities]([[docsref:/utilities/spacing]]) to control how elements and components are spaced and sized. Bootstrap includes a six-level scale for spacing utilities, based on a `1rem` value default `$spacer` variable. Choose values for all viewports (e.g., `.me-3` for `margin-right: 1rem` in LTR), or pick responsive variants to target specific viewports (e.g., `.me-md-3` for `margin-right: 1rem` —in LTR— starting at the `md` breakpoint).\n\n## Toggle `visibility`\n\nWhen toggling `display` isn't needed, you can toggle the `visibility` of an element with our [visibility utilities]([[docsref:/utilities/visibility]]). Invisible elements will still affect the layout of the page, but are visually hidden from visitors.","src/content/docs/layout/utilities.mdx","d3b766794b91fcf2","layout/utilities.mdx","layout/grid",{"id":992,"data":994,"body":997,"filePath":998,"digest":999,"legacyId":1000,"deferredRender":139},{"description":995,"title":996,"toc":139},"Use our powerful mobile-first flexbox grid to build layouts of all shapes and sizes thanks to a twelve column system, six default responsive tiers, Sass variables and mixins, and dozens of predefined classes.","Grid system","## Example\n\nBootstrap's grid system uses a series of containers, rows, and columns to layout and align content. It's built with [flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox) and is fully responsive. Below is an example and an in-depth explanation for how the grid system comes together.\n\n\u003CCallout>\n**New to or unfamiliar with flexbox?** [Read this CSS Tricks flexbox guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background) for background, terminology, guidelines, and code snippets.\n\u003C/Callout>\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      Column\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      Column\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      Column\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nThe above example creates three equal-width columns across all devices and viewports using our predefined grid classes. Those columns are centered in the page with the parent `.container`.\n\n## How it works\n\nBreaking it down, here's how the grid system comes together:\n\n- **Our grid supports [six responsive breakpoints]([[docsref:/layout/breakpoints]]).**  Breakpoints are based on `min-width` media queries, meaning they affect that breakpoint and all those above it (e.g., `.col-sm-4` applies to `sm`, `md`, `lg`, `xl`, and `xxl`). This means you can control container and column sizing and behavior by each breakpoint.\n\n- **Containers center and horizontally pad your content.** Use `.container` for a responsive pixel width, `.container-fluid` for `width: 100%` across all viewports and devices, or a responsive container (e.g., `.container-md`) for a combination of fluid and pixel widths.\n\n- **Rows are wrappers for columns.** Each column has horizontal `padding` (called a gutter) for controlling the space between them. This `padding` is then counteracted on the rows with negative margins to ensure the content in your columns is visually aligned down the left side. Rows also support modifier classes to [uniformly apply column sizing](#row-columns) and [gutter classes]([[docsref:/layout/gutters]]) to change the spacing of your content.\n\n- **Columns are incredibly flexible.** There are 12 template columns available per row, allowing you to create different combinations of elements that span any number of columns. Column classes indicate the number of template columns to span (e.g., `col-4` spans four). `width`s are set in percentages so you always have the same relative sizing.\n\n- **Gutters are also responsive and customizable.** [Gutter classes are available]([[docsref:/layout/gutters]]) across all breakpoints, with all the same sizes as our [margin and padding spacing]([[docsref:/utilities/spacing]]). Change horizontal gutters with `.gx-*` classes, vertical gutters with `.gy-*`, or all gutters with `.g-*` classes. `.g-0` is also available to remove gutters.\n\n- **Sass variables, maps, and mixins power the grid.** If you don't want to use the predefined grid classes in Bootstrap, you can use our [grid's source Sass](#sass-variables) to create your own with more semantic markup. We also include some CSS custom properties to consume these Sass variables for even greater flexibility for you.\n\nBe aware of the limitations and [bugs around flexbox](https://github.com/philipwalton/flexbugs), like the [inability to use some HTML elements as flex containers](https://github.com/philipwalton/flexbugs#flexbug-9).\n\n## Grid options\n\nBootstrap's grid system can adapt across all six default breakpoints, and any breakpoints you customize. The six default grid tiers are as follows:\n\n- Extra small (xs)\n- Small (sm)\n- Medium (md)\n- Large (lg)\n- Extra large (xl)\n- Extra extra large (xxl)\n\nAs noted above, each of these breakpoints have their own container, unique class prefix, and modifiers. Here's how the grid changes across these breakpoints:\n\n\u003Cdiv class=\"table-responsive\">\n  \u003Ctable class=\"table mb-4\">\n    \u003Cthead>\n      \u003Ctr>\n        \u003Cth scope=\"col\">\u003C/th>\n        \u003Cth scope=\"col\">\n          xs\u003Cbr/>\n          \u003Cspan class=\"fw-normal\">&lt;576px\u003C/span>\n        \u003C/th>\n        \u003Cth scope=\"col\">\n          sm\u003Cbr/>\n          \u003Cspan class=\"fw-normal\">&ge;576px\u003C/span>\n        \u003C/th>\n        \u003Cth scope=\"col\">\n          md\u003Cbr/>\n          \u003Cspan class=\"fw-normal\">&ge;768px\u003C/span>\n        \u003C/th>\n        \u003Cth scope=\"col\">\n          lg\u003Cbr/>\n          \u003Cspan class=\"fw-normal\">&ge;992px\u003C/span>\n        \u003C/th>\n        \u003Cth scope=\"col\">\n          xl\u003Cbr/>\n          \u003Cspan class=\"fw-normal\">&ge;1200px\u003C/span>\n        \u003C/th>\n        \u003Cth scope=\"col\">\n          xxl\u003Cbr/>\n          \u003Cspan class=\"fw-normal\">&ge;1400px\u003C/span>\n        \u003C/th>\n      \u003C/tr>\n    \u003C/thead>\n    \u003Ctbody>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\">Container \u003Ccode class=\"fw-normal\">max-width\u003C/code>\u003C/th>\n        \u003Ctd>None (auto)\u003C/td>\n        \u003Ctd>540px\u003C/td>\n        \u003Ctd>720px\u003C/td>\n        \u003Ctd>960px\u003C/td>\n        \u003Ctd>1140px\u003C/td>\n        \u003Ctd>1320px\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\">Class prefix\u003C/th>\n        \u003Ctd>\u003Ccode>.col-\u003C/code>\u003C/td>\n        \u003Ctd>\u003Ccode>.col-sm-\u003C/code>\u003C/td>\n        \u003Ctd>\u003Ccode>.col-md-\u003C/code>\u003C/td>\n        \u003Ctd>\u003Ccode>.col-lg-\u003C/code>\u003C/td>\n        \u003Ctd>\u003Ccode>.col-xl-\u003C/code>\u003C/td>\n        \u003Ctd>\u003Ccode>.col-xxl-\u003C/code>\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\"># of columns\u003C/th>\n        \u003Ctd colspan=\"6\">12\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\">Gutter width\u003C/th>\n        \u003Ctd colspan=\"6\">1.5rem (.75rem on left and right)\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\">Custom gutters\u003C/th>\n        \u003Ctd colspan=\"6\">\u003Ca href=\"[[docsref:/layout/gutters]]\">Yes\u003C/a>\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\">Nestable\u003C/th>\n        \u003Ctd colspan=\"6\">\u003Ca href=\"#nesting\">Yes\u003C/a>\u003C/td>\n      \u003C/tr>\n      \u003Ctr>\n        \u003Cth class=\"text-nowrap\" scope=\"row\">Column ordering\u003C/th>\n        \u003Ctd colspan=\"6\">\u003Ca href=\"[[docsref:/layout/columns#reordering]]\">Yes\u003C/a>\u003C/td>\n      \u003C/tr>\n    \u003C/tbody>\n  \u003C/table>\n\u003C/div>\n\n## Auto-layout columns\n\nUtilize breakpoint-specific column classes for easy column sizing without an explicit numbered class like `.col-sm-6`.\n\n### Equal-width\n\nFor example, here are two grid layouts that apply to every device and viewport, from `xs` to `xxl`. Add any number of unit-less classes for each breakpoint you need and every column will be the same width.\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      1 of 2\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      2 of 2\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      1 of 3\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      2 of 3\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      3 of 3\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Setting one column width\n\nAuto-layout for flexbox grid columns also means you can set the width of one column and have the sibling columns automatically resize around it. You may use predefined grid classes (as shown below), grid mixins, or inline widths. Note that the other columns will resize no matter the width of the center column.\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      1 of 3\n    \u003C/div>\n    \u003Cdiv class=\"col-6\">\n      2 of 3 (wider)\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      3 of 3\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      1 of 3\n    \u003C/div>\n    \u003Cdiv class=\"col-5\">\n      2 of 3 (wider)\n    \u003C/div>\n    \u003Cdiv class=\"col\">\n      3 of 3\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Variable width content\n\nUse `col-{breakpoint}-auto` classes to size columns based on the natural width of their content.\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row justify-content-md-center\">\n    \u003Cdiv class=\"col col-lg-2\">\n      1 of 3\n    \u003C/div>\n    \u003Cdiv class=\"col-md-auto\">\n      Variable width content\n    \u003C/div>\n    \u003Cdiv class=\"col col-lg-2\">\n      3 of 3\n    \u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">\n      1 of 3\n    \u003C/div>\n    \u003Cdiv class=\"col-md-auto\">\n      Variable width content\n    \u003C/div>\n    \u003Cdiv class=\"col col-lg-2\">\n      3 of 3\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Responsive classes\n\nBootstrap's grid includes six tiers of predefined classes for building complex responsive layouts. Customize the size of your columns on extra small, small, medium, large, or extra large devices however you see fit.\n\n### All breakpoints\n\nFor grids that are the same from the smallest of devices to the largest, use the `.col` and `.col-*` classes. Specify a numbered class when you need a particularly sized column; otherwise, feel free to stick to `.col`.\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col\">col\u003C/div>\n    \u003Cdiv class=\"col\">col\u003C/div>\n    \u003Cdiv class=\"col\">col\u003C/div>\n    \u003Cdiv class=\"col\">col\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-8\">col-8\u003C/div>\n    \u003Cdiv class=\"col-4\">col-4\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Stacked to horizontal\n\nUsing a single set of `.col-sm-*` classes, you can create a basic grid system that starts out stacked and becomes horizontal at the small breakpoint (`sm`).\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-sm-8\">col-sm-8\u003C/div>\n    \u003Cdiv class=\"col-sm-4\">col-sm-4\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-sm\">col-sm\u003C/div>\n    \u003Cdiv class=\"col-sm\">col-sm\u003C/div>\n    \u003Cdiv class=\"col-sm\">col-sm\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Mix and match\n\nDon't want your columns to simply stack in some grid tiers? Use a combination of different classes for each tier as needed. See the example below for a better idea of how it all works.\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003C!-- Stack the columns on mobile by making one full-width and the other half-width -->\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-md-8\">.col-md-8\u003C/div>\n    \u003Cdiv class=\"col-6 col-md-4\">.col-6 .col-md-4\u003C/div>\n  \u003C/div>\n\n  \u003C!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-6 col-md-4\">.col-6 .col-md-4\u003C/div>\n    \u003Cdiv class=\"col-6 col-md-4\">.col-6 .col-md-4\u003C/div>\n    \u003Cdiv class=\"col-6 col-md-4\">.col-6 .col-md-4\u003C/div>\n  \u003C/div>\n\n  \u003C!-- Columns are always 50% wide, on mobile and desktop -->\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-6\">.col-6\u003C/div>\n    \u003Cdiv class=\"col-6\">.col-6\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n### Row columns\n\nUse the responsive `.row-cols-*` classes to quickly set the number of columns that best render your content and layout. Whereas normal `.col-*` classes apply to the individual columns (e.g., `.col-md-4`), the row columns classes are set on the parent `.row` as a shortcut. With `.row-cols-auto` you can give the columns their natural width.\n\nUse these row columns classes to quickly create basic grid layouts or to control your card layouts.\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-2\">\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-3\">\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-auto\">\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-4\">\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-4\">\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col-6\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row row-cols-1 row-cols-sm-2 row-cols-md-4\">\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n    \u003Cdiv class=\"col\">Column\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\nYou can also use the accompanying Sass mixin, `row-cols()`:\n\n```scss\n.element {\n  // Three columns to start\n  @include row-cols(3);\n\n  // Five columns from medium breakpoint up\n  @include media-breakpoint-up(md) {\n    @include row-cols(5);\n  }\n}\n```\n\n## Nesting\n\nTo nest your content with the default grid, add a new `.row` and set of `.col-sm-*` columns within an existing `.col-sm-*` column. Nested rows should include a set of columns that add up to 12 or fewer (it is not required that you use all 12 available columns).\n\n\u003CExample class=\"bd-example-row\" code={`\u003Cdiv class=\"container text-center\">\n  \u003Cdiv class=\"row\">\n    \u003Cdiv class=\"col-sm-3\">\n      Level 1: .col-sm-3\n    \u003C/div>\n    \u003Cdiv class=\"col-sm-9\">\n      \u003Cdiv class=\"row\">\n        \u003Cdiv class=\"col-8 col-sm-6\">\n          Level 2: .col-8 .col-sm-6\n        \u003C/div>\n        \u003Cdiv class=\"col-4 col-sm-6\">\n          Level 2: .col-4 .col-sm-6\n        \u003C/div>\n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## CSS\n\nWhen using Bootstrap's source Sass files, you have the option of using Sass variables and mixins to create custom, semantic, and responsive page layouts. Our predefined grid classes use these same variables and mixins to provide a whole suite of ready-to-use classes for fast responsive layouts.\n\n### Sass variables\n\nVariables and maps determine the number of columns, the gutter width, and the media query point at which to begin floating columns. We use these to generate the predefined grid classes documented above, as well as for the custom mixins listed below.\n\n```scss\n$grid-columns:      12;\n$grid-gutter-width: 1.5rem;\n$grid-row-columns:  6;\n```\n\n\u003CScssDocs name=\"grid-breakpoints\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"container-max-widths\" file=\"scss/_variables.scss\" />\n\n### Sass mixins\n\nMixins are used in conjunction with the grid variables to generate semantic CSS for individual grid columns.\n\n```scss\n// Creates a wrapper for a series of columns\n@include make-row();\n\n// Make the element grid-ready (applying everything but the width)\n@include make-col-ready();\n\n// Without optional size values, the mixin will create equal columns (similar to using .col)\n@include make-col();\n@include make-col($size, $columns: $grid-columns);\n\n// Offset with margins\n@include make-col-offset($size, $columns: $grid-columns);\n```\n\n### Example usage\n\nYou can modify the variables to your own custom values, or just use the mixins with their default values. Here's an example of using the default settings to create a two-column layout with a gap between.\n\n```scss\n.example-container {\n  @include make-container();\n  // Make sure to define this width after the mixin to override\n  // `width: 100%` generated by `make-container()`\n  width: 800px;\n}\n\n.example-row {\n  @include make-row();\n}\n\n.example-content-main {\n  @include make-col-ready();\n\n  @include media-breakpoint-up(sm) {\n    @include make-col(6);\n  }\n  @include media-breakpoint-up(lg) {\n    @include make-col(8);\n  }\n}\n\n.example-content-secondary {\n  @include make-col-ready();\n\n  @include media-breakpoint-up(sm) {\n    @include make-col(6);\n  }\n  @include media-breakpoint-up(lg) {\n    @include make-col(4);\n  }\n}\n```\n\n\u003CExample code={`\u003Cdiv class=\"example-container\">\n  \u003Cdiv class=\"example-row\">\n    \u003Cdiv class=\"example-content-main\">Main content\u003C/div>\n    \u003Cdiv class=\"example-content-secondary\">Secondary content\u003C/div>\n  \u003C/div>\n\u003C/div>`} />\n\n## Customizing the grid\n\nUsing our built-in grid Sass variables and maps, it's possible to completely customize the predefined grid classes. Change the number of tiers, the media query dimensions, and the container widths—then recompile.\n\n### Columns and gutters\n\nThe number of grid columns can be modified via Sass variables. `$grid-columns` is used to generate the widths (in percent) of each individual column while `$grid-gutter-width` sets the width for the column gutters. `$grid-row-columns` is used to set the maximum number of columns of `.row-cols-*`, any number over this limit is ignored.\n\n```scss\n$grid-columns: 12 !default;\n$grid-gutter-width: 1.5rem !default;\n$grid-row-columns: 6 !default;\n```\n\n### Grid tiers\n\nMoving beyond the columns themselves, you may also customize the number of grid tiers. If you wanted just four grid tiers, you'd update the `$grid-breakpoints` and `$container-max-widths` to something like this:\n\n```scss\n$grid-breakpoints: (\n  xs: 0,\n  sm: 480px,\n  md: 768px,\n  lg: 1024px\n);\n\n$container-max-widths: (\n  sm: 420px,\n  md: 720px,\n  lg: 960px\n);\n```\n\nWhen making any changes to the Sass variables or maps, you'll need to save your changes and recompile. Doing so will output a brand-new set of predefined grid classes for column widths, offsets, and ordering. Responsive visibility utilities will also be updated to use the custom breakpoints. Make sure to set grid values in `px` (not `rem`, `em`, or `%`).","src/content/docs/layout/grid.mdx","2abb1ea68eb8837f","layout/grid.mdx","utilities/api",{"id":1001,"data":1003,"body":1007,"filePath":1008,"digest":1009,"legacyId":1010,"deferredRender":139},{"aliases":1004,"description":1005,"title":1006,"toc":139},"/docs/[[config:docs_version]]/utilities/","The utility API is a Sass-based tool to generate utility classes.","Utility API","Bootstrap utilities are generated with our utility API and can be used to modify or extend our default set of utility classes via Sass. Our utility API is based on a series of Sass maps and functions for generating families of classes with various options. If you're unfamiliar with Sass maps, read up on the [official Sass docs](https://sass-lang.com/documentation/values/maps/) to get started.\n\nThe `$utilities` map contains all our utilities and is later merged with your custom `$utilities` map, if present. The utility map contains a keyed list of utility groups which accept the following options:\n\n\u003CBsTable class=\"table table-utilities\">\n| Option | Type | Default&nbsp;value | Description |\n| --- | --- | --- | --- |\n| [`property`](#property) | **Required** | – | Name of the property, this can be a string or an array of strings (e.g., horizontal paddings or margins). |\n| [`values`](#values) | **Required** | – | List of values, or a map if you don't want the class name to be the same as the value. If `null` is used as map key, `class` is not prepended to the class name. |\n| [`class`](#class) | Optional | null | Name of the generated class. If not provided and `property` is an array of strings, `class` will default to the first element of the `property` array. If not provided and `property` is a string, the `values` keys are used for the `class` names. |\n| [`css-var`](#css-variable-utilities) | Optional | `false` | Boolean to generate CSS variables instead of CSS rules. |\n| [`css-variable-name`](#css-variable-utilities) | Optional | null | Custom un-prefixed name for the CSS variable inside the ruleset. |\n| [`local-vars`](#local-css-variables) | Optional | null | Map of local CSS variables to generate in addition to the CSS rules. |\n| [`state`](#states) | Optional | null | List of pseudo-class variants (e.g., `:hover` or `:focus`) to generate. |\n| [`responsive`](#responsive) | Optional | `false` | Boolean indicating if responsive classes should be generated. |\n| `rfs` | Optional | `false` | Boolean to enable [fluid rescaling with RFS]([[docsref:/getting-started/rfs]]). |\n| [`print`](#print) | Optional | `false` | Boolean indicating if print classes need to be generated. |\n| `rtl` | Optional | `true` | Boolean indicating if utility should be kept in RTL. |\n\u003C/BsTable>\n\n## API explained\n\nAll utility variables are added to the `$utilities` variable within our `_utilities.scss` stylesheet. Each group of utilities looks something like this:\n\n```scss\n$utilities: (\n  \"opacity\": (\n    property: opacity,\n    values: (\n      0: 0,\n      25: .25,\n      50: .5,\n      75: .75,\n      100: 1,\n    )\n  )\n);\n```\n\nWhich outputs the following:\n\n```css\n.opacity-0 { opacity: 0; }\n.opacity-25 { opacity: .25; }\n.opacity-50 { opacity: .5; }\n.opacity-75 { opacity: .75; }\n.opacity-100 { opacity: 1; }\n```\n\n### Property\n\nThe required `property` key must be set for any utility, and it must contain a valid CSS property. This property is used in the generated utility's ruleset. When the `class` key is omitted, it also serves as the default class name. Consider the `text-decoration` utility:\n\n```scss\n$utilities: (\n  \"text-decoration\": (\n    property: text-decoration,\n    values: none underline line-through\n  )\n);\n```\n\nOutput:\n\n```css\n.text-decoration-none { text-decoration: none !important; }\n.text-decoration-underline { text-decoration: underline !important; }\n.text-decoration-line-through { text-decoration: line-through !important; }\n```\n\n### Values\n\nUse the `values` key to specify which values for the specified `property` should be used in the generated class names and rules. Can be a list or map (set in the utilities or in a Sass variable).\n\nAs a list, like with [`text-decoration` utilities]([[docsref:/utilities/text#text-decoration]]):\n\n```scss\nvalues: none underline line-through\n```\n\nAs a map, like with [`opacity` utilities]([[docsref:/utilities/opacity]]):\n\n```scss\nvalues: (\n  0: 0,\n  25: .25,\n  50: .5,\n  75: .75,\n  100: 1,\n)\n```\n\nAs a Sass variable that sets the list or map, as in our [`position` utilities]([[docsref:/utilities/position]]):\n\n```scss\nvalues: $position-values\n```\n\n### Class\n\nUse the `class` option to change the class prefix used in the compiled CSS. For example, to change from `.opacity-*` to `.o-*`:\n\n```scss\n$utilities: (\n  \"opacity\": (\n    property: opacity,\n    class: o,\n    values: (\n      0: 0,\n      25: .25,\n      50: .5,\n      75: .75,\n      100: 1,\n    )\n  )\n);\n```\n\nOutput:\n\n```css\n.o-0 { opacity: 0 !important; }\n.o-25 { opacity: .25 !important; }\n.o-50 { opacity: .5 !important; }\n.o-75 { opacity: .75 !important; }\n.o-100 { opacity: 1 !important; }\n```\n\nIf `class: null`, generates classes for each of the `values` keys:\n\n```scss\n$utilities: (\n  \"visibility\": (\n    property: visibility,\n    class: null,\n    values: (\n      visible: visible,\n      invisible: hidden,\n    )\n  )\n);\n```\n\nOutput:\n\n```css\n.visible { visibility: visible !important; }\n.invisible { visibility: hidden !important; }\n```\n\n### CSS variable utilities\n\nSet the `css-var` boolean option to `true` and the API will generate local CSS variables for the given selector instead of the usual `property: value` rules. Add an optional `css-variable-name` to set a different CSS variable name than the class name.\n\nConsider our `.text-opacity-*` utilities. If we add the `css-variable-name` option, we'll get a custom output.\n\n```scss\n$utilities: (\n  \"text-opacity\": (\n    css-var: true,\n    css-variable-name: text-alpha,\n    class: text-opacity,\n    values: (\n      25: .25,\n      50: .5,\n      75: .75,\n      100: 1\n    )\n  ),\n);\n```\n\nOutput:\n\n```css\n.text-opacity-25 { --bs-text-alpha: .25; }\n.text-opacity-50 { --bs-text-alpha: .5; }\n.text-opacity-75 { --bs-text-alpha: .75; }\n.text-opacity-100 { --bs-text-alpha: 1; }\n```\n\n### Local CSS variables\n\nUse the `local-vars` option to specify a Sass map that will generate local CSS variables within the utility class's ruleset. Please note that it may require additional work to consume those local CSS variables in the generated CSS rules. For example, consider our `.bg-*` utilities:\n\n```scss\n$utilities: (\n  \"background-color\": (\n    property: background-color,\n    class: bg,\n    local-vars: (\n      \"bg-opacity\": 1\n    ),\n    values: map-merge(\n      $utilities-bg-colors,\n      (\n        \"transparent\": transparent\n      )\n    )\n  )\n);\n```\n\nOutput:\n\n```css\n.bg-primary {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;\n}\n```\n\n### States\n\nUse the `state` option to generate pseudo-class variations. Example pseudo-classes are `:hover` and `:focus`. When a list of states are provided, classnames are created for that pseudo-class. For example, to change opacity on hover, add `state: hover` and you'll get `.opacity-hover:hover` in your compiled CSS.\n\nNeed multiple pseudo-classes? Use a space-separated list of states: `state: hover focus`.\n\n```scss\n$utilities: (\n  \"opacity\": (\n    property: opacity,\n    class: opacity,\n    state: hover,\n    values: (\n      0: 0,\n      25: .25,\n      50: .5,\n      75: .75,\n      100: 1,\n    )\n  )\n);\n```\n\nOutput:\n\n```css\n.opacity-0-hover:hover { opacity: 0 !important; }\n.opacity-25-hover:hover { opacity: .25 !important; }\n.opacity-50-hover:hover { opacity: .5 !important; }\n.opacity-75-hover:hover { opacity: .75 !important; }\n.opacity-100-hover:hover { opacity: 1 !important; }\n```\n\n### Responsive\n\nAdd the `responsive` boolean to generate responsive utilities (e.g., `.opacity-md-25`) across [all breakpoints]([[docsref:/layout/breakpoints]]).\n\n```scss\n$utilities: (\n  \"opacity\": (\n    property: opacity,\n    responsive: true,\n    values: (\n      0: 0,\n      25: .25,\n      50: .5,\n      75: .75,\n      100: 1,\n    )\n  )\n);\n```\n\nOutput:\n\n```css\n.opacity-0 { opacity: 0 !important; }\n.opacity-25 { opacity: .25 !important; }\n.opacity-50 { opacity: .5 !important; }\n.opacity-75 { opacity: .75 !important; }\n.opacity-100 { opacity: 1 !important; }\n\n@media (min-width: 576px) {\n  .opacity-sm-0 { opacity: 0 !important; }\n  .opacity-sm-25 { opacity: .25 !important; }\n  .opacity-sm-50 { opacity: .5 !important; }\n  .opacity-sm-75 { opacity: .75 !important; }\n  .opacity-sm-100 { opacity: 1 !important; }\n}\n\n@media (min-width: 768px) {\n  .opacity-md-0 { opacity: 0 !important; }\n  .opacity-md-25 { opacity: .25 !important; }\n  .opacity-md-50 { opacity: .5 !important; }\n  .opacity-md-75 { opacity: .75 !important; }\n  .opacity-md-100 { opacity: 1 !important; }\n}\n\n@media (min-width: 992px) {\n  .opacity-lg-0 { opacity: 0 !important; }\n  .opacity-lg-25 { opacity: .25 !important; }\n  .opacity-lg-50 { opacity: .5 !important; }\n  .opacity-lg-75 { opacity: .75 !important; }\n  .opacity-lg-100 { opacity: 1 !important; }\n}\n\n@media (min-width: 1200px) {\n  .opacity-xl-0 { opacity: 0 !important; }\n  .opacity-xl-25 { opacity: .25 !important; }\n  .opacity-xl-50 { opacity: .5 !important; }\n  .opacity-xl-75 { opacity: .75 !important; }\n  .opacity-xl-100 { opacity: 1 !important; }\n}\n\n@media (min-width: 1400px) {\n  .opacity-xxl-0 { opacity: 0 !important; }\n  .opacity-xxl-25 { opacity: .25 !important; }\n  .opacity-xxl-50 { opacity: .5 !important; }\n  .opacity-xxl-75 { opacity: .75 !important; }\n  .opacity-xxl-100 { opacity: 1 !important; }\n}\n```\n\n### Print\n\nEnabling the `print` option will **also** generate utility classes for print, which are only applied within the `@media print { ... }` media query.\n\n```scss\n$utilities: (\n  \"opacity\": (\n    property: opacity,\n    print: true,\n    values: (\n      0: 0,\n      25: .25,\n      50: .5,\n      75: .75,\n      100: 1,\n    )\n  )\n);\n```\n\nOutput:\n\n```css\n.opacity-0 { opacity: 0 !important; }\n.opacity-25 { opacity: .25 !important; }\n.opacity-50 { opacity: .5 !important; }\n.opacity-75 { opacity: .75 !important; }\n.opacity-100 { opacity: 1 !important; }\n\n@media print {\n  .opacity-print-0 { opacity: 0 !important; }\n  .opacity-print-25 { opacity: .25 !important; }\n  .opacity-print-50 { opacity: .5 !important; }\n  .opacity-print-75 { opacity: .75 !important; }\n  .opacity-print-100 { opacity: 1 !important; }\n}\n```\n\n## Importance\n\nAll utilities generated by the API include `!important` to ensure they override components and modifier classes as intended. You can toggle this setting globally with the `$enable-important-utilities` variable (defaults to `true`).\n\n## Using the API\n\nNow that you're familiar with how the utilities API works, learn how to add your own custom classes and modify our default utilities.\n\n### Override utilities\n\nOverride existing utilities by using the same key. For example, if you want additional responsive overflow utility classes, you can do this:\n\n```scss\n$utilities: (\n  \"overflow\": (\n    responsive: true,\n    property: overflow,\n    values: visible hidden scroll auto,\n  ),\n);\n```\n\n### Add utilities\n\nNew utilities can be added to the default `$utilities` map with a `map-merge`. Make sure our required Sass files and `_utilities.scss` are imported first, then use the `map-merge` to add your additional utilities. For example, here's how to add a responsive `cursor` utility with three values.\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$utilities: map-merge(\n  $utilities,\n  (\n    \"cursor\": (\n      property: cursor,\n      class: cursor,\n      responsive: true,\n      values: auto pointer grab,\n    )\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\n### Modify utilities\n\nModify existing utilities in the default `$utilities` map with `map-get` and `map-merge` functions. In the example below, we're adding an additional value to the `width` utilities. Start with an initial `map-merge` and then specify which utility you want to modify. From there, fetch the nested `\"width\"` map with `map-get` to access and modify the utility's options and values.\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$utilities: map-merge(\n  $utilities,\n  (\n    \"width\": map-merge(\n      map-get($utilities, \"width\"),\n      (\n        values: map-merge(\n          map-get(map-get($utilities, \"width\"), \"values\"),\n          (10: 10%),\n        ),\n      ),\n    ),\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\n#### Enable responsive\n\nYou can enable responsive classes for an existing set of utilities that are not currently responsive by default. For example, to make the `border` classes responsive:\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$utilities: map-merge(\n  $utilities,\n  (\n    \"border\": map-merge(\n      map-get($utilities, \"border\"),\n      ( responsive: true ),\n    ),\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\nThis will now generate responsive variations of `.border` and `.border-0` for each breakpoint. Your generated CSS will look like this:\n\n```css\n.border { ... }\n.border-0 { ... }\n\n@media (min-width: 576px) {\n  .border-sm { ... }\n  .border-sm-0 { ... }\n}\n\n@media (min-width: 768px) {\n  .border-md { ... }\n  .border-md-0 { ... }\n}\n\n@media (min-width: 992px) {\n  .border-lg { ... }\n  .border-lg-0 { ... }\n}\n\n@media (min-width: 1200px) {\n  .border-xl { ... }\n  .border-xl-0 { ... }\n}\n\n@media (min-width: 1400px) {\n  .border-xxl { ... }\n  .border-xxl-0 { ... }\n}\n```\n\n#### Rename utilities\n\nMissing v4 utilities, or used to another naming convention? The utilities API can be used to override the resulting `class` of a given utility—for example, to rename `.ms-*` utilities to oldish `.ml-*`:\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$utilities: map-merge(\n  $utilities,\n  (\n    \"margin-start\": map-merge(\n      map-get($utilities, \"margin-start\"),\n      ( class: ml ),\n    ),\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\n### Remove utilities\n\nRemove any of the default utilities with the [`map-remove()` Sass function](https://sass-lang.com/documentation/modules/map/#remove).\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n// Remove multiple utilities with a comma-separated list\n$utilities: map-remove($utilities, \"width\", \"float\");\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\nYou can also use the [`map-merge()` Sass function](https://sass-lang.com/documentation/modules/map/#merge) and set the group key to `null` to remove the utility.\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$utilities: map-merge(\n  $utilities,\n  (\n    \"width\": null\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\n### Add, remove, modify\n\nYou can add, remove, and modify many utilities all at once with the [`map-merge()` Sass function](https://sass-lang.com/documentation/modules/map/#merge). Here's how you can combine the previous examples into one larger map.\n\n```scss\n@import \"bootstrap/scss/functions\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n\n$utilities: map-merge(\n  $utilities,\n  (\n    // Remove the `width` utility\n    \"width\": null,\n    // Make an existing utility responsive\n    \"border\": map-merge(\n      map-get($utilities, \"border\"),\n      ( responsive: true ),\n    ),\n    // Add new utilities\n    \"cursor\": (\n      property: cursor,\n      class: cursor,\n      responsive: true,\n      values: auto pointer grab,\n    )\n  )\n);\n\n@import \"bootstrap/scss/utilities/api\";\n```\n\n#### Remove utility in RTL\n\nSome edge cases make [RTL styling difficult](https://rtlstyling.com/posts/rtl-styling#common-things-that-might-not-work-for-rtl), such as line breaks in Arabic. Thus utilities can be dropped from RTL output by setting the `rtl` option to `false`:\n\n```scss\n$utilities: (\n  \"word-wrap\": (\n    property: word-wrap word-break,\n    class: text,\n    values: (break: break-word),\n    rtl: false\n  ),\n);\n```\n\nOutput:\n\n```css\n/* rtl:begin:remove */\n.text-break {\n  word-wrap: break-word !important;\n  word-break: break-word !important;\n}\n/* rtl:end:remove */\n```\n\nThis doesn't output anything in RTL, thanks to [the RTLCSS `remove` control directive](https://rtlcss.com/learn/usage-guide/control-directives/#remove).","src/content/docs/utilities/api.mdx","b75c9110a943062a","utilities/api.mdx","utilities/background",{"id":1011,"data":1013,"body":1016,"filePath":1017,"digest":1018,"legacyId":1019,"deferredRender":139},{"description":1014,"title":1015,"toc":139},"Convey meaning through `background-color` and add decoration with gradients.","Background","import { getData } from '@libs/data'\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## Background color\n\nSimilar to the contextual text color classes, set the background of an element to any contextual class. Background utilities **do not set `color`**, so in some cases you'll want to use `.text-*` [color utilities]([[docsref:/utilities/colors]]).\n\n\u003CCallout>\nBackground utilities like `.bg-*` that generated from our original `$theme-colors` Sass map don't yet respond to color modes, however, any `.bg-*-subtle` utility will. This will be resolved in v6.\n\u003C/Callout>\n\n\u003CExample code={[\n  ...getData('theme-colors').map((themeColor) => `\u003Cdiv class=\"p-3 mb-2 bg-${themeColor.name} ${themeColor.contrast_color ? `text-${themeColor.contrast_color}` : `text-white`}\">.bg-${themeColor.name}\u003C/div>\n\u003Cdiv class=\"p-3 mb-2 bg-${themeColor.name}-subtle text-${themeColor.name}-emphasis\">.bg-${themeColor.name}-subtle\u003C/div>`),\n  `\u003Cdiv class=\"p-3 mb-2 bg-body-secondary\">.bg-body-secondary\u003C/div>\n\u003Cdiv class=\"p-3 mb-2 bg-body-tertiary\">.bg-body-tertiary\u003C/div>\n\u003Cdiv class=\"p-3 mb-2 bg-body text-body\">.bg-body\u003C/div>\n\u003Cdiv class=\"p-3 mb-2 bg-black text-white\">.bg-black\u003C/div>\n\u003Cdiv class=\"p-3 mb-2 bg-white text-dark\">.bg-white\u003C/div>\n\u003Cdiv class=\"p-3 mb-2 bg-transparent text-body\">.bg-transparent\u003C/div>`\n]} />\n\n## Background gradient\n\nBy adding a `.bg-gradient` class, a linear gradient is added as background image to the backgrounds. This gradient starts with a semi-transparent white which fades out to the bottom.\n\nDo you need a gradient in your custom CSS? Just add `background-image: var(--bs-gradient);`.\n\n{getData('theme-colors').map((themeColor) => {\n  return (\n    \u003Cdiv class={`p-3 mb-2 bg-${themeColor.name} bg-gradient${themeColor.contrast_color ? (' text-' + themeColor.contrast_color) : ' text-white'}`}>.bg-{themeColor.name}.bg-gradient {themeColor.contrast_color}\u003C/div>\n  )\n})}\n\u003Cdiv class=\"p-3 mb-2 bg-black bg-gradient text-white\">.bg-black.bg-gradient\u003C/div>\n\n## Opacity\n\n\u003CAddedIn version=\"5.1.0\" />\n\nAs of v5.1.0, `background-color` utilities are generated with Sass using CSS variables. This allows for real-time color changes without compilation and dynamic alpha transparency changes.\n\n### How it works\n\nConsider our default `.bg-success` utility.\n\n```css\n.bg-success {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;\n}\n```\n\nWe use an RGB version of our `--bs-success` (with the value of `25, 135, 84`) CSS variable and attached a second CSS variable, `--bs-bg-opacity`, for the alpha transparency (with a default value `1` thanks to a local CSS variable). That means anytime you use `.bg-success` now, your computed `color` value is `rgba(25, 135, 84, 1)`. The local CSS variable inside each `.bg-*` class avoids inheritance issues so nested instances of the utilities don't automatically have a modified alpha transparency.\n\n### Example\n\nTo change that opacity, override `--bs-bg-opacity` via custom styles or inline styles.\n\n\u003CExample code={`\u003Cdiv class=\"bg-success p-2 text-white\">This is default success background\u003C/div>\n\u003Cdiv class=\"bg-success p-2\" style=\"--bs-bg-opacity: .5;\">This is 50% opacity success background\u003C/div>`} />\n\nOr, choose from any of the `.bg-opacity` utilities:\n\n\u003CExample code={`\u003Cdiv class=\"bg-success p-2 text-white\">This is default success background\u003C/div>\n\u003Cdiv class=\"bg-success p-2 text-white bg-opacity-75\">This is 75% opacity success background\u003C/div>\n\u003Cdiv class=\"bg-success p-2 text-dark bg-opacity-50\">This is 50% opacity success background\u003C/div>\n\u003Cdiv class=\"bg-success p-2 text-dark bg-opacity-25\">This is 25% opacity success background\u003C/div>\n\u003Cdiv class=\"bg-success p-2 text-dark bg-opacity-10\">This is 10% opacity success background\u003C/div>`} />\n\n## CSS\n\nIn addition to the following Sass functionality, consider reading about our included [CSS custom properties]([[docsref:/customize/css-variables]]) (aka CSS variables) for colors and more.\n\n### Sass variables\n\nMost `background-color` utilities are generated by our theme colors, reassigned from our generic color palette variables.\n\n\u003CScssDocs name=\"color-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-color-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"variable-gradient\" file=\"scss/_variables.scss\" />\n\nGrayscale colors are also available, but only a subset are used to generate any utilities.\n\n\u003CScssDocs name=\"gray-color-variables\" file=\"scss/_variables.scss\" />\n\nVariables for setting `background-color` in `.bg-*-subtle` utilities in light and dark mode:\n\n\u003CScssDocs name=\"theme-bg-subtle-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-bg-subtle-dark-variables\" file=\"scss/_variables-dark.scss\" />\n\n### Sass maps\n\nTheme colors are then put into a Sass map so we can loop over them to generate our utilities, component modifiers, and more.\n\n\u003CScssDocs name=\"theme-colors-map\" file=\"scss/_variables.scss\" />\n\nGrayscale colors are also available as a Sass map. **This map is not used to generate any utilities.**\n\n\u003CScssDocs name=\"gray-colors-map\" file=\"scss/_variables.scss\" />\n\nRGB colors are generated from a separate Sass map:\n\n\u003CScssDocs name=\"theme-colors-rgb\" file=\"scss/_maps.scss\" />\n\nBackground color opacities build on that with their own map that's consumed by the utilities API:\n\n\u003CScssDocs name=\"utilities-bg-colors\" file=\"scss/_maps.scss\" />\n\nColor mode background colors are also available as a Sass map:\n\n\u003CScssDocs name=\"theme-bg-subtle-map\" file=\"scss/_maps.scss\" />\n\n\u003CScssDocs name=\"theme-bg-subtle-dark-map\" file=\"scss/_maps.scss\" />\n\n### Sass mixins\n\n**No mixins are used to generate our background utilities**, but we do have some additional mixins for other situations where you'd like to create your own gradients.\n\n\u003CScssDocs name=\"gradient-bg-mixin\" file=\"scss/mixins/_gradients.scss\" />\n\n\u003CScssDocs name=\"gradient-mixins\" file=\"scss/mixins/_gradients.scss\" />\n\n### Sass utilities API\n\nBackground utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-bg-color\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/background.mdx","fe877a4451043f99","utilities/background.mdx","utilities/borders",{"id":1020,"data":1022,"body":1025,"filePath":1026,"digest":1027,"legacyId":1028,"deferredRender":139},{"description":1023,"title":1024,"toc":139},"Use border utilities to quickly style the border and border-radius of an element. Great for images, buttons, or any other element.","Borders","import { getData } from '@libs/data'\n\n## Border\n\nUse border utilities to add or remove an element's borders. Choose from all borders or one at a time.\n\n### Additive\n\nAdd borders to custom elements:\n\n\u003CExample class=\"bd-example-border-utils\" code={`\u003Cspan class=\"border\">\u003C/span>\n\u003Cspan class=\"border-top\">\u003C/span>\n\u003Cspan class=\"border-end\">\u003C/span>\n\u003Cspan class=\"border-bottom\">\u003C/span>\n\u003Cspan class=\"border-start\">\u003C/span>`} />\n\n### Subtractive\n\nOr remove borders:\n\n\u003CExample class=\"bd-example-border-utils\" code={`\u003Cspan class=\"border border-0\">\u003C/span>\n\u003Cspan class=\"border border-top-0\">\u003C/span>\n\u003Cspan class=\"border border-end-0\">\u003C/span>\n\u003Cspan class=\"border border-bottom-0\">\u003C/span>\n\u003Cspan class=\"border border-start-0\">\u003C/span>`} />\n\n## Color\n\n\u003CCallout>\nBorder utilities like `.border-*` that generated from our original `$theme-colors` Sass map don't yet respond to color modes, however, any `.border-*-subtle` utility will. This will be resolved in v6.\n\u003C/Callout>\n\nChange the border color using utilities built on our theme colors.\n\n\u003CExample class=\"bd-example-border-utils\" code={[\n  ...getData('theme-colors').map((themeColor) => `\u003Cspan class=\"border border-${themeColor.name}\">\u003C/span>\n\u003Cspan class=\"border border-${themeColor.name}-subtle\">\u003C/span>`),\n  `\u003Cspan class=\"border border-black\">\u003C/span>\n\u003Cspan class=\"border border-white\">\u003C/span>`\n]} />\n\nOr modify the default `border-color` of a component:\n\n\u003CExample code={`\u003Cdiv class=\"mb-4\">\n  \u003Clabel for=\"exampleFormControlInput1\" class=\"form-label\">Email address\u003C/label>\n  \u003Cinput type=\"email\" class=\"form-control border-success\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\">\n\u003C/div>\n\n\u003Cdiv class=\"h4 pb-2 mb-4 text-danger border-bottom border-danger\">\n  Dangerous heading\n\u003C/div>\n\n\u003Cdiv class=\"p-3 bg-info bg-opacity-10 border border-info border-start-0 rounded-end\">\n  Changing border color and width\n\u003C/div>`} />\n\n## Opacity\n\n\u003CAddedIn version=\"5.2.0\" />\n\nBootstrap `border-{color}` utilities are generated with Sass using CSS variables. This allows for real-time color changes without compilation and dynamic alpha transparency changes.\n\n### How it works\n\nConsider our default `.border-success` utility.\n\n```css\n.border-success {\n  --bs-border-opacity: 1;\n  border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;\n}\n```\n\nWe use an RGB version of our `--bs-success` (with the value of `25, 135, 84`) CSS variable and attached a second CSS variable, `--bs-border-opacity`, for the alpha transparency (with a default value `1` thanks to a local CSS variable). That means anytime you use `.border-success` now, your computed `color` value is `rgba(25, 135, 84, 1)`. The local CSS variable inside each `.border-*` class avoids inheritance issues so nested instances of the utilities don't automatically have a modified alpha transparency.\n\n### Example\n\nTo change that opacity, override `--bs-border-opacity` via custom styles or inline styles.\n\n\u003CExample code={`\u003Cdiv class=\"border border-success p-2 mb-2\">This is default success border\u003C/div>\n\u003Cdiv class=\"border border-success p-2\" style=\"--bs-border-opacity: .5;\">This is 50% opacity success border\u003C/div>`} />\n\nOr, choose from any of the `.border-opacity` utilities:\n\n\u003CExample code={`\u003Cdiv class=\"border border-success p-2 mb-2\">This is default success border\u003C/div>\n\u003Cdiv class=\"border border-success p-2 mb-2 border-opacity-75\">This is 75% opacity success border\u003C/div>\n\u003Cdiv class=\"border border-success p-2 mb-2 border-opacity-50\">This is 50% opacity success border\u003C/div>\n\u003Cdiv class=\"border border-success p-2 mb-2 border-opacity-25\">This is 25% opacity success border\u003C/div>\n\u003Cdiv class=\"border border-success p-2 border-opacity-10\">This is 10% opacity success border\u003C/div>`} />\n\n## Width\n\n\u003CExample class=\"bd-example-border-utils\" code={`\u003Cspan class=\"border border-1\">\u003C/span>\n\u003Cspan class=\"border border-2\">\u003C/span>\n\u003Cspan class=\"border border-3\">\u003C/span>\n\u003Cspan class=\"border border-4\">\u003C/span>\n\u003Cspan class=\"border border-5\">\u003C/span>`} />\n\n## Radius\n\nAdd classes to an element to easily round its corners.\n\n\u003CExample class=\"bd-example-rounded-utils\" code={`\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded\" title=\"Example rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-top\" title=\"Example top rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-end\" title=\"Example right rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-bottom\" title=\"Example bottom rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-start\" title=\"Example left rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-circle\" title=\"Completely round image\" />\n\u003CPlaceholder width=\"150\" height=\"75\" class=\"rounded-pill\" title=\"Rounded pill image\" />`} />\n\n### Sizes\n\nUse the scaling classes for larger or smaller rounded corners. Sizes range from `0` to `5`, and can be configured by modifying the utilities API.\n\n\u003CExample class=\"bd-example-rounded-utils\" code={`\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-0\" title=\"Example non-rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-1\" title=\"Example small rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-2\" title=\"Example default rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-3\" title=\"Example large rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-4\" title=\"Example larger rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-5\" title=\"Example extra large rounded image\" />`} />\n\n\u003CExample class=\"bd-example-rounded-utils\" code={`\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-bottom-1\" title=\"Example small rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-start-2\" title=\"Example default left rounded image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-end-circle\" title=\"Example right completely round image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-start-pill\" title=\"Example left rounded pill image\" />\n\u003CPlaceholder width=\"75\" height=\"75\" class=\"rounded-5 rounded-top-0\" title=\"Example extra large bottom rounded image\" />`} />\n\n## CSS\n\n### Variables\n\n\u003CAddedIn version=\"5.2.0\" />\n\n\u003CScssDocs name=\"root-border-var\" file=\"scss/_root.scss\" />\n\n### Sass variables\n\n\u003CScssDocs name=\"border-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"border-radius-variables\" file=\"scss/_variables.scss\" />\n\nVariables for setting `border-color` in `.border-*-subtle` utilities in light and dark mode:\n\n\u003CScssDocs name=\"theme-border-subtle-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-border-subtle-dark-variables\" file=\"scss/_variables-dark.scss\" />\n\n### Sass maps\n\nColor mode adaptive border colors are also available as a Sass map:\n\n\u003CScssDocs name=\"theme-border-subtle-map\" file=\"scss/_maps.scss\" />\n\n\u003CScssDocs name=\"theme-border-subtle-dark-map\" file=\"scss/_maps.scss\" />\n\n### Sass mixins\n\n\u003CScssDocs name=\"border-radius-mixins\" file=\"scss/mixins/_border-radius.scss\" />\n\n### Sass utilities API\n\nBorder utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-borders\" file=\"scss/_utilities.scss\" />\n\n\u003CScssDocs name=\"utils-border-radius\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/borders.mdx","27f17f80e5533dcb","utilities/borders.mdx","utilities/colors",{"id":1029,"data":1031,"body":1034,"filePath":1035,"digest":1036,"legacyId":1037,"deferredRender":139},{"description":1032,"title":1033,"toc":139},"Convey meaning through `color` with a handful of color utility classes. Includes support for styling links with hover states, too.","Colors","import { getData } from '@libs/data'\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## Colors\n\nColorize text with color utilities. If you want to colorize links, you can use the [`.link-*` helper classes]([[docsref:/helpers/colored-links]]) which have `:hover` and `:focus` states.\n\n\u003CCallout>\nColor utilities like `.text-*` that generated from our original `$theme-colors` Sass map don't yet respond to color modes, however, any `.text-*-emphasis` utility will. This will be resolved in v6.\n\u003C/Callout>\n\n\u003CExample code={[\n  ...getData('theme-colors').map((themeColor) => `\u003Cp class=\"text-${themeColor.name}${themeColor.contrast_color ? ` bg-${themeColor.contrast_color}` : ``}\">.text-${themeColor.name}\u003C/p>\n\u003Cp class=\"text-${themeColor.name}-emphasis\">.text-${themeColor.name}-emphasis\u003C/p>`),\n  `\n\u003Cp class=\"text-body\">.text-body\u003C/p>\n\u003Cp class=\"text-body-emphasis\">.text-body-emphasis\u003C/p>\n\u003Cp class=\"text-body-secondary\">.text-body-secondary\u003C/p>\n\u003Cp class=\"text-body-tertiary\">.text-body-tertiary\u003C/p>\n\n\u003Cp class=\"text-black bg-white\">.text-black\u003C/p>\n\u003Cp class=\"text-white bg-dark\">.text-white\u003C/p>\n\u003Cp class=\"text-black-50 bg-white\">.text-black-50\u003C/p>\n\u003Cp class=\"text-white-50 bg-dark\">.text-white-50\u003C/p>`\n]} />\n\n\u003CCallout type=\"warning\">\n**Deprecation:** With the addition of `.text-opacity-*` utilities and CSS variables for text utilities, `.text-black-50` and `.text-white-50` are deprecated as of v5.1.0. They'll be removed in v6.0.0.\n\u003C/Callout>\n\n\u003CCallout type=\"warning\">\n**Deprecation:** With the addition of the expanded theme colors and variables, the `.text-muted` utility has been deprecated as of v5.3.0. Its default value has also been reassigned to the new `--bs-secondary-color` CSS variable to better support color modes. It will be removed in v6.0.0.\n\u003C/Callout>\n\n## Opacity\n\n\u003CAddedIn version=\"5.1.0\" />\n\nAs of v5.1.0, text color utilities are generated with Sass using CSS variables. This allows for real-time color changes without compilation and dynamic alpha transparency changes.\n\n### How it works\n\nConsider our default `.text-primary` utility.\n\n```css\n.text-primary {\n  --bs-text-opacity: 1;\n  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;\n}\n```\n\nWe use an RGB version of our `--bs-primary` (with the value of `13, 110, 253`) CSS variable and attached a second CSS variable, `--bs-text-opacity`, for the alpha transparency (with a default value `1` thanks to a local CSS variable). That means anytime you use `.text-primary` now, your computed `color` value is `rgba(13, 110, 253, 1)`. The local CSS variable inside each `.text-*` class avoids inheritance issues so nested instances of the utilities don't automatically have a modified alpha transparency.\n\n### Example\n\nTo change that opacity, override `--bs-text-opacity` via custom styles or inline styles.\n\n\u003CExample code={`\u003Cdiv class=\"text-primary\">This is default primary text\u003C/div>\n\u003Cdiv class=\"text-primary\" style=\"--bs-text-opacity: .5;\">This is 50% opacity primary text\u003C/div>`} />\n\nOr, choose from any of the `.text-opacity` utilities:\n\n\u003CExample code={`\u003Cdiv class=\"text-primary\">This is default primary text\u003C/div>\n\u003Cdiv class=\"text-primary text-opacity-75\">This is 75% opacity primary text\u003C/div>\n\u003Cdiv class=\"text-primary text-opacity-50\">This is 50% opacity primary text\u003C/div>\n\u003Cdiv class=\"text-primary text-opacity-25\">This is 25% opacity primary text\u003C/div>`} />\n\n## Specificity\n\nSometimes contextual classes cannot be applied due to the specificity of another selector. In some cases, a sufficient workaround is to wrap your element's content in a `\u003Cdiv>` or more semantic element with the desired class.\n\n## CSS\n\nIn addition to the following Sass functionality, consider reading about our included [CSS custom properties]([[docsref:/customize/css-variables]]) (aka CSS variables) for colors and more.\n\n### Sass variables\n\nMost `color` utilities are generated by our theme colors, reassigned from our generic color palette variables.\n\n\u003CScssDocs name=\"color-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-color-variables\" file=\"scss/_variables.scss\" />\n\nGrayscale colors are also available, but only a subset are used to generate any utilities.\n\n\u003CScssDocs name=\"gray-color-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-text-map\" file=\"scss/_maps.scss\" />\n\nVariables for setting colors in `.text-*-emphasis` utilities in light and dark mode:\n\n\u003CScssDocs name=\"theme-text-variables\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-text-dark-variables\" file=\"scss/_variables-dark.scss\" />\n\n### Sass maps\n\nTheme colors are then put into a Sass map so we can loop over them to generate our utilities, component modifiers, and more.\n\n\u003CScssDocs name=\"theme-colors-map\" file=\"scss/_variables.scss\" />\n\nGrayscale colors are also available as a Sass map. **This map is not used to generate any utilities.**\n\n\u003CScssDocs name=\"gray-colors-map\" file=\"scss/_variables.scss\" />\n\nRGB colors are generated from a separate Sass map:\n\n\u003CScssDocs name=\"theme-colors-rgb\" file=\"scss/_maps.scss\" />\n\nColor opacities build on that with their own map that's consumed by the utilities API:\n\n\u003CScssDocs name=\"utilities-text-colors\" file=\"scss/_maps.scss\" />\n\nColor mode adaptive text colors are also available as a Sass map:\n\n\u003CScssDocs name=\"theme-text-map\" file=\"scss/_maps.scss\" />\n\n\u003CScssDocs name=\"theme-text-dark-map\" file=\"scss/_maps.scss\" />\n\n### Sass utilities API\n\nColor utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-color\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/colors.mdx","db46dee159c39222","utilities/colors.mdx","utilities/display",{"id":1038,"data":1040,"body":1043,"filePath":1044,"digest":1045,"legacyId":1046,"deferredRender":139},{"description":1041,"title":1042,"toc":139},"Quickly and responsively toggle the display value of components and more with our display utilities. Includes support for some of the more common values, as well as some extras for controlling display when printing.","Display property","## How it works\n\nChange the value of the [`display` property](https://developer.mozilla.org/en-US/docs/Web/CSS/display) with our responsive display utility classes. We purposely support only a subset of all possible values for `display`. Classes can be combined for various effects as you need.\n\n## Notation\n\nDisplay utility classes that apply to all [breakpoints]([[docsref:/layout/breakpoints]]), from `xs` to `xxl`, have no breakpoint abbreviation in them. This is because those classes are applied from `min-width: 0;` and up, and thus are not bound by a media query. The remaining breakpoints, however, do include a breakpoint abbreviation.\n\nAs such, the classes are named using the format:\n\n- `.d-{value}` for `xs`\n- `.d-{breakpoint}-{value}` for `sm`, `md`, `lg`, `xl`, and `xxl`.\n\nWhere *value* is one of:\n\n- `none`\n- `inline`\n- `inline-block`\n- `block`\n- `grid`\n- `inline-grid`\n- `table`\n- `table-cell`\n- `table-row`\n- `flex`\n- `inline-flex`\n\nThe display values can be altered by changing the `display` values defined in `$utilities` and recompiling the SCSS.\n\nThe media queries affect screen widths with the given breakpoint *or larger*. For example, `.d-lg-none` sets `display: none;` on `lg`, `xl`, and `xxl` screens.\n\n## Examples\n\n\u003CExample code={`\u003Cdiv class=\"d-inline p-2 text-bg-primary\">d-inline\u003C/div>\n\u003Cdiv class=\"d-inline p-2 text-bg-dark\">d-inline\u003C/div>`} />\n\n\u003CExample code={`\u003Cspan class=\"d-block p-2 text-bg-primary\">d-block\u003C/span>\n\u003Cspan class=\"d-block p-2 text-bg-dark\">d-block\u003C/span>`} />\n\n## Hiding elements\n\nFor faster mobile-friendly development, use responsive display classes for showing and hiding elements by device. Avoid creating entirely different versions of the same site, instead hide elements responsively for each screen size.\n\nTo hide elements simply use the `.d-none` class or one of the `.d-{sm,md,lg,xl,xxl}-none` classes for any responsive screen variation.\n\nTo show an element only on a given interval of screen sizes you can combine one `.d-*-none` class with a `.d-*-*` class, for example `.d-none .d-md-block .d-xl-none` will hide the element for all screen sizes except on medium and large devices.\n\n\u003CBsTable>\n| Screen size | Class |\n| --- | --- |\n| Hidden on all | `.d-none` |\n| Hidden only on xs | `.d-none .d-sm-block` |\n| Hidden only on sm | `.d-sm-none .d-md-block` |\n| Hidden only on md | `.d-md-none .d-lg-block` |\n| Hidden only on lg | `.d-lg-none .d-xl-block` |\n| Hidden only on xl | `.d-xl-none .d-xxl-block` |\n| Hidden only on xxl | `.d-xxl-none` |\n| Visible on all | `.d-block` |\n| Visible only on xs | `.d-block .d-sm-none` |\n| Visible only on sm | `.d-none .d-sm-block .d-md-none` |\n| Visible only on md | `.d-none .d-md-block .d-lg-none` |\n| Visible only on lg | `.d-none .d-lg-block .d-xl-none` |\n| Visible only on xl | `.d-none .d-xl-block .d-xxl-none` |\n| Visible only on xxl | `.d-none .d-xxl-block` |\n\u003C/BsTable>\n\n\u003CExample code={`\u003Cdiv class=\"d-lg-none\">hide on lg and wider screens\u003C/div>\n\u003Cdiv class=\"d-none d-lg-block\">hide on screens smaller than lg\u003C/div>`} />\n\n## Display in print\n\nChange the `display` value of elements when printing with our print display utility classes. Includes support for the same `display` values as our responsive `.d-*` utilities.\n\n- `.d-print-none`\n- `.d-print-inline`\n- `.d-print-inline-block`\n- `.d-print-block`\n- `.d-print-grid`\n- `.d-print-inline-grid`\n- `.d-print-table`\n- `.d-print-table-row`\n- `.d-print-table-cell`\n- `.d-print-flex`\n- `.d-print-inline-flex`\n\nThe print and display classes can be combined.\n\n\u003CExample code={`\u003Cdiv class=\"d-print-none\">Screen Only (Hide on print only)\u003C/div>\n\u003Cdiv class=\"d-none d-print-block\">Print Only (Hide on screen only)\u003C/div>\n\u003Cdiv class=\"d-none d-lg-block d-print-block\">Hide up to large on screen, but always show on print\u003C/div>`} />\n\n## CSS\n\n### Sass utilities API\n\nDisplay utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-display\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/display.mdx","fee3f24f8630d81b","utilities/display.mdx","utilities/flex",{"id":1047,"data":1049,"body":1052,"filePath":1053,"digest":1054,"legacyId":1055,"deferredRender":139},{"description":1050,"title":1051,"toc":139},"Quickly manage the layout, alignment, and sizing of grid columns, navigation, components, and more with a full suite of responsive flexbox utilities. For more complex implementations, custom CSS may be necessary.","Flex","import { getData } from '@libs/data'\nimport { getSequence } from '@libs/utils'\n\n## Enable flex behaviors\n\nApply `display` utilities to create a flexbox container and transform **direct children elements** into flex items. Flex containers and items are able to be modified further with additional flex properties.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex p-2\">I'm a flexbox container!\u003C/div>`} />\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-inline-flex p-2\">I'm an inline flexbox container!\u003C/div>`} />\n\nResponsive variations also exist for `.d-flex` and `.d-inline-flex`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.d{breakpoint.abbr}-flex\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.d{breakpoint.abbr}-inline-flex\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Direction\n\nSet the direction of flex items in a flex container with direction utilities. In most cases you can omit the horizontal class here as the browser default is `row`. However, you may encounter situations where you needed to explicitly set this value (like responsive layouts).\n\nUse `.flex-row` to set a horizontal direction (the browser default), or `.flex-row-reverse` to start the horizontal direction from the opposite side.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex flex-row mb-3\">\n  \u003Cdiv class=\"p-2\">Flex item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 3\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"d-flex flex-row-reverse\">\n  \u003Cdiv class=\"p-2\">Flex item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 3\u003C/div>\n\u003C/div>`} />\n\nUse `.flex-column` to set a vertical direction, or `.flex-column-reverse`  to start the vertical direction from the opposite side.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex flex-column mb-3\">\n  \u003Cdiv class=\"p-2\">Flex item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 3\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"d-flex flex-column-reverse\">\n  \u003Cdiv class=\"p-2\">Flex item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item 3\u003C/div>\n\u003C/div>`} />\n\nResponsive variations also exist for `flex-direction`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-row\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-row-reverse\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-column-reverse\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Justify content\n\nUse `justify-content` utilities on flexbox containers to change the alignment of flex items on the main axis (the x-axis to start, y-axis if `flex-direction: column`). Choose from `start` (browser default), `end`, `center`, `between`, `around`, or `evenly`.\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex justify-content-start mb-3\">\n    \u003Cdiv class=\"p-2 bd-highlight\">Justify\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Content\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Start\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex justify-content-end mb-3\">\n    \u003Cdiv class=\"p-2 bd-highlight\">Justify\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Content\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">End\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex justify-content-center mb-3\">\n    \u003Cdiv class=\"p-2 bd-highlight\">Justify\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Content\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Center\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex justify-content-between mb-3\">\n    \u003Cdiv class=\"p-2 bd-highlight\">Justify\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Content\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Between\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex justify-content-around mb-3\">\n    \u003Cdiv class=\"p-2 bd-highlight\">Justify\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Content\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Around\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex justify-content-evenly\">\n    \u003Cdiv class=\"p-2 bd-highlight\">Justify\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Content\u003C/div>\n    \u003Cdiv class=\"p-2 bd-highlight\">Evenly\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex justify-content-start\">...\u003C/div>\n\u003Cdiv class=\"d-flex justify-content-end\">...\u003C/div>\n\u003Cdiv class=\"d-flex justify-content-center\">...\u003C/div>\n\u003Cdiv class=\"d-flex justify-content-between\">...\u003C/div>\n\u003Cdiv class=\"d-flex justify-content-around\">...\u003C/div>\n\u003Cdiv class=\"d-flex justify-content-evenly\">...\u003C/div>\n```\n\nResponsive variations also exist for `justify-content`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.justify-content{breakpoint.abbr}-start\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.justify-content{breakpoint.abbr}-end\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.justify-content{breakpoint.abbr}-center\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.justify-content{breakpoint.abbr}-between\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.justify-content{breakpoint.abbr}-around\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.justify-content{breakpoint.abbr}-evenly\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Align items\n\nUse `align-items` utilities on flexbox containers to change the alignment of flex items on the cross axis (the y-axis to start, x-axis if `flex-direction: column`). Choose from `start`, `end`, `center`, `baseline`, or `stretch` (browser default).\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-items-start mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex align-items-end mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex align-items-center mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex align-items-baseline mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex align-items-stretch\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-items-start\">...\u003C/div>\n\u003Cdiv class=\"d-flex align-items-end\">...\u003C/div>\n\u003Cdiv class=\"d-flex align-items-center\">...\u003C/div>\n\u003Cdiv class=\"d-flex align-items-baseline\">...\u003C/div>\n\u003Cdiv class=\"d-flex align-items-stretch\">...\u003C/div>\n```\n\nResponsive variations also exist for `align-items`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.align-items{breakpoint.abbr}-start\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-items{breakpoint.abbr}-end\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-items{breakpoint.abbr}-center\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-items{breakpoint.abbr}-baseline\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-items{breakpoint.abbr}-stretch\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Align self\n\nUse `align-self` utilities on flexbox items to individually change their alignment on the cross axis (the y-axis to start, x-axis if `flex-direction: column`). Choose from the same options as `align-items`: `start`, `end`, `center`, `baseline`, or `stretch` (browser default).\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"align-self-start p-2\">Aligned flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"align-self-end p-2\">Aligned flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"align-self-center p-2\">Aligned flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex mb-3\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"align-self-baseline p-2\">Aligned flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"d-flex\" style=\"height: 100px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"align-self-stretch p-2\">Aligned flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"align-self-start\">Aligned flex item\u003C/div>\n\u003Cdiv class=\"align-self-end\">Aligned flex item\u003C/div>\n\u003Cdiv class=\"align-self-center\">Aligned flex item\u003C/div>\n\u003Cdiv class=\"align-self-baseline\">Aligned flex item\u003C/div>\n\u003Cdiv class=\"align-self-stretch\">Aligned flex item\u003C/div>\n```\n\nResponsive variations also exist for `align-self`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.align-self{breakpoint.abbr}-start\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-self{breakpoint.abbr}-end\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-self{breakpoint.abbr}-center\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-self{breakpoint.abbr}-baseline\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-self{breakpoint.abbr}-stretch\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Fill\n\nUse the `.flex-fill` class on a series of sibling elements to force them into widths equal to their content (or equal widths if their content does not surpass their border-boxes) while taking up all available horizontal space.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex\">\n  \u003Cdiv class=\"p-2 flex-fill\">Flex item with a lot of content\u003C/div>\n  \u003Cdiv class=\"p-2 flex-fill\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2 flex-fill\">Flex item\u003C/div>\n\u003C/div>`} />\n\nResponsive variations also exist for `flex-fill`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-fill\u003C/code>\u003C/li>\n  )\n})}\n\u003C/ul>\n\n## Grow and shrink\n\nUse `.flex-grow-*` utilities to toggle a flex item's ability to grow to fill available space. In the example below, the `.flex-grow-1` elements uses all available space it can, while allowing the remaining two flex items their necessary space.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex\">\n  \u003Cdiv class=\"p-2 flex-grow-1\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Third flex item\u003C/div>\n\u003C/div>`} />\n\nUse `.flex-shrink-*` utilities to toggle a flex item's ability to shrink if necessary. In the example below, the second flex item with `.flex-shrink-1` is forced to wrap its contents to a new line, \"shrinking\" to allow more space for the previous flex item with `.w-100`.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex\">\n  \u003Cdiv class=\"p-2 w-100\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2 flex-shrink-1\">Flex item\u003C/div>\n\u003C/div>`} />\n\nResponsive variations also exist for `flex-grow` and `flex-shrink`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-{'{'}grow|shrink{'}'}-0\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-{'{'}grow|shrink{'}'}-1\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Auto margins\n\nFlexbox can do some pretty awesome things when you mix flex alignments with auto margins. Shown below are three examples of controlling flex items via auto margins: default (no auto margin), pushing two items to the right (`.me-auto`), and pushing two items to the left (`.ms-auto`).\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex mb-3\">\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"d-flex mb-3\">\n  \u003Cdiv class=\"me-auto p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"d-flex mb-3\">\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"ms-auto p-2\">Flex item\u003C/div>\n\u003C/div>`} />\n\n### With align-items\n\nVertically move one flex item to the top or bottom of a container by mixing `align-items`, `flex-direction: column`, and `margin-top: auto` or `margin-bottom: auto`.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex align-items-start flex-column mb-3\" style=\"height: 200px;\">\n  \u003Cdiv class=\"mb-auto p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"d-flex align-items-end flex-column mb-3\" style=\"height: 200px;\">\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003Cdiv class=\"mt-auto p-2\">Flex item\u003C/div>\n\u003C/div>`} />\n\n## Wrap\n\nChange how flex items wrap in a flex container. Choose from no wrapping at all (the browser default) with `.flex-nowrap`, wrapping with `.flex-wrap`, or reverse wrapping with `.flex-wrap-reverse`.\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex flex-nowrap\" style=\"width: 8rem;\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex flex-nowrap\">\n  ...\n\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex flex-wrap\">\n    \u003Cdiv class=\"p-2\">Flex item 1\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 2\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 3\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 4\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 5\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 6\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 7\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 8\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 9\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 10\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 11\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 12\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 13\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 14\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex flex-wrap\">\n  ...\n\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex flex-wrap-reverse\">\n    \u003Cdiv class=\"p-2\">Flex item 1\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 2\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 3\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 4\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 5\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 6\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 7\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 8\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 9\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 10\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 11\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 12\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 13\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item 14\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex flex-wrap-reverse\">\n  ...\n\u003C/div>\n```\n\n\nResponsive variations also exist for `flex-wrap`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-nowrap\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-wrap\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.flex{breakpoint.abbr}-wrap-reverse\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Order\n\nChange the _visual_ order of specific flex items with a handful of `order` utilities. We only provide options for making an item first or last, as well as a reset to use the DOM order. As `order` takes any integer value from 0 to 5, add custom CSS for any additional values needed.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"d-flex flex-nowrap\">\n  \u003Cdiv class=\"order-3 p-2\">First flex item\u003C/div>\n  \u003Cdiv class=\"order-2 p-2\">Second flex item\u003C/div>\n  \u003Cdiv class=\"order-1 p-2\">Third flex item\u003C/div>\n\u003C/div>`} />\n\nResponsive variations also exist for `order`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => getSequence(0, 5).map((value) => {\n  return (\n    \u003Cli>\u003Ccode>.order{breakpoint.abbr}-{value}\u003C/code>\u003C/li>\n  )\n}))}\n\u003C/ul>\n\nAdditionally there are also responsive `.order-first` and `.order-last` classes that change the `order` of an element by applying `order: -1` and `order: 6`, respectively.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => ['first', 'last'].map((value) => {\n  return (\n    \u003Cli>\u003Ccode>.order{breakpoint.abbr}-{value}\u003C/code>\u003C/li>\n  )\n}))}\n\u003C/ul>\n\n## Align content\n\nUse `align-content` utilities on flexbox containers to align flex items _together_ on the cross axis. Choose from `start` (browser default), `end`, `center`, `between`, `around`, or `stretch`. To demonstrate these utilities, we've enforced `flex-wrap: wrap` and increased the number of flex items.\n\n**Heads up!** This property has no effect on single rows of flex items.\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-content-start flex-wrap mb-3\" style=\"height: 200px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-content-start flex-wrap\">\n  ...\n\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-content-end flex-wrap mb-3\" style=\"height: 200px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-content-end flex-wrap\">...\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-content-center flex-wrap mb-3\" style=\"height: 200px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-content-center flex-wrap\">...\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-content-between flex-wrap mb-3\" style=\"height: 200px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-content-between flex-wrap\">...\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-content-around flex-wrap mb-3\" style=\"height: 200px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-content-around flex-wrap\">...\u003C/div>\n```\n\n\u003Cdiv class=\"bd-example bd-example-flex\">\n  \u003Cdiv class=\"d-flex align-content-stretch flex-wrap mb-3\" style=\"height: 200px\">\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n    \u003Cdiv class=\"p-2\">Flex item\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"d-flex align-content-stretch flex-wrap\">...\u003C/div>\n```\n\nResponsive variations also exist for `align-content`.\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.align-content{breakpoint.abbr}-start\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-content{breakpoint.abbr}-end\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-content{breakpoint.abbr}-center\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-content{breakpoint.abbr}-between\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-content{breakpoint.abbr}-around\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.align-content{breakpoint.abbr}-stretch\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## Media object\n\nLooking to replicate the [media object component](https://getbootstrap.com/docs/4.6/components/media-object/) from Bootstrap 4? Recreate it in no time with a few flex utilities that allow even more flexibility and customization than before.\n\n\u003CExample code={`\u003Cdiv class=\"d-flex\">\n  \u003Cdiv class=\"flex-shrink-0\">\n    \u003CPlaceholder width=\"100\" height=\"100\" color=\"#999\" background=\"#e5e5e5\" text=\"Image\" />\n  \u003C/div>\n  \u003Cdiv class=\"flex-grow-1 ms-3\">\n    This is some content from a media component. You can replace this with any content and adjust it as needed.\n  \u003C/div>\n\u003C/div>`} />\n\nAnd say you want to vertically center the content next to the image:\n\n\u003CExample code={`\u003Cdiv class=\"d-flex align-items-center\">\n  \u003Cdiv class=\"flex-shrink-0\">\n    \u003CPlaceholder width=\"100\" height=\"100\" color=\"#999\" background=\"#e5e5e5\" text=\"Image\" />\n  \u003C/div>\n  \u003Cdiv class=\"flex-grow-1 ms-3\">\n    This is some content from a media component. You can replace this with any content and adjust it as needed.\n  \u003C/div>\n\u003C/div>`} />\n\n## CSS\n\n### Sass utilities API\n\nFlexbox utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-flex\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/flex.mdx","3f04645655fa6837","utilities/flex.mdx","utilities/float",{"id":1056,"data":1058,"body":1061,"filePath":1062,"digest":1063,"legacyId":1064,"deferredRender":139},{"description":1059,"title":1060,"toc":139},"Toggle floats on any element, across any breakpoint, using our responsive float utilities.","Float","import { getData } from '@libs/data'\n\n## Overview\n\nThese utility classes float an element to the left or right, or disable floating, based on the current viewport size using the [CSS `float` property](https://developer.mozilla.org/en-US/docs/Web/CSS/float). `!important` is included to avoid specificity issues. These use the same viewport breakpoints as our grid system. Please be aware float utilities have no effect on flex items.\n\n\u003CExample code={`\u003Cdiv class=\"float-start\">Float start on all viewport sizes\u003C/div>\u003Cbr>\n\u003Cdiv class=\"float-end\">Float end on all viewport sizes\u003C/div>\u003Cbr>\n\u003Cdiv class=\"float-none\">Don't float on all viewport sizes\u003C/div>`} />\n\nUse the [clearfix helper]([[docsref:/helpers/clearfix]]) on a parent element to clear floats.\n\n## Responsive\n\nResponsive variations also exist for each `float` value.\n\n\u003CExample code={`\u003Cdiv class=\"float-sm-end\">Float end on viewports sized SM (small) or wider\u003C/div>\u003Cbr>\n\u003Cdiv class=\"float-md-end\">Float end on viewports sized MD (medium) or wider\u003C/div>\u003Cbr>\n\u003Cdiv class=\"float-lg-end\">Float end on viewports sized LG (large) or wider\u003C/div>\u003Cbr>\n\u003Cdiv class=\"float-xl-end\">Float end on viewports sized XL (extra large) or wider\u003C/div>\u003Cbr>\n\u003Cdiv class=\"float-xxl-end\">Float end on viewports sized XXL (extra extra large) or wider\u003C/div>\u003Cbr>`} />\n\nHere are all the support classes:\n\n\u003Cul>\n{getData('breakpoints').map((breakpoint) => {\n  return (\n    \u003CFragment>\n      \u003Cli>\u003Ccode>.float{breakpoint.abbr}-start\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.float{breakpoint.abbr}-end\u003C/code>\u003C/li>\n      \u003Cli>\u003Ccode>.float{breakpoint.abbr}-none\u003C/code>\u003C/li>\n    \u003C/Fragment>\n  )\n})}\n\u003C/ul>\n\n## CSS\n\n### Sass utilities API\n\nFloat utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-float\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/float.mdx","7bfe246a5a884b8a","utilities/float.mdx","utilities/interactions",{"id":1065,"data":1067,"body":1070,"filePath":1071,"digest":1072,"legacyId":1073,"deferredRender":139},{"description":1068,"title":1069,"toc":325},"Utility classes that change how users interact with contents of a website.","Interactions","## Text selection\n\nChange the way in which the content is selected when the user interacts with it.\n\n\u003CExample code={`\u003Cp class=\"user-select-all\">This paragraph will be entirely selected when clicked by the user.\u003C/p>\n\u003Cp class=\"user-select-auto\">This paragraph has default select behavior.\u003C/p>\n\u003Cp class=\"user-select-none\">This paragraph will not be selectable when clicked by the user.\u003C/p>`} />\n\n## Pointer events\n\nBootstrap provides `.pe-none` and `.pe-auto` classes to prevent or add element interactions.\n\n\u003CExample code={`\u003Cp>\u003Ca href=\"#\" class=\"pe-none\" tabindex=\"-1\" aria-disabled=\"true\">This link\u003C/a> can not be clicked.\u003C/p>\n\u003Cp>\u003Ca href=\"#\" class=\"pe-auto\">This link\u003C/a> can be clicked (this is default behavior).\u003C/p>\n\u003Cp class=\"pe-none\">\u003Ca href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">This link\u003C/a> can not be clicked because the \u003Ccode>pointer-events\u003C/code> property is inherited from its parent. However, \u003Ca href=\"#\" class=\"pe-auto\">this link\u003C/a> has a \u003Ccode>pe-auto\u003C/code> class and can be clicked.\u003C/p>`} />\n\nThe `.pe-none` class (and the `pointer-events` CSS property it sets) only prevents interactions with a pointer (mouse, stylus, touch). Links and controls with `.pe-none` are, by default, still focusable and actionable for keyboard users. To ensure that they are completely neutralized even for keyboard users, you may need to add further attributes such as `tabindex=\"-1\"` (to prevent them from receiving keyboard focus) and `aria-disabled=\"true\"` (to convey the fact they are effectively disabled to assistive technologies), and possibly use JavaScript to completely prevent them from being actionable.\n\nIf possible, the simpler solution is:\n\n- For form controls, add the `disabled` HTML attribute.\n- For links, remove the `href` attribute, making it a non-interactive anchor or placeholder link.\n\n## CSS\n\n### Sass utilities API\n\nInteraction utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-interaction\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/interactions.mdx","ce4a42c6b30c0afc","utilities/interactions.mdx","utilities/link",{"id":1074,"data":1076,"body":1080,"filePath":1081,"digest":1082,"legacyId":1083,"deferredRender":139},{"added":1077,"description":1078,"title":1079,"toc":139},{"version":252},"Link utilities are used to stylize your anchors to adjust their color, opacity, underline offset, underline color, and more.","Link","import { getData } from '@libs/data'\n\n## Link opacity\n\nChange the alpha opacity of the link `rgba()` color value with utilities. Please be aware that changes to a color's opacity can lead to links with [*insufficient* contrast]([[docsref:getting-started/accessibility/#color-contrast]]).\n\n\u003CExample code={`\u003Cp>\u003Ca class=\"link-opacity-10\" href=\"#\">Link opacity 10\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-25\" href=\"#\">Link opacity 25\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-50\" href=\"#\">Link opacity 50\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-75\" href=\"#\">Link opacity 75\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-100\" href=\"#\">Link opacity 100\u003C/a>\u003C/p>`} />\n\nYou can even change the opacity level on hover.\n\n\u003CExample code={`\u003Cp>\u003Ca class=\"link-opacity-10-hover\" href=\"#\">Link hover opacity 10\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-25-hover\" href=\"#\">Link hover opacity 25\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-50-hover\" href=\"#\">Link hover opacity 50\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-75-hover\" href=\"#\">Link hover opacity 75\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-opacity-100-hover\" href=\"#\">Link hover opacity 100\u003C/a>\u003C/p>`} />\n\n## Link underlines\n\n### Underline color\n\nChange the underline's color independent of the link text color.\n\n\u003CExample code={getData('theme-colors').map((themeColor) => `\u003Cp>\u003Ca href=\"#\" class=\"link-underline-${themeColor.name}\">${themeColor.title} underline\u003C/a>\u003C/p>`)} />\n\n### Underline offset\n\nChange the underline's distance from your text. Offset is set in `em` units to automatically scale with the element's current `font-size`.\n\n\u003CExample code={`\u003Cp>\u003Ca href=\"#\">Default link\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-1\" href=\"#\">Offset 1 link\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-2\" href=\"#\">Offset 2 link\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-3\" href=\"#\">Offset 3 link\u003C/a>\u003C/p>`} />\n\n### Underline opacity\n\nChange the underline's opacity. Requires adding `.link-underline` to first set an `rgba()` color we use to then modify the alpha opacity.\n\n\u003CExample code={`\u003Cp>\u003Ca class=\"link-offset-2 link-underline link-underline-opacity-0\" href=\"#\">Underline opacity 0\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-2 link-underline link-underline-opacity-10\" href=\"#\">Underline opacity 10\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-2 link-underline link-underline-opacity-25\" href=\"#\">Underline opacity 25\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-2 link-underline link-underline-opacity-50\" href=\"#\">Underline opacity 50\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-2 link-underline link-underline-opacity-75\" href=\"#\">Underline opacity 75\u003C/a>\u003C/p>\n\u003Cp>\u003Ca class=\"link-offset-2 link-underline link-underline-opacity-100\" href=\"#\">Underline opacity 100\u003C/a>\u003C/p>`} />\n\n### Hover variants\n\nJust like the `.link-opacity-*-hover` utilities, `.link-offset` and `.link-underline-opacity` utilities include `:hover` variants by default. Mix and match to create unique link styles.\n\n\u003Ca class=\"link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover\" href=\"#\">\n  Underline opacity 0\n\u003C/a>\n\n## Colored links\n\n[Colored link helpers]([[docsref:/helpers/colored-links/]]) have been updated to pair with our link utilities. Use the new utilities to modify the link opacity, underline opacity, and underline offset.\n\n\u003CExample code={[\n  ...getData('theme-colors').map((themeColor) => `\u003Cp>\u003Ca href=\"#\" class=\"link-${themeColor.name} link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover\">${themeColor.title} link\u003C/a>\u003C/p>`),\n  `\u003Cp>\u003Ca href=\"#\" class=\"link-body-emphasis link-offset-2 link-underline-opacity-25 link-underline-opacity-75-hover\">Emphasis link\u003C/a>\u003C/p>`\n]} />\n\n\u003CCallout name=\"warning-color-assistive-technologies\" />\n\n## CSS\n\nIn addition to the following Sass functionality, consider reading about our included [CSS custom properties]([[docsref:/customize/css-variables]]) (aka CSS variables) for colors and more.\n\n### Sass utilities API\n\nLink utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-links\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/link.mdx","58135df20523383b","utilities/link.mdx","utilities/object-fit",{"id":1084,"data":1086,"body":1090,"filePath":1091,"digest":1092,"legacyId":1093,"deferredRender":139},{"added":1087,"description":1088,"title":1089,"toc":139},{"version":252},"Use the object fit utilities to modify how the content of a [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element), such as an `\u003Cimg>` or `\u003Cvideo>`, should be resized to fit its container.","Object fit","## How it works\n\nChange the value of the [`object-fit` property](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) with our responsive `object-fit` utility classes. This property tells the content to fill the parent container in a variety of ways, such as preserving the aspect ratio or stretching to take up as much space as possible.\n\nClasses for the value of `object-fit` are named using the format `.object-fit-{value}`. Choose from the following values:\n\n- `contain`\n- `cover`\n- `fill`\n- `scale` (for scale-down)\n- `none`\n\n## Examples\n\nAdd the `object-fit-{value}` class to the [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element):\n\n\u003CExample class=\"d-flex overflow-auto\" code={`\u003CPlaceholder width=\"140\" height=\"120\" class=\"object-fit-contain border rounded\" text=\"Object fit contain\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"120\" class=\"object-fit-cover border rounded\" text=\"Object fit cover\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"120\" class=\"object-fit-fill border rounded\" text=\"Object fit fill\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"120\" class=\"object-fit-scale border rounded\" text=\"Object fit scale down\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"120\" class=\"object-fit-none border rounded\" text=\"Object fit none\" markup=\"img\" />`} />\n\n## Responsive\n\nResponsive variations also exist for each `object-fit` value using the format `.object-fit-{breakpoint}-{value}`, for the following breakpoint abbreviations: `sm`, `md`, `lg`, `xl`, and `xxl`. Classes can be combined for various effects as you need.\n\n\u003CExample class=\"d-flex overflow-auto\" code={`\u003CPlaceholder width=\"140\" height=\"80\" class=\"object-fit-sm-contain border rounded\" text=\"Contain on sm\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"80\" class=\"object-fit-md-contain border rounded\" text=\"Contain on md\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"80\" class=\"object-fit-lg-contain border rounded\" text=\"Contain on lg\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"80\" class=\"object-fit-xl-contain border rounded\" text=\"Contain on xl\" markup=\"img\" />\n\u003CPlaceholder width=\"140\" height=\"80\" class=\"object-fit-xxl-contain border rounded\" text=\"Contain on xxl\" markup=\"img\" />`} />\n\n## Video\n\nThe `.object-fit-{value}` and responsive `.object-fit-{breakpoint}-{value}` utilities also work on `\u003Cvideo>` elements.\n\n```html\n\u003Cvideo src=\"...\" class=\"object-fit-contain\" autoplay>\u003C/video>\n\u003Cvideo src=\"...\" class=\"object-fit-cover\" autoplay>\u003C/video>\n\u003Cvideo src=\"...\" class=\"object-fit-fill\" autoplay>\u003C/video>\n\u003Cvideo src=\"...\" class=\"object-fit-scale\" autoplay>\u003C/video>\n\u003Cvideo src=\"...\" class=\"object-fit-none\" autoplay>\u003C/video>\n```\n\n## CSS\n\n### Sass utilities API\n\nObject fit utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-object-fit\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/object-fit.mdx","03cf222ad6c3af13","utilities/object-fit.mdx","utilities/opacity",{"id":1094,"data":1096,"body":1100,"filePath":1101,"digest":1102,"legacyId":1103,"deferredRender":139},{"added":1097,"description":1098,"title":1099},{"version":499},"Control the opacity of elements.","Opacity","The `opacity` property sets the opacity level for an element. The opacity level describes the transparency level, where `1` is not transparent at all, `.5` is 50% visible, and `0` is completely transparent.\n\nSet the `opacity` of an element using `.opacity-{value}` utilities.\n\n\u003Cdiv class=\"bd-example d-sm-flex\">\n  \u003Cdiv class=\"opacity-100 p-3 m-2 bg-primary text-light fw-bold rounded\">100%\u003C/div>\n  \u003Cdiv class=\"opacity-75 p-3 m-2 bg-primary text-light fw-bold rounded\">75%\u003C/div>\n  \u003Cdiv class=\"opacity-50 p-3 m-2 bg-primary text-light fw-bold rounded\">50%\u003C/div>\n  \u003Cdiv class=\"opacity-25 p-3 m-2 bg-primary text-light fw-bold rounded\">25%\u003C/div>\n  \u003Cdiv class=\"opacity-0 p-3 m-2 bg-primary text-light fw-bold rounded\">0%\u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"opacity-100\">...\u003C/div>\n\u003Cdiv class=\"opacity-75\">...\u003C/div>\n\u003Cdiv class=\"opacity-50\">...\u003C/div>\n\u003Cdiv class=\"opacity-25\">...\u003C/div>\n\u003Cdiv class=\"opacity-0\">...\u003C/div>\n```\n\n## CSS\n\n### Sass utilities API\n\nOpacity utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-opacity\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/opacity.mdx","f51d418be7cb3930","utilities/opacity.mdx","utilities/overflow",{"id":1104,"data":1106,"body":1109,"filePath":1110,"digest":1111,"legacyId":1112,"deferredRender":139},{"description":1107,"title":1108,"toc":139},"Use these shorthand utilities for quickly configuring how content overflows an element.","Overflow","## Overflow\n\nAdjust the `overflow` property on the fly with four default values and classes. These classes are not responsive by default.\n\n\u003Cdiv class=\"bd-example d-md-flex\">\n  \u003Cdiv class=\"overflow-auto p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary\" style=\"max-width: 260px; max-height: 100px;\">\n    This is an example of using \u003Ccode>.overflow-auto\u003C/code> on an element with set width and height dimensions. By design, this content will vertically scroll.\n  \u003C/div>\n  \u003Cdiv class=\"overflow-hidden p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary\" style=\"max-width: 260px; max-height: 100px;\">\n    This is an example of using \u003Ccode>.overflow-hidden\u003C/code> on an element with set width and height dimensions.\n  \u003C/div>\n  \u003Cdiv class=\"overflow-visible p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary\" style=\"max-width: 260px; max-height: 100px;\">\n    This is an example of using \u003Ccode>.overflow-visible\u003C/code> on an element with set width and height dimensions.\n  \u003C/div>\n  \u003Cdiv class=\"overflow-scroll p-3 bg-body-tertiary\" style=\"max-width: 260px; max-height: 100px;\">\n    This is an example of using \u003Ccode>.overflow-scroll\u003C/code> on an element with set width and height dimensions.\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"overflow-auto\">...\u003C/div>\n\u003Cdiv class=\"overflow-hidden\">...\u003C/div>\n\u003Cdiv class=\"overflow-visible\">...\u003C/div>\n\u003Cdiv class=\"overflow-scroll\">...\u003C/div>\n```\n\n### `overflow-x`\n\nAdjust the `overflow-x` property to affect the overflow of content horizontally.\n\n\u003Cdiv class=\"bd-example d-md-flex\">\n  \u003Cdiv class=\"overflow-x-auto p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px; white-space: nowrap;\">\n    \u003Cdiv>\u003Ccode>.overflow-x-auto\u003C/code> example on an element\u003C/div>\n    \u003Cdiv> with set width and height dimensions.\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"overflow-x-hidden p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;white-space: nowrap;\">\n    \u003Cdiv>\u003Ccode>.overflow-x-hidden\u003C/code> example\u003C/div>\n    \u003Cdiv>on an element with set width and height dimensions.\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"overflow-x-visible p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;white-space: nowrap;\">\n    \u003Cdiv>\u003Ccode>.overflow-x-visible\u003C/code> example \u003C/div>\n    \u003Cdiv>on an element with set width and height dimensions.\u003C/div>\n  \u003C/div>\n  \u003Cdiv class=\"overflow-x-scroll p-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;white-space: nowrap;\">\n    \u003Cdiv>\u003Ccode>.overflow-x-scroll\u003C/code> example on an element\u003C/div>\n    \u003Cdiv> with set width and height dimensions.\u003C/div>\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"overflow-x-auto\">...\u003C/div>\n\u003Cdiv class=\"overflow-x-hidden\">...\u003C/div>\n\u003Cdiv class=\"overflow-x-visible\">...\u003C/div>\n\u003Cdiv class=\"overflow-x-scroll\">...\u003C/div>\n```\n\n### `overflow-y`\n\nAdjust the `overflow-y` property to affect the overflow of content vertically.\n\n\u003Cdiv class=\"bd-example d-md-flex\">\n  \u003Cdiv class=\"overflow-y-auto p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;\">\n    \u003Ccode>.overflow-y-auto\u003C/code> example on an element with set width and height dimensions.\n  \u003C/div>\n  \u003Cdiv class=\"overflow-y-hidden p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;\">\n    \u003Ccode>.overflow-y-hidden\u003C/code> example on an element with set width and height dimensions.\n  \u003C/div>\n  \u003Cdiv class=\"overflow-y-visible p-3 mb-3 mb-md-0 me-md-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;\">\n    \u003Ccode>.overflow-y-visible\u003C/code> example on an element with set width and height dimensions.\n  \u003C/div>\n  \u003Cdiv class=\"overflow-y-scroll p-3 bg-body-tertiary w-100\" style=\"max-width: 200px; max-height: 100px;\">\n    \u003Ccode>.overflow-y-scroll\u003C/code> example on an element with set width and height dimensions.\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"overflow-y-auto\">...\u003C/div>\n\u003Cdiv class=\"overflow-y-hidden\">...\u003C/div>\n\u003Cdiv class=\"overflow-y-visible\">...\u003C/div>\n\u003Cdiv class=\"overflow-y-scroll\">...\u003C/div>\n```\n\nUsing Sass variables, you may customize the overflow utilities by changing the `$overflows` variable in `_variables.scss`.\n\n## CSS\n\n### Sass utilities API\n\nOverflow utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-overflow\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/overflow.mdx","10e01357f66e8a1b","utilities/overflow.mdx","utilities/position",{"id":1113,"data":1115,"body":1117,"filePath":1118,"digest":1119,"legacyId":1120,"deferredRender":139},{"description":1116,"title":865,"toc":139},"Use these shorthand utilities for quickly configuring the position of an element.","## Position values\n\nQuick positioning classes are available, though they are not responsive.\n\n```html\n\u003Cdiv class=\"position-static\">...\u003C/div>\n\u003Cdiv class=\"position-relative\">...\u003C/div>\n\u003Cdiv class=\"position-absolute\">...\u003C/div>\n\u003Cdiv class=\"position-fixed\">...\u003C/div>\n\u003Cdiv class=\"position-sticky\">...\u003C/div>\n```\n\n## Arrange elements\n\nArrange elements easily with the edge positioning utilities. The format is `{property}-{position}`.\n\nWhere *property* is one of:\n\n- `top` - for the vertical `top` position\n- `start` - for the horizontal `left` position (in LTR)\n- `bottom` - for the vertical `bottom` position\n- `end` - for the horizontal `right` position (in LTR)\n\nWhere *position* is one of:\n\n- `0` - for `0` edge position\n- `50` - for `50%` edge position\n- `100` - for `100%` edge position\n\n(You can add more position values by adding entries to the `$position-values` Sass map variable.)\n\n\u003CExample class=\"bd-example-position-utils\" code={`\u003Cdiv class=\"position-relative\">\n  \u003Cdiv class=\"position-absolute top-0 start-0\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-0 end-0\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 start-50\">\u003C/div>\n  \u003Cdiv class=\"position-absolute bottom-50 end-50\">\u003C/div>\n  \u003Cdiv class=\"position-absolute bottom-0 start-0\">\u003C/div>\n  \u003Cdiv class=\"position-absolute bottom-0 end-0\">\u003C/div>\n\u003C/div>`} />\n\n## Center elements\n\nIn addition, you can also center the elements with the transform utility class `.translate-middle`.\n\nThis class applies the transformations `translateX(-50%)` and `translateY(-50%)` to the element which, in combination with the edge positioning utilities, allows you to absolute center an element.\n\n\u003CExample class=\"bd-example-position-utils\" code={`\u003Cdiv class=\"position-relative\">\n  \u003Cdiv class=\"position-absolute top-0 start-0 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-0 start-50 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-0 start-100 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 start-0 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 start-50 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 start-100 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-100 start-0 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-100 start-50 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-100 start-100 translate-middle\">\u003C/div>\n\u003C/div>`} />\n\nBy adding `.translate-middle-x` or `.translate-middle-y` classes, elements can be positioned only in horizontal or vertical direction.\n\n\u003CExample class=\"bd-example-position-utils\" code={`\u003Cdiv class=\"position-relative\">\n  \u003Cdiv class=\"position-absolute top-0 start-0\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-0 start-50 translate-middle-x\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-0 end-0\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 start-0 translate-middle-y\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 start-50 translate-middle\">\u003C/div>\n  \u003Cdiv class=\"position-absolute top-50 end-0 translate-middle-y\">\u003C/div>\n  \u003Cdiv class=\"position-absolute bottom-0 start-0\">\u003C/div>\n  \u003Cdiv class=\"position-absolute bottom-0 start-50 translate-middle-x\">\u003C/div>\n  \u003Cdiv class=\"position-absolute bottom-0 end-0\">\u003C/div>\n\u003C/div>`} />\n\n## Examples\n\nHere are some real life examples of these classes:\n\n\u003CExample class=\"bd-example-position-examples d-flex justify-content-around align-items-center\" code={`\u003Cbutton type=\"button\" class=\"btn btn-primary position-relative\">\n  Mails \u003Cspan class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill text-bg-secondary\">+99 \u003Cspan class=\"visually-hidden\">unread messages\u003C/span>\u003C/span>\n\u003C/button>\n\n\u003Cdiv class=\"position-relative py-2 px-4 text-bg-secondary border border-secondary rounded-pill\">\n  Marker \u003Csvg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"position-absolute top-100 start-50 translate-middle mt-1\" fill=\"var(--bs-secondary)\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\u003Cpath d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\u003C/svg>\n\u003C/div>\n\n\u003Cbutton type=\"button\" class=\"btn btn-primary position-relative\">\n  Alerts \u003Cspan class=\"position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2\">\u003Cspan class=\"visually-hidden\">unread messages\u003C/span>\u003C/span>\n\u003C/button>`} />\n\nYou can use these classes with existing components to create new ones. Remember that you can extend its functionality by adding entries to the `$position-values` variable.\n\n\u003CExample class=\"bd-example-position-examples\" code={`\u003Cdiv class=\"position-relative m-4\">\n  \u003Cdiv class=\"progress\" role=\"progressbar\" aria-label=\"Progress\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"height: 1px;\">\n    \u003Cdiv class=\"progress-bar\" style=\"width: 50%\">\u003C/div>\n  \u003C/div>\n  \u003Cbutton type=\"button\" class=\"position-absolute top-0 start-0 translate-middle btn btn-sm btn-primary rounded-pill\" style=\"width: 2rem; height:2rem;\">1\u003C/button>\n  \u003Cbutton type=\"button\" class=\"position-absolute top-0 start-50 translate-middle btn btn-sm btn-primary rounded-pill\" style=\"width: 2rem; height:2rem;\">2\u003C/button>\n  \u003Cbutton type=\"button\" class=\"position-absolute top-0 start-100 translate-middle btn btn-sm btn-secondary rounded-pill\" style=\"width: 2rem; height:2rem;\">3\u003C/button>\n\u003C/div>`} />\n\n## CSS\n\n### Sass maps\n\nDefault position utility values are declared in a Sass map, then used to generate our utilities.\n\n\u003CScssDocs name=\"position-map\" file=\"scss/_variables.scss\" />\n\n### Sass utilities API\n\nPosition utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-position\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/position.mdx","10a850bf1fa704cd","utilities/position.mdx","utilities/shadows",{"id":1121,"data":1123,"body":1126,"filePath":1127,"digest":1128,"legacyId":1129,"deferredRender":139},{"description":1124,"title":1125,"toc":139},"Add or remove shadows to elements with box-shadow utilities.","Shadows","## Examples\n\nWhile shadows on components are disabled by default in Bootstrap and can be enabled via `$enable-shadows`, you can also quickly add or remove a shadow with our `box-shadow` utility classes. Includes support for `.shadow-none` and three default sizes (which have associated variables to match).\n\n\u003CExample class=\"overflow-hidden\" code={`\u003Cdiv class=\"shadow-none p-3 mb-5 bg-body-tertiary rounded\">No shadow\u003C/div>\n\u003Cdiv class=\"shadow-sm p-3 mb-5 bg-body-tertiary rounded\">Small shadow\u003C/div>\n\u003Cdiv class=\"shadow p-3 mb-5 bg-body-tertiary rounded\">Regular shadow\u003C/div>\n\u003Cdiv class=\"shadow-lg p-3 mb-5 bg-body-tertiary rounded\">Larger shadow\u003C/div>`} />\n\n## CSS\n\n### Sass variables\n\n\u003CScssDocs name=\"box-shadow-variables\" file=\"scss/_variables.scss\" />\n\n### Sass utilities API\n\nShadow utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-shadow\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/shadows.mdx","a080b6fd9dc8a40e","utilities/shadows.mdx","utilities/sizing",{"id":1130,"data":1132,"body":1135,"filePath":1136,"digest":1137,"legacyId":1138,"deferredRender":139},{"description":1133,"title":1134,"toc":139},"Easily make an element as wide or as tall with our width and height utilities.","Sizing","## Relative to the parent\n\nWidth and height utilities are generated from the utility API in `_utilities.scss`. Includes support for `25%`, `50%`, `75%`, `100%`, and `auto` by default. Modify those values as you need to generate different utilities here.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv class=\"w-25 p-3\">Width 25%\u003C/div>\n\u003Cdiv class=\"w-50 p-3\">Width 50%\u003C/div>\n\u003Cdiv class=\"w-75 p-3\">Width 75%\u003C/div>\n\u003Cdiv class=\"w-100 p-3\">Width 100%\u003C/div>\n\u003Cdiv class=\"w-auto p-3\">Width auto\u003C/div>`} />\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv style=\"height: 100px;\">\n  \u003Cdiv class=\"h-25 d-inline-block\" style=\"width: 120px;\">Height 25%\u003C/div>\n  \u003Cdiv class=\"h-50 d-inline-block\" style=\"width: 120px;\">Height 50%\u003C/div>\n  \u003Cdiv class=\"h-75 d-inline-block\" style=\"width: 120px;\">Height 75%\u003C/div>\n  \u003Cdiv class=\"h-100 d-inline-block\" style=\"width: 120px;\">Height 100%\u003C/div>\n  \u003Cdiv class=\"h-auto d-inline-block\" style=\"width: 120px;\">Height auto\u003C/div>\n\u003C/div>`} />\n\nYou can also use `max-width: 100%;` and `max-height: 100%;` utilities as needed.\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv style=\"width: 50%; height: 100px;\">\n  \u003Cdiv class=\"mw-100\" style=\"width: 200%;\">Max-width 100%\u003C/div>\n\u003C/div>`} />\n\n\u003CExample class=\"bd-example-flex\" code={`\u003Cdiv style=\"height: 100px;\">\n  \u003Cdiv class=\"mh-100\" style=\"width: 100px; height: 200px;\">Max-height 100%\u003C/div>\n\u003C/div>`} />\n\n## Relative to the viewport\n\nYou can also use utilities to set the width and height relative to the viewport.\n\n```html\n\u003Cdiv class=\"min-vw-100\">Min-width 100vw\u003C/div>\n\u003Cdiv class=\"min-vh-100\">Min-height 100vh\u003C/div>\n\u003Cdiv class=\"vw-100\">Width 100vw\u003C/div>\n\u003Cdiv class=\"vh-100\">Height 100vh\u003C/div>\n```\n\n## CSS\n\n### Sass utilities API\n\nSizing utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-sizing\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/sizing.mdx","b8c5e585709241af","utilities/sizing.mdx","utilities/spacing",{"id":1139,"data":1141,"body":1144,"filePath":1145,"digest":1146,"legacyId":1147,"deferredRender":139},{"description":1142,"title":1143,"toc":139},"Bootstrap includes a wide range of shorthand responsive margin, padding, and gap utility classes to modify an element's appearance.","Spacing","## Margin and padding\n\nAssign responsive-friendly `margin` or `padding` values to an element or a subset of its sides with shorthand classes. Includes support for individual properties, all properties, and vertical and horizontal properties. Classes are built from a default Sass map ranging from `.25rem` to `3rem`.\n\n\u003CCallout>\n**Using the CSS Grid layout module?** Consider using [the gap utility](#gap) instead.\n\u003C/Callout>\n\n### Notation\n\nSpacing utilities that apply to all breakpoints, from `xs` to `xxl`, have no breakpoint abbreviation in them. This is because those classes are applied from `min-width: 0` and up, and thus are not bound by a media query. The remaining breakpoints, however, do include a breakpoint abbreviation.\n\nThe classes are named using the format `{property}{sides}-{size}` for `xs` and `{property}{sides}-{breakpoint}-{size}` for `sm`, `md`, `lg`, `xl`, and `xxl`.\n\nWhere *property* is one of:\n\n- `m` - for classes that set `margin`\n- `p` - for classes that set `padding`\n\nWhere *sides* is one of:\n\n- `t` - for classes that set `margin-top` or `padding-top`\n- `b` - for classes that set `margin-bottom` or `padding-bottom`\n- `s` - (start) for classes that set `margin-left` or `padding-left` in LTR, `margin-right` or `padding-right` in RTL\n- `e` - (end) for classes that set `margin-right` or `padding-right` in LTR, `margin-left` or `padding-left` in RTL\n- `x` - for classes that set both `*-left` and `*-right`\n- `y` - for classes that set both `*-top` and `*-bottom`\n- blank - for classes that set a `margin` or `padding` on all 4 sides of the element\n\nWhere *size* is one of:\n\n- `0` - for classes that eliminate the `margin` or `padding` by setting it to `0`\n- `1` - (by default) for classes that set the `margin` or `padding` to `$spacer * .25`\n- `2` - (by default) for classes that set the `margin` or `padding` to `$spacer * .5`\n- `3` - (by default) for classes that set the `margin` or `padding` to `$spacer`\n- `4` - (by default) for classes that set the `margin` or `padding` to `$spacer * 1.5`\n- `5` - (by default) for classes that set the `margin` or `padding` to `$spacer * 3`\n- `auto` - for classes that set the `margin` to auto\n\n(You can add more sizes by adding entries to the `$spacers` Sass map variable.)\n\n### Examples\n\nHere are some representative examples of these classes:\n\n```scss\n.mt-0 {\n  margin-top: 0 !important;\n}\n\n.ms-1 {\n  margin-left: ($spacer * .25) !important;\n}\n\n.px-2 {\n  padding-left: ($spacer * .5) !important;\n  padding-right: ($spacer * .5) !important;\n}\n\n.p-3 {\n  padding: $spacer !important;\n}\n```\n\n### Horizontal centering\n\nAdditionally, Bootstrap also includes an `.mx-auto` class for horizontally centering fixed-width block level content—that is, content that has `display: block` and a `width` set—by setting the horizontal margins to `auto`.\n\n\u003Cdiv class=\"bd-example\">\n  \u003Cdiv class=\"mx-auto p-2\" style=\"width: 200px; background-color: rgba(var(--bd-violet-rgb),.15); border: rgba(var(--bd-violet-rgb),.3) solid 1px;\">\n    Centered element\n  \u003C/div>\n\u003C/div>\n\n```html\n\u003Cdiv class=\"mx-auto p-2\" style=\"width: 200px;\">\n  Centered element\n\u003C/div>\n```\n\n## Negative margin\n\nIn CSS, `margin` properties can utilize negative values (`padding` cannot). These negative margins are **disabled by default**, but can be enabled in Sass by setting `$enable-negative-margins: true`.\n\nThe syntax is nearly the same as the default, positive margin utilities, but with the addition of `n` before the requested size. Here's an example class that's the opposite of `.mt-1`:\n\n```scss\n.mt-n1 {\n  margin-top: -0.25rem !important;\n}\n```\n\n## Gap\n\nWhen using `display: grid` or `display: flex`, you can make use of `gap` utilities on the parent element. This can save on having to add margin utilities to individual children of a grid or flex container. Gap utilities are responsive by default, and are generated via our utilities API, based on the `$spacers` Sass map.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv style=\"grid-template-columns: 1fr 1fr;\" class=\"d-grid gap-3\">\n  \u003Cdiv class=\"p-2\">Grid item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 3\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 4\u003C/div>\n\u003C/div>`} />\n\nSupport includes responsive options for all of Bootstrap's grid breakpoints, as well as six sizes from the `$spacers` map (`0`–`5`). There is no `.gap-auto` utility class as it's effectively the same as `.gap-0`.\n\n### row-gap\n\n`row-gap` sets the vertical space between children items in the specified container.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv style=\"grid-template-columns: 1fr 1fr;\" class=\"d-grid gap-0 row-gap-3\">\n  \u003Cdiv class=\"p-2\">Grid item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 3\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 4\u003C/div>\n\u003C/div>`} />\n\n### column-gap\n\n`column-gap` sets the horizontal space between children items in the specified container.\n\n\u003CExample class=\"bd-example-cssgrid\" code={`\u003Cdiv style=\"grid-template-columns: 1fr 1fr;\" class=\"d-grid gap-0 column-gap-3\">\n  \u003Cdiv class=\"p-2\">Grid item 1\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 2\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 3\u003C/div>\n  \u003Cdiv class=\"p-2\">Grid item 4\u003C/div>\n\u003C/div>`} />\n\n## CSS\n\n### Sass maps\n\nSpacing utilities are declared via Sass map and then generated with our utilities API.\n\n\u003CScssDocs name=\"spacer-variables-maps\" file=\"scss/_variables.scss\" />\n\n### Sass utilities API\n\nSpacing utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-spacing\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/spacing.mdx","f71c48846901084e","utilities/spacing.mdx","utilities/text",{"id":1148,"data":1150,"body":1153,"filePath":1154,"digest":1155,"legacyId":1156,"deferredRender":139},{"description":1151,"title":1152,"toc":139},"Documentation and examples for common text utilities to control alignment, wrapping, weight, and more.","Text","## Text alignment\n\nEasily realign text to components with text alignment classes. For start, end, and center alignment, responsive classes are available that use the same viewport width breakpoints as the grid system.\n\n\u003CExample code={`\u003Cp class=\"text-start\">Start aligned text on all viewport sizes.\u003C/p>\n\u003Cp class=\"text-center\">Center aligned text on all viewport sizes.\u003C/p>\n\u003Cp class=\"text-end\">End aligned text on all viewport sizes.\u003C/p>\n\n\u003Cp class=\"text-sm-end\">End aligned text on viewports sized SM (small) or wider.\u003C/p>\n\u003Cp class=\"text-md-end\">End aligned text on viewports sized MD (medium) or wider.\u003C/p>\n\u003Cp class=\"text-lg-end\">End aligned text on viewports sized LG (large) or wider.\u003C/p>\n\u003Cp class=\"text-xl-end\">End aligned text on viewports sized XL (extra large) or wider.\u003C/p>\n\u003Cp class=\"text-xxl-end\">End aligned text on viewports sized XXL (extra extra large) or wider.\u003C/p>`} />\n\n\u003CCallout>\nNote that we don't provide utility classes for justified text. While, aesthetically, justified text might look more appealing, it does make word-spacing more random and therefore harder to read.\n\u003C/Callout>\n\n## Text wrapping and overflow\n\nWrap text with a `.text-wrap` class.\n\n\u003CExample code={`\u003Cdiv class=\"badge text-bg-primary text-wrap\" style=\"width: 6rem;\">\n  This text should wrap.\n\u003C/div>`} />\n\nPrevent text from wrapping with a `.text-nowrap` class.\n\n\u003CExample code={`\u003Cdiv class=\"text-nowrap bg-body-secondary border\" style=\"width: 8rem;\">\n  This text should overflow the parent.\n\u003C/div>`} />\n\n## Word break\n\nPrevent long strings of text from breaking your components' layout by using `.text-break` to set `word-wrap: break-word` and `word-break: break-word`. We use `word-wrap` instead of the more common `overflow-wrap` for wider browser support, and add the deprecated `word-break: break-word` to avoid issues with flex containers.\n\n\u003CExample code={`\u003Cp class=\"text-break\">mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\u003C/p>`} />\n\n\u003CCallout type=\"warning\">\nNote that [breaking words isn't possible in Arabic](https://rtlstyling.com/posts/rtl-styling#3.-line-break), which is the most used RTL language. Therefore `.text-break` is removed from our RTL compiled CSS.\n\u003C/Callout>\n\n## Text transform\n\nTransform text in components with our text capitalization classes: `text-lowercase`, `text-uppercase` or `text-capitalize`.\n\n\u003CExample code={`\u003Cp class=\"text-lowercase\">Lowercased text.\u003C/p>\n\u003Cp class=\"text-uppercase\">Uppercased text.\u003C/p>\n\u003Cp class=\"text-capitalize\">CapiTaliZed text.\u003C/p>`} />\n\nNote how `.text-capitalize` only changes the first letter of each word, leaving the case of any other letters unaffected.\n\n## Font size\n\nQuickly change the `font-size` of text. While our heading classes (e.g., `.h1`–`.h6`) apply `font-size`, `font-weight`, and `line-height`, these utilities _only_ apply `font-size`. Sizing for these utilities matches HTML's heading elements, so as the number increases, their size decreases.\n\n\u003CExample code={`\u003Cp class=\"fs-1\">.fs-1 text\u003C/p>\n\u003Cp class=\"fs-2\">.fs-2 text\u003C/p>\n\u003Cp class=\"fs-3\">.fs-3 text\u003C/p>\n\u003Cp class=\"fs-4\">.fs-4 text\u003C/p>\n\u003Cp class=\"fs-5\">.fs-5 text\u003C/p>\n\u003Cp class=\"fs-6\">.fs-6 text\u003C/p>`} />\n\nCustomize your available `font-size`s by modifying the `$font-sizes` Sass map.\n\n## Font weight and italics\n\nQuickly change the `font-weight` or `font-style` of text with these utilities. `font-style` utilities are abbreviated as `.fst-*` and `font-weight` utilities are abbreviated as `.fw-*`.\n\n\u003CExample code={`\u003Cp class=\"fw-bold\">Bold text.\u003C/p>\n\u003Cp class=\"fw-bolder\">Bolder weight text (relative to the parent element).\u003C/p>\n\u003Cp class=\"fw-semibold\">Semibold weight text.\u003C/p>\n\u003Cp class=\"fw-medium\">Medium weight text.\u003C/p>\n\u003Cp class=\"fw-normal\">Normal weight text.\u003C/p>\n\u003Cp class=\"fw-light\">Light weight text.\u003C/p>\n\u003Cp class=\"fw-lighter\">Lighter weight text (relative to the parent element).\u003C/p>\n\u003Cp class=\"fst-italic\">Italic text.\u003C/p>\n\u003Cp class=\"fst-normal\">Text with normal font style\u003C/p>`} />\n\n## Line height\n\nChange the line height with `.lh-*` utilities.\n\n\u003CExample code={`\u003Cp class=\"lh-1\">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.\u003C/p>\n\u003Cp class=\"lh-sm\">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.\u003C/p>\n\u003Cp class=\"lh-base\">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.\u003C/p>\n\u003Cp class=\"lh-lg\">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.\u003C/p>`} />\n\n## Monospace\n\nChange a selection to our monospace font stack with `.font-monospace`.\n\n\u003CExample code={`\u003Cp class=\"font-monospace\">This is in monospace\u003C/p>`} />\n\n## Reset color\n\nReset a text or link's color with `.text-reset`, so that it inherits the color from its parent.\n\n\u003CExample code={`\u003Cp class=\"text-body-secondary\">\n  Secondary body text with a \u003Ca href=\"#\" class=\"text-reset\">reset link\u003C/a>.\n\u003C/p>`} />\n\n## Text decoration\n\nDecorate text in components with text decoration classes.\n\n\u003CExample code={`\u003Cp class=\"text-decoration-underline\">This text has a line underneath it.\u003C/p>\n\u003Cp class=\"text-decoration-line-through\">This text has a line going through it.\u003C/p>\n\u003Ca href=\"#\" class=\"text-decoration-none\">This link has its text decoration removed\u003C/a>`} />\n\n## CSS\n\n### Sass variables\n\nDefault type and font related Sass variables:\n\n\u003CScssDocs name=\"font-variables\" file=\"scss/_variables.scss\" />\n\n### Sass maps\n\nFont-size utilities are generated from this map, in combination with our utilities API.\n\n\u003CScssDocs name=\"font-sizes\" file=\"scss/_variables.scss\" />\n\n\u003CScssDocs name=\"theme-text-map\" file=\"scss/_maps.scss\" />\n\n### Sass utilities API\n\nFont and text utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-text\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/text.mdx","b415bbe3adbc8908","utilities/text.mdx","utilities/vertical-align",{"id":1157,"data":1159,"body":1162,"filePath":1163,"digest":1164,"legacyId":1165,"deferredRender":139},{"description":1160,"title":1161},"Easily change the vertical alignment of inline, inline-block, inline-table, and table cell elements.","Vertical alignment","Change the alignment of elements with the [`vertical-alignment`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) utilities. Please note that vertical-align only affects inline, inline-block, inline-table, and table cell elements.\n\nChoose from `.align-baseline`, `.align-top`, `.align-middle`, `.align-bottom`, `.align-text-bottom`, and `.align-text-top` as needed.\n\nTo vertically center non-inline content (like `\u003Cdiv>`s and more), use our [flex box utilities]([[docsref:/utilities/flex#align-items]]).\n\nWith inline elements:\n\n\u003CExample code={`\u003Cspan class=\"align-baseline\">baseline\u003C/span>\n\u003Cspan class=\"align-top\">top\u003C/span>\n\u003Cspan class=\"align-middle\">middle\u003C/span>\n\u003Cspan class=\"align-bottom\">bottom\u003C/span>\n\u003Cspan class=\"align-text-top\">text-top\u003C/span>\n\u003Cspan class=\"align-text-bottom\">text-bottom\u003C/span>`} />\n\nWith table cells:\n\n\u003CExample code={`\u003Ctable style=\"height: 100px;\">\n  \u003Ctbody>\n    \u003Ctr>\n      \u003Ctd class=\"align-baseline\">baseline\u003C/td>\n      \u003Ctd class=\"align-top\">top\u003C/td>\n      \u003Ctd class=\"align-middle\">middle\u003C/td>\n      \u003Ctd class=\"align-bottom\">bottom\u003C/td>\n      \u003Ctd class=\"align-text-top\">text-top\u003C/td>\n      \u003Ctd class=\"align-text-bottom\">text-bottom\u003C/td>\n    \u003C/tr>\n  \u003C/tbody>\n\u003C/table>`} />\n\n## CSS\n\n### Sass utilities API\n\nVertical align utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-vertical-align\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/vertical-align.mdx","9d6429b2397af545","utilities/vertical-align.mdx","utilities/visibility",{"id":1166,"data":1168,"body":1171,"filePath":1172,"digest":1173,"legacyId":1174,"deferredRender":139},{"description":1169,"title":1170},"Control the visibility of elements, without modifying their display, with visibility utilities.","Visibility","Set the `visibility` of elements with our visibility utilities. These utility classes do not modify the `display` value at all and do not affect layout – `.invisible` elements still take up space in the page.\n\n\u003CCallout type=\"warning\">\nElements with the `.invisible` class will be hidden *both* visually and for assistive technology/screen reader users.\n\u003C/Callout>\n\nApply `.visible` or `.invisible` as needed.\n\n```html\n\u003Cdiv class=\"visible\">...\u003C/div>\n\u003Cdiv class=\"invisible\">...\u003C/div>\n```\n\n```scss\n// Class\n.visible {\n  visibility: visible !important;\n}\n.invisible {\n  visibility: hidden !important;\n}\n```\n\n## CSS\n\n### Sass utilities API\n\nVisibility utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-visibility\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/visibility.mdx","9943b6d24f399f72","utilities/visibility.mdx","utilities/z-index",{"id":1175,"data":1177,"body":1180,"filePath":1181,"digest":1182,"legacyId":1183,"deferredRender":139},{"added":1178,"description":1179,"title":978,"toc":139},{"version":252},"Use our low-level `z-index` utilities to quickly change the stack level of an element or component.","## Example\n\nUse `z-index` utilities to stack elements on top of one another. Requires a `position` value other than `static`, which can be set with custom styles or using our [position utilities]([[docsref:/utilities/position/]]).\n\n\u003CCallout>\nWe call these \"low-level\" `z-index` utilities because of their default values of `-1` through `3`, which we use for the layout of overlapping components. High-level `z-index` values are used for overlay components like modals and tooltips.\n\u003C/Callout>\n\n\u003CExample class=\"bd-example-zindex-levels position-relative\" code={`\u003Cdiv class=\"z-3 position-absolute p-5 rounded-3\">\u003Cspan>z-3\u003C/span>\u003C/div>\n\u003Cdiv class=\"z-2 position-absolute p-5 rounded-3\">\u003Cspan>z-2\u003C/span>\u003C/div>\n\u003Cdiv class=\"z-1 position-absolute p-5 rounded-3\">\u003Cspan>z-1\u003C/span>\u003C/div>\n\u003Cdiv class=\"z-0 position-absolute p-5 rounded-3\">\u003Cspan>z-0\u003C/span>\u003C/div>\n\u003Cdiv class=\"z-n1 position-absolute p-5 rounded-3\">\u003Cspan>z-n1\u003C/span>\u003C/div>`} />\n\n## Overlays\n\nBootstrap overlay components—dropdown, modal, offcanvas, popover, toast, and tooltip—all have their own `z-index` values to ensure a usable experience with competing \"layers\" of an interface.\n\nRead about them in the [`z-index` layout page]([[docsref:/layout/z-index]]).\n\n## Component approach\n\nOn some components, we use our low-level `z-index` values to manage repeating elements that overlap one another (like buttons in a button group or items in a list group).\n\nLearn about our [`z-index` approach]([[docsref:/extend/approach#z-index-scales]]).\n\n## CSS\n\n### Sass maps\n\nCustomize this Sass map to change the available values and generated utilities.\n\n\u003CScssDocs name=\"zindex-levels-map\" file=\"scss/_variables.scss\" />\n\n### Sass utilities API\n\nPosition utilities are declared in our utilities API in `scss/_utilities.scss`. [Learn how to use the utilities API.]([[docsref:/utilities/api#using-the-api]])\n\n\u003CScssDocs name=\"utils-zindex\" file=\"scss/_utilities.scss\" />","src/content/docs/utilities/z-index.mdx","74e2a5798d9fa8b6","utilities/z-index.mdx"]