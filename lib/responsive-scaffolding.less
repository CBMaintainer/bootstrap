/*
 * Scaffolding
 * Basic and global styles for generating a grid system, structural layout, and page templates
 * ------------------------------------------------------------------------------------------- */


// STRUCTURAL LAYOUT
// -----------------

html, body {
  background-color: @white;
}
body {
  margin: 0;
  #font > .sans-serif(normal,@basefont,@baseline);
  color: @grayDark;
}

// Container (centered, fixed-width layouts)
.container {
  .fixed-container();
}
.responsive {
  .container;
}

// Fluid layouts (left aligned, with sidebar, min- & max-width content)
.container-fluid {
  position: relative;
  min-width: 940px;
  padding-left: 20px;
  padding-right: 20px;
  .clearfix();
  > .sidebar {
    float: left;
    width: 220px;
  }
  // TODO in v2: rename this and .popover .content to be more specific
  > .content {
    margin-left: 240px;
  }
}


// BASE STYLES
// -----------

// Links
a {
  color: @linkColor;
  text-decoration: none;
  line-height: inherit;
  font-weight: inherit;
  &:hover {
    color: @linkColorHover;
    text-decoration: underline;
  }
}

// Quick floats
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}

// Toggling content
.hide {
  display: none;
}
.show {
  display: block;
}


// GRID SYSTEM
// -----------
// To customize the grid system, bring up the variables.less file and change the column count, size, and gutter there

.row {
  .clearfix();
  // margin-left: -1 * @gridGutterWidth;
  width: 102.127659574468%; // 960/940
  margin-left: -2.040816326531%; // -20/980 
}

// Find all .span# classes within .row and give them the necessary properties for grid columns (supported by all browsers back to IE7)
// Credit to @dhg for the idea
[class*="span"] {
  .gridColumn();
}

// Default columns
.span1     { .columns(1); }
.span2     { .columns(2); }
.span3     { .columns(3); }
.span4     { .columns(4); }
.span5     { .columns(5); }
.span6     { .columns(6); }
.span7     { .columns(7); }
.span8     { .columns(8); }
.span9     { .columns(9); }
.span10    { .columns(10); }
.span11    { .columns(11); }
.span12    { .columns(12); }
.span13    { .columns(13); }
.span14    { .columns(14); }
.span15    { .columns(15); }
.span16    { .columns(16); }

// For optional 24-column grid
.span17    { .columns(17); }
.span18    { .columns(18); }
.span19    { .columns(19); }
.span20    { .columns(20); }
.span21    { .columns(21); }
.span22    { .columns(22); }
.span23    { .columns(23); }
.span24    { .columns(24); }

// Offset column options
.offset1   { .offset(1); }
.offset2   { .offset(2); }
.offset3   { .offset(3); }
.offset4   { .offset(4); }
.offset5   { .offset(5); }
.offset6   { .offset(6); }
.offset7   { .offset(7); }
.offset8   { .offset(8); }
.offset9   { .offset(9); }
.offset10  { .offset(10); }
.offset11  { .offset(11); }
.offset12  { .offset(12); }

// Unique column sizes for 16-column grid
.span-one-third     { width: 31.25%; } // 300 / 960 * 100
.span-two-thirds    { width: 64.583333333333%; } // 620 / 960 * 100
.offset-one-third   { margin-left: 35.416666666667%; } // 340 / 960 * 100
.offset-two-thirds  { margin-left: 68.75%; } // 660 / 960 * 100

// OOCSS grid experiment
// TODO: get the actual values and remove this mixin
.width-less-margin(@width: 100%) {
  width: @width - @gridGutterWidth;
}

.line,.lastUnit{overflow:hidden; *overflow:visible;*zoom:1;}
.line{.row}

.unit{float:left; margin-left: @gridGutterWidth;text-align: center;}
.unitRight{float:right;}
.size1of1{float:none; .width-less-margin(100%);.unit}
.size1of2{.width-less-margin(50%); .unit}
.size1of3{.width-less-margin(33.33333%); .unit}
.size2of3{.width-less-margin(66.66666%); .unit}
.size1of4{.width-less-margin(25%); .unit}
.size3of4{.width-less-margin(75%); .unit}
.size1of5{.width-less-margin(20%); .unit}
.size2of5{.width-less-margin(40%); .unit}
.size3of5{.width-less-margin(60%); .unit}
.size4of5{.width-less-margin(80%); .unit}
.lastUnit{float:none;width:auto;_position:relative;margin-left:0;_left:-3px;_margin-right:-3px;}
.secondToLastUnit{margin-right: @gridGutterWidth;}

// rules for test display purposes only
.unit{background: #eee;min-height:30px;line-height:30px;}
.line{margin-top: 10px}
