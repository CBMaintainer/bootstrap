{"version":3,"sources":["../src/scrollspy.js"],"names":[],"mappings":"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","file":"scrollspy.js","sourcesContent":["import Util from './util'\n\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.2): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst ScrollSpy = (($) => {\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME               = 'scrollspy'\n  const VERSION            = '4.0.0-alpha.2'\n  const DATA_KEY           = 'bs.scrollspy'\n  const EVENT_KEY          = `.${DATA_KEY}`\n  const DATA_API_KEY       = '.data-api'\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\n\n  const Default = {\n    offset : 10,\n    method : 'auto',\n    target : ''\n  }\n\n  const DefaultType = {\n    offset : 'number',\n    method : 'string',\n    target : '(string|element)'\n  }\n\n  const Event = {\n    ACTIVATE      : `activate${EVENT_KEY}`,\n    SCROLL        : `scroll${EVENT_KEY}`,\n    LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n  const ClassName = {\n    DROPDOWN_ITEM : 'dropdown-item',\n    DROPDOWN_MENU : 'dropdown-menu',\n    NAV_LINK      : 'nav-link',\n    NAV           : 'nav',\n    ACTIVE        : 'active'\n  }\n\n  const Selector = {\n    DATA_SPY        : '[data-spy=\"scroll\"]',\n    ACTIVE          : '.active',\n    LIST_ITEM       : '.list-item',\n    LI              : 'li',\n    LI_DROPDOWN     : 'li.dropdown',\n    NAV_LINKS       : '.nav-link',\n    DROPDOWN        : '.dropdown',\n    DROPDOWN_ITEMS  : '.dropdown-item',\n    DROPDOWN_TOGGLE : '.dropdown-toggle'\n  }\n\n  const OffsetMethod = {\n    OFFSET   : 'offset',\n    POSITION : 'position'\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class ScrollSpy {\n\n    constructor(element, config) {\n      this._element       = element\n      this._scrollElement = element.tagName === 'BODY' ? window : element\n      this._config        = this._getConfig(config)\n      this._selector      = `${this._config.target} ${Selector.NAV_LINKS},`\n                          + `${this._config.target} ${Selector.DROPDOWN_ITEMS}`\n      this._offsets       = []\n      this._targets       = []\n      this._activeTarget  = null\n      this._scrollHeight  = 0\n\n      $(this._scrollElement).on(Event.SCROLL, $.proxy(this._process, this))\n\n      this.refresh()\n      this._process()\n    }\n\n\n    // getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n\n    // public\n\n    refresh() {\n      let autoMethod = this._scrollElement !== this._scrollElement.window ?\n        OffsetMethod.POSITION : OffsetMethod.OFFSET\n\n      let offsetMethod = this._config.method === 'auto' ?\n        autoMethod : this._config.method\n\n      let offsetBase = offsetMethod === OffsetMethod.POSITION ?\n        this._getScrollTop() : 0\n\n      this._offsets = []\n      this._targets = []\n\n      this._scrollHeight = this._getScrollHeight()\n\n      let targets = $.makeArray($(this._selector))\n\n      targets\n        .map((element) => {\n          let target\n          let targetSelector = Util.getSelectorFromElement(element)\n\n          if (targetSelector) {\n            target = $(targetSelector)[0]\n          }\n\n          if (target && (target.offsetWidth || target.offsetHeight)) {\n            // todo (fat): remove sketch reliance on jQuery position/offset\n            return [\n              $(target)[offsetMethod]().top + offsetBase,\n              targetSelector\n            ]\n          }\n        })\n        .filter((item)  => item)\n        .sort((a, b)    => a[0] - b[0])\n        .forEach((item) => {\n          this._offsets.push(item[0])\n          this._targets.push(item[1])\n        })\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY)\n      $(this._scrollElement).off(EVENT_KEY)\n\n      this._element       = null\n      this._scrollElement = null\n      this._config        = null\n      this._selector      = null\n      this._offsets       = null\n      this._targets       = null\n      this._activeTarget  = null\n      this._scrollHeight  = null\n    }\n\n\n    // private\n\n    _getConfig(config) {\n      config = $.extend({}, Default, config)\n\n      if (typeof config.target !== 'string') {\n        let id = $(config.target).attr('id')\n        if (!id) {\n          id = Util.getUID(NAME)\n          $(config.target).attr('id', id)\n        }\n        config.target = `#${id}`\n      }\n\n      Util.typeCheckConfig(NAME, config, DefaultType)\n\n      return config\n    }\n\n    _getScrollTop() {\n      return this._scrollElement === window ?\n          this._scrollElement.scrollY : this._scrollElement.scrollTop\n    }\n\n    _getScrollHeight() {\n      return this._scrollElement.scrollHeight || Math.max(\n        document.body.scrollHeight,\n        document.documentElement.scrollHeight\n      )\n    }\n\n    _process() {\n      let scrollTop    = this._getScrollTop() + this._config.offset\n      let scrollHeight = this._getScrollHeight()\n      let maxScroll    = this._config.offset\n        + scrollHeight\n        - this._scrollElement.offsetHeight\n\n      if (this._scrollHeight !== scrollHeight) {\n        this.refresh()\n      }\n\n      if (scrollTop >= maxScroll) {\n        let target = this._targets[this._targets.length - 1]\n\n        if (this._activeTarget !== target) {\n          this._activate(target)\n        }\n      }\n\n      if (this._activeTarget && scrollTop < this._offsets[0]) {\n        this._activeTarget = null\n        this._clear()\n        return\n      }\n\n      for (let i = this._offsets.length; i--;) {\n        let isActiveTarget = this._activeTarget !== this._targets[i]\n            && scrollTop >= this._offsets[i]\n            && (this._offsets[i + 1] === undefined ||\n                scrollTop < this._offsets[i + 1])\n\n        if (isActiveTarget) {\n          this._activate(this._targets[i])\n        }\n      }\n    }\n\n    _activate(target) {\n      this._activeTarget = target\n\n      this._clear()\n\n      let queries = this._selector.split(',')\n      queries     = queries.map((selector) => {\n        return `${selector}[data-target=\"${target}\"],` +\n               `${selector}[href=\"${target}\"]`\n      })\n\n      let $link = $(queries.join(','))\n\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)\n        $link.addClass(ClassName.ACTIVE)\n      } else {\n        // todo (fat) this is kinda sus...\n        // recursively add actives to tested nav-links\n        $link.parents(Selector.LI).find(Selector.NAV_LINKS).addClass(ClassName.ACTIVE)\n      }\n\n      $(this._scrollElement).trigger(Event.ACTIVATE, {\n        relatedTarget: target\n      })\n    }\n\n    _clear() {\n      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE)\n    }\n\n\n    // static\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data    = $(this).data(DATA_KEY)\n        let _config = typeof config === 'object' && config || null\n\n        if (!data) {\n          data = new ScrollSpy(this, _config)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (typeof config === 'string') {\n          if (data[config] === undefined) {\n            throw new Error(`No method named \"${config}\"`)\n          }\n          data[config]()\n        }\n      })\n    }\n\n\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(window).on(Event.LOAD_DATA_API, () => {\n    let scrollSpys = $.makeArray($(Selector.DATA_SPY))\n\n    for (let i = scrollSpys.length; i--;) {\n      let $spy = $(scrollSpys[i])\n      ScrollSpy._jQueryInterface.call($spy, $spy.data())\n    }\n  })\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME]             = ScrollSpy._jQueryInterface\n  $.fn[NAME].Constructor = ScrollSpy\n  $.fn[NAME].noConflict  = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return ScrollSpy._jQueryInterface\n  }\n\n  return ScrollSpy\n\n})(jQuery)\n\nexport default ScrollSpy\n"]}