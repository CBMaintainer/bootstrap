{"version":3,"sources":["../src/util.js"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.2): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst Util = (($) => {\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Private TransitionEnd Helpers\n   * ------------------------------------------------------------------------\n   */\n\n  let transition = false\n\n  const TransitionEndEvent = {\n    WebkitTransition : 'webkitTransitionEnd',\n    MozTransition    : 'transitionend',\n    OTransition      : 'oTransitionEnd otransitionend',\n    transition       : 'transitionend'\n  }\n\n  // shoutout AngusCroll (https://goo.gl/pxwQGp)\n  function toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\n  }\n\n  function isElement(obj) {\n    return (obj[0] || obj).nodeType\n  }\n\n  function getSpecialTransitionEndEvent() {\n    return {\n      bindType: transition.end,\n      delegateType: transition.end,\n      handle(event) {\n        if ($(event.target).is(this)) {\n          return event.handleObj.handler.apply(this, arguments)\n        }\n      }\n    }\n  }\n\n  function transitionEndTest() {\n    if (window.QUnit) {\n      return false\n    }\n\n    let el = document.createElement('bootstrap')\n\n    for (let name in TransitionEndEvent) {\n      if (el.style[name] !== undefined) {\n        return { end: TransitionEndEvent[name] }\n      }\n    }\n\n    return false\n  }\n\n  function transitionEndEmulator(duration) {\n    let called = false\n\n    $(this).one(Util.TRANSITION_END, () => {\n      called = true\n    })\n\n    setTimeout(() => {\n      if (!called) {\n        Util.triggerTransitionEnd(this)\n      }\n    }, duration)\n\n    return this\n  }\n\n  function setTransitionEndSupport() {\n    transition = transitionEndTest()\n\n    $.fn.emulateTransitionEnd = transitionEndEmulator\n\n    if (Util.supportsTransitionEnd()) {\n      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n    }\n  }\n\n\n  /**\n   * --------------------------------------------------------------------------\n   * Public Util Api\n   * --------------------------------------------------------------------------\n   */\n\n  let Util = {\n\n    TRANSITION_END: 'bsTransitionEnd',\n\n    getUID(prefix) {\n      do {\n        /* eslint-disable no-bitwise */\n        prefix += ~~(Math.random() * 1000000) // \"~~\" acts like a faster Math.floor() here\n        /* eslint-enable no-bitwise */\n      } while (document.getElementById(prefix))\n      return prefix\n    },\n\n    getSelectorFromElement(element) {\n      let selector = element.getAttribute('data-target')\n\n      if (!selector) {\n        selector = element.getAttribute('href') || ''\n        selector = /^#[a-z]/i.test(selector) ? selector : null\n      }\n\n      return selector\n    },\n\n    reflow(element) {\n      new Function('bs', 'return bs')(element.offsetHeight)\n    },\n\n    triggerTransitionEnd(element) {\n      $(element).trigger(transition.end)\n    },\n\n    supportsTransitionEnd() {\n      return Boolean(transition)\n    },\n\n    typeCheckConfig(componentName, config, configTypes) {\n      for (let property in configTypes) {\n        if (configTypes.hasOwnProperty(property)) {\n          let expectedTypes = configTypes[property]\n          let value         = config[property]\n          let valueType\n\n          if (value && isElement(value)) {\n            valueType = 'element'\n          } else {\n            valueType = toType(value)\n          }\n\n          if (!new RegExp(expectedTypes).test(valueType)) {\n            throw new Error(\n              `${componentName.toUpperCase()}: ` +\n              `Option \"${property}\" provided type \"${valueType}\" ` +\n              `but expected type \"${expectedTypes}\".`)\n          }\n        }\n      }\n    }\n  }\n\n  setTransitionEndSupport()\n\n  return Util\n\n})(jQuery)\n\nexport default Util\n"]}